---

##
# Creates an encrypted AMI for RHEL, which can be used as the base AMI for
# new EC2 instances.
# 
# The process used here is largely taken from this excellent blog post:
# http://www.davekonopka.com/2016/ec2-encrypted-boot-volumes.html
##

- name: Create Encrypted RHEL AMI
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    
    - name: Find Encrypted RHEL AMI (If It Exists)
      ec2_ami_find:
        owner: self
        ami_tags:
          BaseAMI: "{{ ami_id_rhel_7_unencrypted }}"
          Encrypted: 'true'
        no_result_action: success
        region: "{{ aws_region }}"
      register: ami_find_encrypted
      changed_when: false

    # Create an encrypted copy of the AMI, but only if it doesn't already 
    # exist.
    - block:

      # Marketplace AMIs cannot be copied directly. Instead, we have to first
      # provision an instance from the AMI, and create an AMI of the instance.
      # That new AMI _can_ be copied and encrypted. Yes, this is dumb.
      - name: Provision EC2 Instance of Unencrypted RHEL AMI
        ec2:
          key_name: "{{ ec2_key_name }}"
          group:
            - default
          instance_type: t2.micro
          image: "{{ ami_id_rhel_7_unencrypted }}"
          region: "{{ aws_region }}"
          zone: "{{ aws_zone }}"
          wait: true
          exact_count: 1
          count_tag:
            Name: rhel-7-unencrypted-ami-base
          instance_tags:
            Name: rhel-7-unencrypted-ami-base
            Application: "{{ ec2_tag_application }}"
            CreatedBy: "{{ whoami.stdout }}"
        register: ec2_rhel_unencrypted

      - name: Create Unencrypted Copy of RHEL AMI
        ec2_ami:
          instance_id: "{{ ec2_rhel_unencrypted.instance_ids[0] }}"
          region: "{{ aws_region }}"
          wait: true
          name: "Unencrypted Copy of RHEL AMI '{{ ami_id_rhel_7_unencrypted }}'"
          tags:
            BaseAMI: "{{ ami_id_rhel_7_unencrypted }}"
            Encrypted: 'false'
        register: ami_unencrypted

      - name: Terminate EC2 Instance of Unencrypted RHEL AMI
        ec2:
          state: 'absent'
          instance_ids: "{{ ec2_rhel_unencrypted.instance_ids[0] }}"
          region: "{{ aws_region }}"
          wait: true

      - name: Create Encrypted Copy of RHEL AMI
        ec2_ami_copy:
          source_image_id: "{{ ami_unencrypted.image_id }}"
          source_region: "{{ aws_region }}"
          region: "{{ aws_region }}"
          encrypted: true
          wait: true
          name: "Encrypted Copy of RHEL AMI '{{ ami_id_rhel_7_unencrypted }}'"
          tags:
            BaseAMI: "{{ ami_id_rhel_7_unencrypted }}"
            Encrypted: 'true'
        register: ami_copy_encrypted

      - name: Delete Unencrypted Copy of RHEL AMI
        ec2_ami:
          image_id: "{{ ami_unencrypted.image_id }}"
          region: "{{ aws_region }}"
          state: absent
          delete_snapshot: true
          wait: true

      when: ami_find_encrypted.results|length <= 0

    - set_fact: ami_id_rhel_7_encrypted="{{ ami_find_encrypted.results[0].ami_id if ami_find_encrypted.results|length > 0 else ami_copy_encrypted.image_id }}"

