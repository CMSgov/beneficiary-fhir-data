#!/usr/bin/env groovy

// These variables are accessible throughout this file (except inside methods and classes).
def verboseMaven = params.verbose_mvn_logging
def appBuildResults

pipeline {
    agent {
        kubernetes {
            defaultContainer 'bfd-cbc-build'
            yaml """
apiVersion: v1
kind: Pod
spec:
  serviceAccount: bfd
  containers:
  - name: bfd-cbc-build
    image: 'public.ecr.aws/c2o1d8s9/bfd-cbc-build:jdk17-mvn3-tfenv3-latest'
    command:
    - cat
    tty: true
    imagePullPolicy: Always
    resources:
      requests:
        memory: '16384Mi'
        cpu: '8000m'
      limits:
        memory: '16384Mi'
        cpu: '8000m'
"""
        }
    }
    parameters {
        booleanParam(name: 'verbose_mvn_logging',
        description: 'When true, `mvn` will produce verbose logs.',
        defaultValue: false)
        }
    environment {
        SONAR_TOKEN = credentials('svc-sonar-bfd')
        SONAR_PROJECT_KEY = 'bfd-parent'
        SONAR_HOST_URL = 'https://sonarqube.cloud.cms.gov'
    }
    stages {
        stage('Build Stage') {
            // Build Step
         steps {
                script {
                   // Load the child Jenkinsfiles.
                   scriptForApps = load('apps/build.groovy')
                   //Authentication of AWS to run Build.groovy
                   awsAuth.assumeRole()
                   // Perform Build steps
                   appBuildResults = scriptForApps.build(verboseMaven)
                }
            }
        }
        stage ('SonarQube Analysis') {
            steps {
                script {
                    sh "mvn -f apps/ sonar:sonar" +
                    " -Dsonar.projectKey=${SONAR_PROJECT_KEY}" +
                    " -Dsonar.host.url=${SONAR_HOST_URL}" +
                    " -Dsonar.login=${SONAR_TOKEN}" +
                    " -Dmaven.build.cache.enabled=false"
                }
            }
        }
    }
}
