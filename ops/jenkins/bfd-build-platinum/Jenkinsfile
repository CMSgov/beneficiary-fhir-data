#!/usr/bin/env groovy

/**
 * <p>
 * This script will be run by Jenkins when building platinum AMI images.
 * </p>
 */

// These variables are accessible throughout this file (except inside methods and classes).
def awsCredentials
def appBuildResults
def amiIds
def platinumAmiId
def goldAmiId
def platinumAmiSourceTag
def currentStage

pipeline {
  agent {
    kubernetes {
      defaultContainer 'bfd-cbc-build'
      yaml """
apiVersion: v1
kind: Pod
spec:
  serviceAccount: bfd
  containers:
  - name: bfd-cbc-build
    image: 'public.ecr.aws/c2o1d8s9/bfd-cbc-build:jdk11-mvn3-an29-tfenv-aeaa61fa6'
    command:
    - cat
    tty: true
    imagePullPolicy: Always
    resources:
      requests:
        memory: '16384Mi'
        cpu: '8000m'
      limits:
        memory: '16384Mi'
        cpu: '8000m'
"""
    }
  }

    stages {
        stage('Prepare') {
            steps {
                script {
                   // Load the child Jenkinsfiles.
					scriptForApps = load('apps/build.groovy')
					scriptForDeploys = load('ops/deploy-ccs.groovy')
                }
            }
        }

        stage('Find AMIs') {
            steps {
                script {
                    awsAuth.assumeRole()

                    def amiSourceTagKey = "amiSourceId"
                    def goldqueryValue = "amzn2legacy*"

                    platinumAmiId = sh(
                    returnStdout: true,
                    script: "aws ec2 describe-images --owners self --filters \
                    'Name=name,Values=bfd-amzn2-jdk11-platinum-??????????????' \
                    'Name=state,Values=available' --region us-east-1 --output json | \
                    jq -r '.Images | sort_by(.CreationDate) | last(.[]).ImageId'"
                    ).trim()

                    goldAmiId = sh(
                    returnStdout: true,
                    script: "aws ec2 describe-images --filters \
                    'Name=name,Values=${goldqueryValue}' \
                    'Name=state,Values=available' --region us-east-1 --output json | \
                    jq -r '.Images | sort_by(.CreationDate) | last(.[]).ImageId'"
                    ).trim() 

                    platinumAmiSourceTag = sh(
                    returnStdout: true,
                    script: "aws ec2 describe-images \
                    --filters 'Name=tag:${amiSourceTagKey},Values=${goldAmiId}' \
                    --query 'Images[*].[ImageId]' \
                     --output text"
                    ).trim()
                }
            }
        }

        stage('Build Platinum AMI') {
            steps {
                echo platinumAmiId
                echo goldAmiId
                echo platinumAmiSourceTag

                // amiIds = scriptForDeploys.buildPlatinumAmi(amiIds)
            }
        }
    }
}
