---
- name: Install Pre-requisites
  yum:
    pkg:
      - java-11-openjdk-devel
      - iptables
  become: true

- name: Create Server User
  user:
    name: "{{ data_server_user }}"
    shell: /bin/false
  become: true

- name: Add server user to sudoers file
  lineinfile:
    path: /etc/sudoers
    state: present
    line: "{{ data_server_user }} ALL=(ALL) NOPASSWD: /sbin/iptables"
    validate: /usr/sbin/visudo -cf %s
  become: true

- name: Create Server Directory
  file:
    path: "{{ data_server_dir }}"
    state: directory
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rwx,g=rx,o=rx
  become: true


# Create the temp directory if and only if it's missing. (Don't want to
# accidentally change the permissions on /tmp.)
- name: Check for Custom Temp Directory
  stat:
    path: "{{ data_server_tmp_dir }}"
  become: true
  register: stat_tmp
  when: data_server_tmp_dir is defined

- name: Create Custom Temp Directory
  file:
    path: "{{ data_server_tmp_dir }}"
    state: directory
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rwx,g=rx,o=rx
  become: true
  when: data_server_tmp_dir is defined and stat_tmp.stat.exists == false

- name: Copy and Unzip BFD Server Launcher
  unarchive:
    src: "{{ data_server_launcher }}"
    dest: "{{ data_server_dir }}"
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
  become: true

- name: Copy BFD Server WAR
  copy:
    src: "{{ data_server_war }}"
    dest: "{{ data_server_dir }}/{{ data_server_war | basename }}"
  become: true

- name: Create New Relic Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rwx,g=rx,o=rx
  become: true
  loop:
    - "{{ data_server_dir }}/newrelic"
    - "{{ data_server_dir }}/newrelic/extensions"

- name: Find New Relic Agent
  find:
    paths: "{{ data_server_dir }}/bfd-server-launcher-1.0.0-SNAPSHOT/lib/"
    pattern: newrelic-agent*.jar
  register: find_nra

- name: Copy New Relic Java Agent
  copy:
    src: "{{ item.path }}"
    dest: "{{ data_server_dir }}/newrelic/newrelic.jar"
    remote_src: true
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rw,g=r,o=r
  with_items:
    - "{{ find_nra.files }}"
  become: true

- name: Copy New Relic Java Agent Config
  template:
    src: 'newrelic.yml.j2'
    dest: "{{ data_server_dir }}/newrelic/newrelic.yml"
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rw,g=r
  become: true

- name: Configure New Relic Extensions
  template:
    src: 'newrelic_tracing.xml.j2'
    dest: "{{ data_server_dir }}/newrelic/extensions/tracing.xml"
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rw,g=r,o=r
  become: true

- name: Create AWS Distro for OpenTelemetry Java Auto-Instrumentation and X-Ray Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rwx,g=rx,o=rx
  become: true
  loop:
    - "{{ data_server_dir }}/aws_otel_java"

- name: Find AWS Distro for OpenTelemetry Java Auto-Instrumentation and X-Ray JAR
  find:
    paths: "{{ data_server_dir }}/bfd-server-launcher-1.0.0-SNAPSHOT/lib/"
    pattern: aws-opentelemetry-agent*.jar
  register: find_opentelemetry_agent

- name: Copy AWS Distro for OpenTelemetry Java Auto-Instrumentation and X-Ray  JAR
  copy:
    src: "{{ item.path }}"
    dest: "{{ data_server_dir }}/aws_otel_java/aws-opentelemetry-agent.jar"
    remote_src: true
    owner: "{{ data_server_user }}"
    group: "{{ data_server_user }}"
    mode: u=rw,g=r,o=r
  with_items:
    - "{{ find_opentelemetry_agent.files }}"
  become: true

### Logrotate Stuff
- name: Configure bfd-server Log Rotation
  template:
    src: 'bfd-server.j2'
    dest: /etc/logrotate.d/bfd-server
  become: true
