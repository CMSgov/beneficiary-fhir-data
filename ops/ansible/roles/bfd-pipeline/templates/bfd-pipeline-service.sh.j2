#!/bin/bash

# shellcheck disable=SC1054,SC1064,SC1065,SC1072,SC1073,SC1083
export BFD_CCW_JOB_ENABLED={{ enabled if pipeline_instance_type == 'ccw' else 'false' }} {# derived from terraform control plane #}{{ '\n' }}
export BFD_RDA_JOB_ENABLED={{ enabled if pipeline_instance_type == 'rda' else 'false' }} {# derived from terraform control plane #}{{ '\n' }}

export BFD_DB_URL='{{ db_url }}'

{{ '#' if db_password_override|default('', true)|length<1 else '' }}export BFD_DB_PASSWORD='{{ db_password_override|default('', true) }}'                      {# application defaults to ssm db/password #}{{ '\n' }}
{{ '#' if db_username_override|default('', true)|length<1 else '' }}export BFD_DB_USERNAME='{{ db_username_override|default('', true) }}'                      {# application defaults to ssm db/username #}{{ '\n' }}
{{ '#' if db_auth_type_override|default('', true)|length<1 else '' }}export BFD_DB_AUTH_TYPE='{{ db_auth_type_override|default('', true) }}'                   {# application defaults to ssm db/auth_type #}{{ '\n' }}
{{ '#' if db_max_connections_override|default('', true)|length<1 else '' }}export BFD_DB_HIKARI_MAX_POOL_SIZE='{{ db_hikari_max_pool_size_override|default('', true) }}' {# application defaults to ssm db/hikari/max_pool_size #}{{ '\n' }}

{{ '#' if new_relic_app_name_override|default('', true)|length<1 else ''}}export BFD_NEW_RELIC_APP_NAME='{{ new_relic_app_name_override|default('', true) }}'                                   {# application defaults to ssm new_relic/app_name #}{{ '\n' }}
{{ '#' if new_relic_metrics_license_key_override|default('', true)|length<1 else '' }}export BFD_NEW_RELIC_METRICS_LICENSE_KEY='{{ new_relic_metrics_license_key_override|default('', true) }}' {# application defaults to ssm new_relic/metrics/insights_key #}{{ '\n' }}
{{ '#' if new_relic_metrics_host_override|default('', true)|length<1 else '' }}export BFD_NEW_RELIC_METRICS_HOST='{{ new_relic_metrics_host_override|default('', true) }}'                      {# application defaults to ssm new_relic/metrics/host #}{{ '\n' }}
{{ '#' if new_relic_metrics_path_override|default('', true)|length<1 else ''}}export BFD_NEW_RELIC_METRICS_PATH='{{ new_relic_metrics_path_override|default('', true) }}'                       {# application defaults to ssm new_relic/metrics/path #}{{ '\n' }}
{{ '#' if new_relic_metrics_period_override|default('', true)|length<1 else '' }}export BFD_NEW_RELIC_METRICS_PERIOD='{{ new_relic_metrics_period_override|default('', true) }}'                {# application defaults to ssm new_relic/metrics/period #}{{ '\n' }}

# NOTE: Calculated values from ansible facts. Multiple available cpus/cores e.g. `$((3 * $(nproc)))`
export BFD_LOADER_THREAD_COUNT='{{ ansible_processor_vcpus * (thread_multiple|default(3, true)|int) }}'
{{ '' if pipeline_instance_type == 'ccw' else '#' }}export BFD_CCW_JOB_CLAIMS_LOADER_THREAD_COUNT='{{ ansible_processor_vcpus * (rif_thread_multiple_claims|default(25, true)|int) }}'
{{ '' if pipeline_instance_type == 'ccw' else '#' }}export BFD_CCW_S3_BUCKET_NAME='{{ s3_bucket }}'                   {# derived from terraform control plane #}{{ '\n' }}
{{ '' if pipeline_instance_type == 'rda' else '#' }}export BFD_RDA_GRPC_INPROCESS_SERVER_S3_BUCKET='{{ s3_bucket }}'  {# derived from terraform control plane #}{{ '\n' }}

{# Referenced by the pipeline's logback.xml file to add environment name for use in splunk. #}{{ '\n' }}
export BFD_ENV_NAME='{{ env_name_std }}'

#Layered configuration support
CONFIG_SETTINGS_JSON=$(cat <<EOF
{"ssmHierarchies": [
    "/bfd/{{ env_name_std }}/common/sensitive/new_relic/",
    "/bfd/{{ env_name_std }}/common/nonsensitive/",
    "/bfd/{{ env_name_std }}/pipeline/sensitive/",
    "/bfd/{{ env_name_std }}/pipeline/nonsensitive/"
]}
EOF
)
export CONFIG_SETTINGS_JSON

# Additional variables
# NOTE: ansible fact derived jvm heap
#       JVM heap size is 80% of total memory minus 2GB for other system processes and overhead (security tools et al.)
#       Ie. For an 8GB instance, the heap size will be ~4.4GB (6.4 - 2)
JVM_ARGS="-Xms{{ ((ansible_memtotal_mb * 0.80) | int) - 2048 }}m -Xmx{{ ((ansible_memtotal_mb * 0.80) | int) - 2048 }}m -XX:+PreserveFramePointer -XX:+UseStringDeduplication"
SERVICE_SCRIPT="$(find {{ ref_dir }} -type f -name bfd-pipeline-app.sh)"

exec "$SERVICE_SCRIPT" \
	${JVM_ARGS} \
	-Djava.io.tmpdir={{ tmp }} -Dorg.jboss.logging.provider=slf4j \
	&>> "{{ ref_dir }}/bluebutton-data-pipeline.log"
