#!/usr/bin/env bash
metadata_token_ttl_seconds=300

DB_URL="${DB_URL:-{{ db_migrator_db_url }}}"
DB_USERNAME="${DB_USERNAME:-{{ db_migrator_db_username }}}"
DB_PASSWORD="${DB_PASSWORD:-{{ db_migrator_db_password }}}"

# If DB_PASSWORD is not set, use IAM for db auth (overwrites DB_USERNAME with instance profile role name)
if [ -z "$DB_PASSWORD" ]; then
  # extract the database host from the jdbc url
  trimmed_url="jdbc:postgresql://"
  export DB_HOST="${DB_HOST:-"${trimmed_url%%[:/]*}"}" # extract everything up to the first colon or slash

  # Get the instance profile role from the metadata service. This is the database username.
  log "Retrieving RDS IAM authentication token for $DB_HOST"
  IMDSv2_TOKEN=$(curl -s -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: $metadata_token_ttl_seconds")
  DB_USERNAME=$(curl -s -S -H "X-aws-ec2-metadata-token: $IMDSv2_TOKEN" http://169.254.169.254/latest/meta-data/iam/security-credentials/)
  for i in {1..3}; do
    if ! DB_PASSWORD="$(aws rds generate-db-auth-token --hostname "$DB_HOST" --port 5432 --username="$DB_USERNAME")"; then
      log "Failed to obtain rds auth token for $DB_HOST retrying... (attempt $i/3)"
      sleep 1
    fi
  done
  if [[ -z "$DB_PASSWORD" ]]; then
    log "Failed to obtain rds auth token for $DB_HOST after 3 attempts, exiting..."
    exit 1
  fi
fi
export DB_URL
export DB_USERNAME
export DB_PASSWORD

{#
# The expression {{ '#' if foo|default('', true)|length < 1 }} prepends exports with '#' to prevent
# undefined or empty 'foo' variable from entering the environment. Maintains the existing templating
# strategy and remains flexible for manual manipulation of resultant script in development and
# troubleshooting scenarios.
#}
# DB_MAX_POOL_SIZE defaults to 1 in the bfd-db-migrator application
{{ '#' if db_migrator_db_max_pool_size|default('', true)|length < 1 }}export DB_MAX_POOL_SIZE='{{ db_migrator_db_max_pool_size|default('', true) }}'

{%- if db_migrator_new_relic_metric_key is defined %}
export NEW_RELIC_METRIC_KEY='{{ db_migrator_new_relic_metric_key }}'
{%- endif %}

{%- if db_migrator_new_relic_metric_host is defined %}
export NEW_RELIC_METRIC_HOST='{{ db_migrator_new_relic_metric_host }}'
{%- endif %}

{%- if db_migrator_new_relic_metric_path is defined %}
export NEW_RELIC_METRIC_PATH='{{ db_migrator_new_relic_metric_path }}'
{%- endif %}

{%- if db_migrator_new_relic_metric_period is defined %}
export NEW_RELIC_METRIC_PERIOD='{{ db_migrator_new_relic_metric_period }}'
{%- endif %}

LOGS_DIR='{{ db_migrator_dir }}/'

exec "{{ db_migrator_dir }}/bfd-db-migrator-1.0.0-SNAPSHOT/bfd-db-migrator.sh" \
	"-DbfdDbMigrator.logs.dir=${LOGS_DIR}" \
	-Djava.io.tmpdir={{ db_migrator_tmp_dir }} \
	&>> "{{ db_migrator_dir }}/migrator-log.json"
