---
##
# Configures the FHIR Server and data-server app for CCS env
##

- name: Launch BFD Data Server
  hosts: localhost
  gather_facts: yes
  vars:
    bfd_server_dir: '/usr/local/bfd-server'

  tasks:
    - name: Include global variables
      include_vars:
        file: vars/000_cross_env_vars.yml
      tags: [pre-ami, post-ami]

    - name: Include env specific variables
      include_vars:
        dir: vars/{{ env }}
      tags: [pre-ami, post-ami]
      
    - name: Apply BFD Server Role
      import_role:
        name: bfd-server
      vars:
        data_server_dir: "{{ bfd_server_dir }}"
        data_server_tmp_dir: "{{ data_server_dir }}/tmp"
        data_server_appserver_https_port: "{{ vault_data_server_appserver_https_port }}"
        data_server_appserver_jvmargs: "-Xmx{{ (((data_server_ec2_instance_type_mem_mib | int) * 0.80) - 2048) | int }}m -XX:MaxMetaspaceSize=2048m -XX:MaxMetaspaceSize=2048m -Xlog:gc*:{{ bfd_server_dir }}/gc.log:time,level,tags -XX:+PreserveFramePointer"
        data_server_launcher: "bfd-server-launcher-{{ data_server_version }}.zip"
        data_server_war: "bfd-server-war-{{ data_server_version }}.war"
        # Note: the `data_server_ssl_client_certificates` variable is defined for each env/group in `group_vars/*/main.yml`.
        # Secondary (i.e. read-only) DBs defined in `group_vars/env_<name>_az_<x>/vault.yml`:
        data_server_db_url: "{{ vault_data_db_secondary_url[ansible_facts['facter_ec2_metadata']['placement']['availability-zone']] }}"
        data_server_db_username: "{{ vault_data_server_db_username }}"
        data_server_db_password: "{{ vault_data_server_db_password }}"
        data_server_db_connections_max: "{{ data_server_num_cores * 10 }}" # Oracle recommends 1-10 connections per CPU core
        data_server_new_relic_license_key: "{{ vault_data_server_new_relic_license_key }}"
        data_server_new_relic_app_name: "BFD Server ({{ env_name_std }})"
        data_server_new_relic_environment: "{{ env_name_std }}"
        data_server_new_relic_metric_key: "{{ vault_data_server_new_relic_metric_key }}"

    - name: Build CloudWatch unified agent configuration
      template:
        src: cwagent-data-server.json.j2
        dest: '/tmp/cwagent-data-server.json'
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      become: true
      tags:
        - post-ami

    - name: Reconfigure and relaunch CloudWatch unified agent
      shell: "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a append-config -m ec2 -c file:/tmp/cwagent-data-server.json -s"
      become: true
      tags:
        - post-ami
        
  handlers:
    - import_tasks: handlers/main.yml
