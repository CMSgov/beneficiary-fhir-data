---

# Version of the ETL Jar to deploy 
data_pipeline_version: '0.1.0-SNAPSHOT'

# The abbreviated name for this environment, per the naming conventions used by HealthAPT.
env_name: 'ts'

# The abbreviated name for this environment, per https://confluence.cms.gov/display/ODI/AWS+Naming+and+Tagging+Conventions.
env_name_std: 'test'

# This system is an m5.xlarge (4 vCPUs, 16 GB RAM).
data_pipeline_ec2_instance_type_mem_mib: "{{ 16 * 1024 }}"
data_pipeline_ec2_instance_type_vcpu: 4

# There is no ongoing data refresh here: if we're loading data in test, it should be an initial
# load.
data_pipeline_idempotency_required: false

# Whether to enable BFD API V2
data_server_v2_enabled: true

# Whether to enable BFD PreAdj Resources
pre_adj_resources_enabled: true

# New Relic Metric API
data_server_new_relic_metric_host: 'https://gov-metric-api.newrelic.com'
data_server_new_relic_metric_path: '/metric/v1'

# app server instance type
# c5.xlarge == 4 vcpu's /w 8GiB mem
data_server_num_cores: 4
data_server_ec2_instance_type_mem_mib: "{{ 8 * 1024 }}"

# The path (in this project) to the test keypair that will be copied to the Data Servers for local-only testing.
# Note: This file is encrypted with Ansible Vault and will be automagically encrypted during the copy.
data_server_ssl_client_certificate_test: 'files/client_data_server_local_test_env_test_keypair.pem'

# The path (in this project) to the keystore that will be copied to the Data Servers
# Note: This file is encrypted with Ansible Vault and will be automagically encrypted during the copy.
data_server_appserver_keystore: 'files/test-bluebutton-appserver-keystore.jks'

# These are the SSL keypairs authorized to query this environment's Data Servers.
data_server_ssl_client_certificates:
  - alias: client_local_test_env_test
    certificate: "{{ lookup('file', 'files/client_data_server_local_test_env_test_certificate.pem') }}"
  - alias: client_bluebutton_frontend_dev
    certificate: "{{ lookup('file', 'files/client_data_server_bluebutton_frontend_dev_certificate.pem') }}"
  - alias: client_bluebutton_frontend_test
    certificate: "{{ lookup('file', 'files/client_data_server_bluebutton_frontend_test_certificate.pem') }}"
  - alias: client_performance_tester
    certificate: "{{ lookup('file', 'files/client_data_server_performance_tester_certificate.pem') }}"

# Enables the RDA API data pipline with a 1 hour retry interval.
data_pipeline_rda_job_enabled: true
data_pipeline_rda_job_interval_seconds: 3600

# Only define this variable if you want to force the RDA API pipeline to always request a specific
# starting sequence number for FISS claims from the RDA API.  Normally this variable should be 
# commented out so that the default logic can resume from the most recently received
# sequence number in the database.
# In TEST this is being forced to zero so we can evaluate pipeline ingestion rate.
data_pipeline_rda_job_starting_fiss_seq_num: 0

# Only define this variable if you want to force the RDA API pipeline to always request a specific
# starting sequence number for MCS claims from the RDA API.  Normally this variable should be 
# commented out so that the default logic can resume from the most recently received
# sequence number in the database.
# In TEST this is being forced to zero so we can evaluate pipeline ingestion rate.
data_pipeline_rda_job_starting_mcs_seq_num: 0
