// These are the basic imports that Jenkins interactive script console
// automatically includes.
import jenkins.*;
import jenkins.model.*;
import hudson.*;
import hudson.model.*;


//
// Create/Update Credential for GitHub Access Token
//

def createOrUpdateUsernamePassword = { id, description, username, password ->
  domain = com.cloudbees.plugins.credentials.domains.Domain.global()
  credsStore = Jenkins.instance.getExtensionList("com.cloudbees.plugins.credentials.SystemCredentialsProvider")[0].getStore()
  
  credentials = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
    com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials.class,
    Jenkins.instance
  )
  
  matchingCredential = credentials.find { credential -> credential.id == id }
  newCredential = new com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl(
    com.cloudbees.plugins.credentials.CredentialsScope.GLOBAL,
    id,
    description,
    username,
    password
  )
  
  if (matchingCredential) {
    println "Credential found: ${matchingCredential.id}"
    
    if (
        newCredential.scope != matchingCredential.scope ||
        newCredential.description != matchingCredential.description ||
        newCredential.username != matchingCredential.username ||
        hudson.util.Secret.toString(newCredential.password) != hudson.util.Secret.toString(matchingCredential.password)
    ) {
      updateResult = credsStore.updateCredentials(domain, matchingCredential, newCredential)  
      if (updateResult) {
        println "Changed: credential updated: ${id}" 
      } else {
        println "Credential failed to update: ${id}"
        throw new IllegalStateException()
      }
    }
  } else {
    println "Credential not found: ${id}"
    credsStore.addCredentials(domain, newCredential)
    println "Changed: credential created: ${id}"
  }
}

credentialsId = 'github-personal-access-token'
createOrUpdateUsernamePassword(
  credentialsId, 
  "GitHub 'Personal Access Token' for karlmdavis with these permissions: [repo:status, repo_deployment, public_repo, admin:repo_hook, read:user, user:email]",
  "{{ vault_jenkins_github_token_username }}",
  "{{ vault_jenkins_github_token_secret }}"
)
