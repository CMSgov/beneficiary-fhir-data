locals {
  env                 = terraform.workspace
  service             = "common"
  service_name_prefix = "bfd-${local.env}-${local.service}"

  account_id = data.aws_caller_identity.current.account_id
  region     = data.aws_region.current.name
  kms_key_id = data.aws_kms_key.cmk.arn

  lambda_name      = "rds-enhanced-monitoring-enabler"
  lambda_full_name = "${local.service_name_prefix}-${local.lambda_name}"
  lambda_src       = replace(local.lambda_name, "-", "_")
}

resource "aws_cloudwatch_event_rule" "this" {
  description = "Event to invoke the ${local.lambda_full_name} Lambda on relevant RDS Instance Events"
  event_pattern = jsonencode(
    {
      source      = ["aws.rds"]
      detail-type = ["RDS DB Instance Event"]
      detail = {
        Message = [
          { prefix = "CloudWatch Logs Export enabled" }
        ]
        Tags = {
          "application-autoscaling:resourceId" = ["cluster:${var.db_cluster_identifier}"]
        }
      }
    }
  )
  name = local.lambda_full_name
}

resource "aws_cloudwatch_event_target" "this" {
  arn  = aws_lambda_function.this.arn
  rule = aws_cloudwatch_event_rule.this.id
}

resource "aws_lambda_permission" "this" {
  statement_id  = local.lambda_full_name
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.this.arn
  principal     = "events.amazonaws.com"
  source_arn    = aws_cloudwatch_event_rule.this.arn
}

resource "aws_lambda_function" "this" {
  depends_on = [aws_iam_role_policy_attachment.this]

  function_name = local.lambda_full_name

  description = join("", [
    "Invoked on topology update events generated by newly-created Application AutoScaling RDS ",
    "Instances in ${var.db_cluster_identifier}, this Lambda will enable Enhanced Monitoring on ",
    "those Instances."
  ])

  kms_key_arn      = local.kms_key_id
  filename         = data.archive_file.src.output_path
  source_code_hash = data.archive_file.src.output_base64sha256
  architectures    = ["arm64"]
  layers           = ["arn:aws:lambda:${local.region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-python311-arm64:5"]
  handler          = "${local.lambda_src}.handler"
  memory_size      = 128
  package_type     = "Zip"
  runtime          = "python3.11"
  timeout          = 300

  tags = {
    Name = local.lambda_full_name
  }

  environment {
    variables = {
      BFD_ENVIRONMENT                 = local.env
      RDS_MONITORING_ROLE_ARN         = var.rds_monitoring_role_arn
      RDS_MONITORING_INTERVAL_SECONDS = 15
    }
  }

  role = aws_iam_role.this.arn
}
