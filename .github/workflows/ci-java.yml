name: 'CI - Java'
on: pull_request

env:
  # workflow file matchers - workflow jobs will only run if matching files are found
  # please see https://github.com/CMSgov/beneficiary-fhir-data/pull/773 for why we
  # are using this workflow logic
  workflow_files_re: >
    (^apps/bfd- |
    ^apps/Dockerfile |
    ^apps/pom.xml |
    ^ops/ansible |
    ^.github/workflows/ci-ansible.yml |
    ^.github/workflows/ci-java.yml)

jobs:
  workflow:
    name: Checking workflow
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.workflow_files.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - id: workflow_files
        run: |
          echo "::set-output name=files::$(git diff --name-only --diff-filter=ACMRTD HEAD^ HEAD | grep -E '${{ env.workflow_files_re }}')"

  mvn-fmt-maven-plugin:
    runs-on: ubuntu-latest
    needs: workflow
    if: needs.workflow.outputs.files
    steps:
      - uses: actions/checkout@v2
      - name: 'Setup JDK'
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: 'Generate maven toolchain config'
        run: |
          cat << EOF > ~/.m2/toolchains.xml
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>OpenJDK</vendor>
              </provides>
              <configuration>
                <jdkHome>$JAVA_HOME</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: 'Run maven ${{ matrix.mvn_commmand }}'
        run: mvn com.coveo:fmt-maven-plugin:check
        working-directory: ./apps
  
  mvn-verify:
    runs-on: ubuntu-latest
    needs: workflow
    if: needs.workflow.outputs.files
    steps:
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GA_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'Setup JDK'
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: 'Generate Maven Config'
        run: |
          cat << EOF > ~/.m2/toolchains.xml
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>OpenJDK</vendor>
              </provides>
              <configuration>
                <jdkHome>$JAVA_HOME</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: 'Run Maven Build'
        run: mvn --batch-mode --threads 1C verify
        working-directory: ./apps

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" \
          | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Deliver Apps Container Image
        run: |
          SANITIZED_REF="${GITHUB_REF_NAME////-}"
          IMAGE_NAME="ghcr.io/cmsgov/bfd-apps"
          SHORT_SHA="$(git rev-parse --short HEAD)"
          FULL_BRANCH_TAG="${IMAGE_NAME}:${SANITIZED_REF}" # human readable, branch name tag
          FULL_COMMIT_TAG="${IMAGE_NAME}:${SHORT_SHA}"     # a short sha suffixed image tag
          docker build . --tag "$FULL_BRANCH_TAG"
          docker tag "$FULL_BRANCH_TAG" "$FULL_COMMIT_TAG"
          docker push "$FULL_BRANCH_TAG"
          docker push "$FULL_COMMIT_TAG"
        working-directory: apps
      - name: 'Upload test artifacts'
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: mvn-verify-build-logs
          path: |
            **/target/surefire-reports/*
            **/target/failsafe-reports/*
            bfd-server/bfd-server-war/target/server-work/access.*
            bfd-server/bfd-server-war/target/server-work/server-console.log
            
  fhir-validate:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'Set up JDK'
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: 'Download fhir validator'
        uses: wei/wget@v1
        with:
          args: https://github.com/hapifhir/org.hl7.fhir.core/releases/latest/download/validator_cli.jar
      - name: 'Verify FHIR resource'
        run: ./validations.sh -r
        
  # ansible system testing
  ansible-role-bfd-pipeline:
    needs: mvn-verify
    uses: ./.github/workflows/ci-ansible.yml
    with:
      role: bfd-pipeline

  ansible-role-bfd-server:
    needs: mvn-verify
    uses: ./.github/workflows/ci-ansible.yml
    with:
      role: bfd-server

  ansible-role-bfd-db-migrator:
    needs: mvn-verify
    uses: ./.github/workflows/ci-ansible.yml
    with:
      role: bfd-db-migrator
