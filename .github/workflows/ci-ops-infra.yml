name: "CI - Update OPS Infrastructure"
on:
  # Unfortunately, there is no way to reduce duplication between inputs. They must be specified
  # seperately for each trigger
  merge_group:
  workflow_call:
    inputs:
      aws-region:
        description: >-
          Override the AWS Region destination, Default to `us-east-1`.
        default: us-east-1
        type: string
        required: true
      bfd-env:
        description: "The BFD environment to update"
        required: false
        type: string
        default: mgmt
      cw-log-group-override:
        description: "Overrides the CloudWatch Log Group target for Terraform logs; must exist"
        required: false
        type: string
      cw-log-stream-override:
        description: "Overrides the the CloudWatch Log Stream target for Terraform logs; created if necessary"
        required: false
        type: string
  workflow_dispatch:
    inputs:
      aws-region:
        description: >-
          Override the AWS Region destination, Default to `us-east-1`.
        default: us-east-1
        type: choice
        options:
          - us-east-1
          - us-west-2
        required: true
      bfd-env:
        description: "The BFD environment to update"
        required: false
        type: string
        default: mgmt
      branch:
        description: >-
          Override the branch on which the build is based.
          Default to selected reference in the `Use workflow from` drop-down when empty.
        required: false
      cw-log-group-override:
        description: "Overrides the CloudWatch Log Group to submit Terraform logs to; must exist"
        required: false
        type: string
      cw-log-stream-override:
        description: >-
          Overrides the the CloudWatch Log Stream to submit Terraform logs to; will be created if
          necessary
        required: false
        type: string
permissions:
  id-token: write # This is required for requesting the AWS IAM OIDC JWT
  contents: write # This is required for actions/checkout
defaults:
  run:
    shell: bash
env:
  # AWS Code Artifact Repository
  CA_REPOSITORY: bfd-mgmt
  CA_DOMAIN: bfd-mgmt
  AWS_REGION: ${{ inputs.aws-region }}
  DEFAULT_LOG_GROUP: "/bfd/${{ inputs.bfd-env }}/gha/ci-ops-infra"
  DEFAULT_LOG_STREAM: "deploy-terraservice_${{ github.run_number }}"
  # workflow file matchers - workflow jobs will only run if matching files are found
  # please see https://github.com/CMSgov/beneficiary-fhir-data/pull/773 for why we
  # are using this workflow logic ... that has been duplicated from ci-java.yml
  workflow_files_re: "(\
  ^ops/terraform/env/mgmt/|\
  ^.github/workflows/ci-ops-infra.yml)"

jobs:
  workflow:
    name: Checking workflow
    runs-on: ubuntu-latest
    ## ubuntu-20.04 used previously
    outputs:
      files: ${{ steps.workflow_files.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: workflow_files
        name: Set output
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$(git diff --name-only --diff-filter=ACMRTD HEAD^ HEAD | grep -E '${{ env.workflow_files_re }}')" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  update-mgmt-infra:
    runs-on: ubuntu-latest
    needs: workflow
    if: needs.workflow.outputs.files
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch || github.ref_name }}

      - name: Determine latest release version
        id: determine-latest-release
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        run: |
          release_version="${{ steps.determine-latest-release.outputs.release }}"
          if [[ -z $release_version ]]; then
            echo "Release version unspecified or unable to be determined"
            echo 1
          fi

          echo "BFD_RELEASE=$release_version" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GHA_AWS_IAM_ROLE_ARN }}
          role-session-name: ci-ops-infra
          aws-region: ${{ inputs.aws-region }}

      - name: Mask sensitive AWS data
        run: |
          caller_id="$(aws sts get-caller-identity)"
          account_num="$(jq -r '.Account' <<<$caller_id)"
          role_arn="$(jq -r '.Arn' <<<$caller_id)"
          user_id="$(jq -r '.UserId' <<<$caller_id)"

          echo "::add-mask::$account_num"
          echo "::add-mask::$role_arn"
          echo "::add-mask::$user_id"

      - name: Deploy OPS Mgmt Base Config
        uses: ./.github/actions/deploy-terraservice
        with:
          bfd-env: ${{ inputs.bfd-env }}
          service-path: ops/terraform/env/mgmt/base_config
          cw-log-group: ${{ inputs.cw-log-group-override || env.DEFAULT_LOG_GROUP }}
          cw-log-stream: ${{ inputs.cw-log-stream-override || env.DEFAULT_LOG_STREAM }}

      - name: Deploy OPS Mgmt Service Config
        uses: ./.github/actions/deploy-terraservice
        with:
          bfd-env: ${{ inputs.bfd-env }}
          service-path: ops/terraform/env/mgmt
          cw-log-group: ${{ inputs.cw-log-group-override || env.DEFAULT_LOG_GROUP }}
          cw-log-stream: ${{ inputs.cw-log-stream-override || env.DEFAULT_LOG_STREAM }}
  
  