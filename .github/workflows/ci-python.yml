name: CI - Python

on:
  pull_request:
    paths:
      - "**/*.py"
      - "**/pyproject.toml"
      - "**/uv.lock"
      - ".github/workflows/ci-python.yml"

  merge_group:

env:
  BASE_COMMIT: ""
  GH_TOKEN: ${{ github.token }}
  # Pin tool versions to match workspace configuration
  PYTHON_VERSION: "3.14.0"
  UV_VERSION: "0.5.18"

jobs:
  workspace-checks:
    name: Workspace Tests & Checks
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        id: code-checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      
      # Maven is needed to run the migrator for bfd-pipeline-idr tests
      - name: "Setup JDK"
        uses: actions/setup-java@v4
        with:
          java-version: "25"
          distribution: "corretto"
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}
      
      - name: Install workspace dependencies
        run: |
          cd ${{ github.workspace }}/apps
          uv sync --all-groups
      
      - name: Run linting (ruff check)
        run: |
          cd ${{ github.workspace }}/apps
          uv run ruff check
      
      - name: Run formatting check (ruff format)
        run: |
          cd ${{ github.workspace }}/apps
          uv run ruff format --check
      
      - name: Run type checking (pyright)
        run: |
          cd ${{ github.workspace }}/apps
          uv run pyright
      
      - name: Run tests (pytest) for bfd-pipeline-idr
        run: |
          cd ${{ github.workspace }}/apps
          uv run pytest bfd-pipeline/bfd-pipeline-idr
  
  non-workspace-checks:
    name: Non-Workspace Project - sftp-outbound-transfer
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      
      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/ops/services/02-eft/lambda_src/sftp_outbound_transfer
          uv sync
      
      - name: Run linting
        run: |
          cd ${{ github.workspace }}/ops/services/02-eft/lambda_src/sftp_outbound_transfer
          uv run ruff check
      
      - name: Run formatting check
        run: |
          cd ${{ github.workspace }}/ops/services/02-eft/lambda_src/sftp_outbound_transfer
          uv run ruff format --check
      
      - name: Run type checking
        run: |
          cd ${{ github.workspace }}/ops/services/02-eft/lambda_src/sftp_outbound_transfer
          uv run pyright .
      
      - name: Run tests
        run: |
          cd ${{ github.workspace }}/ops/services/02-eft/lambda_src/sftp_outbound_transfer
          uv run pytest tests
