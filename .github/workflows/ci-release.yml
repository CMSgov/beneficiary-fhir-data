---
name: "CI - Release"
on:
  push:
    tags:
      - "*.*.*"

permissions:
  id-token: write # This is required for requesting the AWS IAM OIDC JWT
  contents: read

env:
  # AWS Code Artifact Repository
  AWS_REGION: us-east-1
  CA_REPOSITORY: bfd-release-hackathon #FIXME
  CA_DOMAIN: bfd-mgmt
  CA_NAMESPACE: gov.cms.bfd
  CA_PACKAGE: bfd-server-war
  CA_DATA_DICTIONARY_FILES: |
    (
      "bfd-server-war-${{ github.ref_name }}-v1-data-dictionary.csv"
      "bfd-server-war-${{ github.ref_name }}-v2-data-dictionary.csv"
      "bfd-server-war-${{ github.ref_name }}-v1-data-dictionary.json"
      "bfd-server-war-${{ github.ref_name }}-v2-data-dictionary.json"
    )

jobs:
  release-to-github:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.GHA_AWS_IAM_ROLE_ARN }}
          role-session-name: ci-release
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Authorization Token
        run: |
          CODEARTIFACT_AUTH_TOKEN="$(aws codeartifact get-authorization-token --domain "$CA_DOMAIN" --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text --region us-east-1)"
          echo "::add-mask::$CODEARTIFACT_AUTH_TOKEN"
          echo CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN >> $GITHUB_ENV

      - name: Get Repository Endpoint
        run: |
          CA_REPOSITORY_ENDPOINT="$(aws codeartifact get-repository-endpoint --domain "$CA_DOMAIN" --repository "$CA_REPOSITORY" --format maven --query repositoryEndpoint --output text)"
          echo "::add-mask::$CA_REPOSITORY_ENDPOINT"
          echo CA_REPOSITORY_ENDPOINT=$CA_REPOSITORY_ENDPOINT >> $GITHUB_ENV

      - name: Pull Release Files
        run: |
          for item in "${CA_DATA_DICTIONARY_FILES[@]}"
          do
            aws codeartifact get-package-version-asset \
              --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} \
              --domain "$CA_DOMAIN" \
              --repository "$CA_REPOSITORY" \
              --asset "$item" \
              --package-version "${{ github.ref_name }}" \
              --package "$CA_PACKAGE" \
              --namespace "$CA_NAMESPACE" \
              --format maven \
              --region "$AWS_REGION" \
              "${item/$CA_PACKAGE-/}" 1>/dev/null
          done

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          fail_on_unmatched_files: true
          name: "v${{ github.ref_name }}"
          files: |
            *.csv
            *.json
