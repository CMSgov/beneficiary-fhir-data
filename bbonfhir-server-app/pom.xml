<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.hhs.cms.bluebutton.fhir</groupId>
		<artifactId>bbonfhir-server-parent</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>bbonfhir-server-app</artifactId>
	<packaging>war</packaging>

	<description>
		The primary WAR for the CMS Blue Button project. Provides a FHIR API.
	</description>

	<properties>
		<hapi-fhir.version>1.4-SNAPSHOT</hapi-fhir.version>
		<jersey.version>2.22.1</jersey.version>
		<jetty.version>9.3.6.v20151106</jetty.version>
		<derby.version>10.12.1.1</derby.version>
	</properties>

	<dependencies>
		<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapi-fhir.version}</version>
		</dependency>

		<!-- At least one "structures" JAR must also be included -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu2.1</artifactId>
			<version>${hapi-fhir.version}</version>
		</dependency>

		<!-- This dependency includes the JPA server itself, which is packaged 
			separately from the rest of HAPI FHIR -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<version>${hapi-fhir.version}</version>
		</dependency>

		<!-- This dependency is used for the "FHIR Tester" web app overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir.version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir.version}</version>
			<classifier>classes</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!-- HAPI-FHIR uses Logback for logging support. The logback library is 
				included automatically by Maven as a part of the hapi-fhir-base dependency, 
				but you also need to include a logging library. Logback is used here, but 
				log4j would also be fine. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<!-- Needed for JEE/Servlet support -->
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!-- If you are using HAPI narrative generation, you will need to include 
				Thymeleaf as well. Otherwise the following can be omitted. -->
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>2.1.4.RELEASE</version>
		</dependency>

		<dependency>
			<!-- Used for CORS support -->
			<groupId>org.ebaysf.web</groupId>
			<artifactId>cors-filter</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<!-- Spring Web is used to deploy the server to a web container. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.2.4.RELEASE</version>
		</dependency>

		<dependency>
			<!-- You may not need this if you are deploying to an application server 
				which provides database connection pools itself. -->
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>

		<dependency>
			<!-- This example uses Derby embedded database. If you are using another 
				database such as Mysql or Oracle, you may omit the following dependencies 
				and replace them with an appropriate database client dependency for your 
				database platform. -->
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbynet</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>${derby.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1206-jdbc42</version>
		</dependency>

		<dependency>
			<!-- The test framework used for unit and integration tests. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- The following dependencies are only needed for automated unit tests, 
			you do not neccesarily need them to run the example. -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.phloc</groupId>
			<artifactId>phloc-schematron</artifactId>
			<version>2.7.1</version>
		</dependency>
	</dependencies>

	<build>
		<!-- The following is not required for the application to build, but allows 
			you to test it by issuing "mvn jetty:run" from the command line. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.3.6.v20151106</version>
					<configuration>
						<webApp>
							<contextPath>/hapi-fhir</contextPath>
							<allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
						</webApp>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- The configuration here tells the WAR plugin to include the FHIR Tester 
				overlay. You can omit it if you are not using that feature. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<overlays>
						<overlay>
							<groupId>ca.uhn.hapi.fhir</groupId>
							<artifactId>hapi-fhir-testpage-overlay</artifactId>
							<excludes>
								<exclude>WEB-INF/lib/hapi-fhir-structures-*.jar</exclude>
							</excludes>
						</overlay>
					</overlays>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<!-- This is to run the integration tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
