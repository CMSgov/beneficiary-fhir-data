<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>gov.cms.bfd</groupId>
        <artifactId>bfd-pipeline-parent</artifactId>
        <version>1.0.3-SNAPSHOT</version>
    </parent>

    <artifactId>bfd-pipeline-app</artifactId>
    <packaging>jar</packaging>

    <description>
        An application that pulls CCW RIF data via S3, transforms it, and pushes it to
        the Blue Button API backend database server.
    </description>

    <dependencies>
        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-pipeline-ccw-rif</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-pipeline-rda-grpc</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-pipeline-shared-utils</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-pipeline-shared-test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Mocking for unit and integration tests. -->
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Mockito utilities for JUnit / Jupiter. -->
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <!-- Provides a sane facade for the giant mess of incompatible logging
                frameworks in Java. -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <!-- Logback is used as the logging target/backend for SLF4J during runtime:
                all logging events will be sent to it. -->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <!-- Used to collect metrics in a registry that can be transmitted to CloudWatch efficiently. -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <!-- Used to transmit metrics to JMX for local testing. -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-jmx</artifactId>
        </dependency>
        <dependency>
            <!-- Used to transmit metrics to CloudWatch for alerts and dashboards.
                CloudWatch2 is required for the AWS SDK v2 -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-cloudwatch2</artifactId>
        </dependency>

        <dependency>
            <!-- Used to monitor the JVM's memory usage, garbage collection, etc.
                at runtime. -->
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
        </dependency>

        <dependency>
            <groupId>com.newrelic.telemetry</groupId>
            <artifactId>dropwizard-metrics-newrelic</artifactId>
        </dependency>

        <dependency>
            <groupId>com.newrelic.telemetry</groupId>
            <artifactId>telemetry-http-okhttp</artifactId>
        </dependency>

        <dependency>
            <!-- JDBC driver for working with PostgreSQL DBs on Java 8+ (JDBC 4.2). -->
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <!-- HSQL is used in this project's integration tests, which means it
                needs to be baked into the JAR. -->
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-lambda</artifactId>
            <version>${system-lambda-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Used to run our unit and integration tests. -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Used in tests to help with managing asynchronous behavior. Reference:
                https://github.com/awaitility/awaitility -->
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Used to write fluent assertions in unit tests. -->
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-model-rif-samples</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>src/main/assembly/zip.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <!-- Unpack the assembly for use in ITs. -->
                    <configuration>
                        <artifactItems>
                            <artifactItem>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <version>${project.version}</version>
                                <type>zip</type>
                                <outputDirectory>${project.build.directory}/pipeline-app</outputDirectory>
                            </artifactItem>
                        </artifactItems>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-unpack-assembly</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Will run the `*IT.java` integration tests in this project, as part
                    of the build. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Used to build docker image for the project. -->
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>${jib.goal}</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
