#!/usr/bin/env groovy

pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  serviceAccount: bfd
  containers:
  - name: bfd-cbc-build
    image: public.ecr.aws/c2o1d8s9/bfd-cbc-build:jdk11-mvn3-an29-tfenv # TODO: make sure this is coming from somewhere sane
    command:
    - sleep
    args:
    - 99d
    resources:
      limits:
        memory: 8192Mi
        cpu: 4000m
      requests:
        memory: 8192Mi
        cpu: 4000m
"""
        }
    }
    parameters {
        booleanParam(name: 'verbose_mvn_logging', description: 'When true, `mvn` will produce verbose logs.', defaultValue: false)
    }
    stages {
        stage('Docker Build') {
            steps {
                script {
                    container('bfd-cbc-build') {
                        // Address limitations resulting from CVE-2022-24767
                        sh 'git config --global --add safe.directory "$WORKSPACE"'

                        // Setup AWS Credentials
                        withEnv(['AWS_ACCESS_KEY_ID=','AWS_SECRET_ACCESS_KEY=','AWS_SESSION_TOKEN=']) {
                            withCredentials([string(credentialsId: 'bfd-aws-assume-role', variable: 'ROLE')]) {
                                    env.SESSION_NAME = env.JOB_NAME
                                    awsCredentials = sh(
                                        returnStdout: true,
                                        script: 'aws sts assume-role --role-arn "$ROLE" \
                                                --role-session-name "$SESSION_NAME" \
                                                --output text --query Credentials'
                                    ).trim().split(/\s+/)
                                env.AWS_DEFAULT_REGION = 'us-east-1'
                                env.AWS_ACCESS_KEY_ID = awsCredentials[0]
                                env.AWS_SECRET_ACCESS_KEY = awsCredentials[2]
                                env.AWS_SESSION_TOKEN = awsCredentials[3]
                            }
                        }

                        // Execute the existing build-push script
                        dir('apps/bfd-data-utilities-fda-drug/') {

                            def quietFlags = params.verbose_mvn_logging ? '' : '--quiet --batch-mode'
                            sh "mvn ${quietFlags} --threads 1C install"
                            sh """mvn ${quietFlags} exec:java \
-Dexec.mainClass="gov.cms.bfd.server.data.utilities.FDADrugApp.App" \
-Dexec.args="./src/main/resources/"
"""
                           sh 'mvn deploy'

                        }
                    }
                }
            }
        }
    }
}
