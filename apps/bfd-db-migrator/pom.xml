<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.cms.bfd</groupId>
		<artifactId>bfd-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>bfd-db-migrator</artifactId>
	<packaging>jar</packaging>

	<description>An application integrated with Flyway and Hibernate responsible for executing database migrations and validations against BFD datastores.</description>

	<dependencies>
		<dependency>
			<!-- Provides a sane facade for the giant mess of incompatible logging frameworks in
				 Java. -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<!-- An implementation of the JCL API that routes everything through to SLF4J,
				 instead. -->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<!-- An implementation of the Log4J API that routes everything through to SLF4J,
				 instead. -->
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<!-- Provides a JUL handler, SLF4JBridgeHandler, that routes everything to SLF4J,
				 instead. -->
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<!-- Logback is used as the logging target/backend for SLF4J during runtime: all logging
				 events will be sent to it. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<!-- Provides a JSON layout (i.e. output format) for Logback. Provides
				 ch.qos.logback.contrib.json.classic.JsonLayout, which is used in our logback.xml. -->
			<groupId>ch.qos.logback.contrib</groupId>
			<artifactId>logback-json-classic</artifactId>
			<!-- TODO: consider managing this in the bfd-parent's pom.xml -->
			<version>0.1.5</version>
		</dependency>
		<dependency>
			<!-- Required by logback-json-classic. -->
			<groupId>ch.qos.logback.contrib</groupId>
			<artifactId>logback-jackson</artifactId>
			<!-- TODO: consider managing this in the bfd-parent's pom.xml -->
			<version>0.1.5</version>
		</dependency>
		<dependency>
			<!-- Required by logback-jackson. -->
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<descriptors>
							<descriptor>src/main/assembly/zip.xml</descriptor>
						</descriptors>
					</configuration>
				</plugin>
				<plugin>
					<!-- Configure the dependency plugin such that it can be used to grab the
						 the test dependency artifacts, for manual testing or for use in integration
						 tests. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
					<configuration>
						<overWriteReleases>false</overWriteReleases>
						<overWriteSnapshots>true</overWriteSnapshots>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<configuration>
						<!-- This default config is used in the Jenkinsfile CI build. -->
						<tag>${project.artifactId}-${project.version}</tag>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>build-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- This profile will only be active for builds inside of Eclipse (managed by m2e).
				 It's primarily used to manage the execution of plugins in that environment. -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<!--This plugin's configuration is used to store Eclipse m2e settings
								only. It has no influence on the Maven build itself. -->
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[1.0.0,)</versionRange>
												<goals>
													<goal>copy</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<!-- Don't run this plugin inside m2e; necessary to
													 disable a POM warning in Eclipse, caused by
													 https://issues.apache.org/jira/browse/MDEP-187. -->
												<ignore/>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
