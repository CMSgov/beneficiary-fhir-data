package gov.cms.bfd.server.ng.claim.model;

import gov.cms.bfd.server.ng.FhirUtil;
import gov.cms.bfd.server.ng.SystemUrls;
import lombok.AllArgsConstructor;
import lombok.Getter;
import org.hl7.fhir.r4.model.CodeableConcept;
import org.hl7.fhir.r4.model.Coding;
import org.hl7.fhir.r4.model.ExplanationOfBenefit;

import java.util.Arrays;

@AllArgsConstructor
@Getter
public enum ClaimAdmissionSourceCode {
  _1(
      "1",
      "NON-HEALTH CARE FACILITY POINT OF ORIGIN (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _2("2", "CLINIC OR PHYSICIAN'S OFFICE (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _3(
      "3",
      "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _4(
      "4",
      "TRANSFER FROM A HOSPITAL (DIFFERENT FACILITY) (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _5(
      "5",
      "TRANSFER FROM A SKILLED NURSING FACILITY (SNF), INTERMEDIATE CARE FACILITY (ICF) OR ASSISTED LIVING FACILITY (ALF) (NON-NEWBORN)/NEWBORN - BORN INSIDE THIS HOSPITAL (NEWBORN)"),
  _6(
      "6",
      "TRANSFER FROM ANOTHER HEALTH CARE FACILITY (NON-NEWBORN)/NEWBORN - BORN OUTSIDE OF THIS HOSPITAL (NEWBORN)"),
  _7(
      "7",
      "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _8("8", "COURT/LAW ENFORCEMENT (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  _9("9", "INFORMATION NOT AVAILABLE (NON-NEWBORN)/RESERVED FOR NATIONAL ASSIGNMENT (NEWBORN)"),
  A("A", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  B("B", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  C("C", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  D(
      "D",
      "TRANSFER FROM ONE DISTINCT UNIT OF THE HOSPITAL TO ANOTHER DISTINCT UNIT OF THE SAME HOSPITAL RESULTING IN A SEPARATE CLAIM TO THE PAYER (NON-NEWBORN)"),
  E("E", "TRANSFER FROM AMBULATORY SURGERY CENTER (NON-NEWBORN)"),
  F("F", "TRANSFER FROM A HOSPICE FACILITY (NON-NEWBORN)"),
  G("G", "TRANSFER FROM A DESIGNATED DISASTER ALTERNATE CARE SITE (EFFECTIVE 7/1/2020)"),
  H("H", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  I("I", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  J("J", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  K("K", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  L("L", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  M("M", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  N("N", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  O("O", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  P("P", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  Q("Q", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  R("R", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  S("S", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  T("T", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  U("U", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  V("V", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  W("W", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  X("X", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  Y("Y", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  Z("Z", "RESERVED FOR NATIONAL ASSIGNMENT (NON-NEWBORN)"),
  NA("", "NO DESCRIPTION AVAILABLE");
  private final String code;
  private final String display;

  public static ClaimAdmissionSourceCode fromCode(String code) {
    return Arrays.stream(values()).filter(v -> v.code.equals(code)).findFirst().get();
  }

  ExplanationOfBenefit.SupportingInformationComponent toFhir(
      SupportingInfoFactory supportingInfoFactory) {
    return supportingInfoFactory
        .createSupportingInfo()
        .setCategory(CarinSupportingInfoCategory.ADMISSION_SOURCE_CODE.toFhir())
        .setCode(
            new CodeableConcept()
                .addCoding(new Coding().setSystem(SystemUrls.NUBC_POINT_OF_ORIGIN).setCode(code))
                .addCoding(
                    new Coding()
                        .setSystem(SystemUrls.BLUE_BUTTON_CODE_SYSTEM_CLAIM_ADMISSION_SOURCE_CODE)
                        .setCode(code)
                        .setDisplay(display)));
  }
}
