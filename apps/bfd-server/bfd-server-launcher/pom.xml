<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>gov.cms.bfd</groupId>
        <artifactId>bfd-server-parent</artifactId>
        <version>1.0.3-SNAPSHOT</version>
    </parent>

    <artifactId>bfd-server-launcher</artifactId>
    <packaging>jar</packaging>

    <description>
        A Java JAR and assembly zip that packages up a Jetty runtime/launcher for the BFD Server WAR.
    </description>

    <dependencies>
        <dependency>
            <!-- The newrelic.jar javaagent dependency -->
            <groupId>com.newrelic.agent.java</groupId>
            <artifactId>newrelic-agent</artifactId>
        </dependency>
        <dependency>
            <!-- Jetty is the embedded web server that this project uses to run WARs. -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <!-- Jetty is the embedded web server that this project uses to run WARs. -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <!-- Jetty is the embedded web server that this project uses to run WARs. -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-annotations</artifactId>
            <version>${jetty.version}</version>
        </dependency>

        <dependency>
            <!-- BFD Shared Utilities include a wrapper around MDC for logging. -->
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-server-shared-utils</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <!-- Provides a sane facade for the giant mess of incompatible logging
                frameworks in Java. -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <!-- An implementation of the Log4J API that routes everything through
                to SLF4J, instead. -->
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <!-- Provides a JUL handler, SLF4JBridgeHandler, that routes everything
                to SLF4J, instead. -->
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>

        <dependency>
            <!-- Logback is used as the logging target/backend for SLF4J during runtime:
                all logging events will be sent to it. -->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <!-- Provides a JSON layout (i.e. output format) for Logback. Provides
                ch.qos.logback.contrib.json.classic.JsonLayout, which is used in our logback.xml. -->
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
        </dependency>
        <dependency>
            <!-- Required by logback-json-classic. -->
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
        </dependency>
        <dependency>
            <!-- Required by logback-jackson. -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <!-- Used to monitor the JVM's memory usage, garbage collection, etc.
                at runtime. -->
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
        </dependency>

        <dependency>
            <!-- Used to run our unit and integration tests. -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Used in tests to verify that requests work as expected. -->
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${org.apache.httpcomponents.httpclient.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Used for launching the server with Jetty 10. -->
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <!-- Used in tests to help with managing asynchronous behavior. Reference:
                https://github.com/awaitility/awaitility -->
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-shared-test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Dependency required to ensure bfd-server-launcher-sample is available in ITs. -->
            <!-- This forces maven to build it before this module but doesn't impact classpath. -->
            <groupId>gov.cms.bfd</groupId>
            <artifactId>bfd-server-launcher-sample</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>src/main/assembly/zip.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- Configure the dependency plugin such that it can be used to grab
                        the test dependency artifacts, for manual testing or for use in integration
                        tests. -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <configuration>
                        <overWriteReleases>false</overWriteReleases>
                        <overWriteSnapshots>true</overWriteSnapshots>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Copy the BFD war file dependency for use in ITs. -->
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}-sample</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <outputDirectory>${project.build.directory}/sample</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                        <id>server-copy-war</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- Unpack the assembly for use in ITs. -->
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}/server-work</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                        <id>server-unpack-assembly</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
