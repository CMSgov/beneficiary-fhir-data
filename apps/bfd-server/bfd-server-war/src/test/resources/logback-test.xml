<configuration scan="true" scanPeriod="30 seconds">

    <!-- Helps with performance of JUL events routed through SLF4J. -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <appender name="HTTP_ACCESS" class="ch.qos.logback.core.FileAppender">
        <file>${bfdServer.logs.dir:-./target/server-work/}access.json</file>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <!-- We output the log as newline-delimited JSON objects (NDJSON).
                    This allows us to easily parse and search it. More importantly, it
                    pairs very nicely with Logback's MDC: values added to the MDC will be available
                    as separate keys in the JSON log events, which makes it super easy to extract
                    them from the logs. -->
            <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
                <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                    <!-- If you need things pretty-printed, pipe the log into jq or something like that. -->
                    <prettyPrint>false</prettyPrint>
                </jsonFormatter>

                <!-- Add line breaks between each entry, to make tailing the log simpler. -->
                <appendLineSeparator>true</appendLineSeparator>

                <!-- Format timestamps per ISO8601. -->
                <timestampFormat>yyyy-MM-dd'T'HH:mm:ss.SSSZ</timestampFormat>
                <timestampFormatTimezoneId>UTC</timestampFormatTimezoneId>
            </layout>
        </encoder>
    </appender>

    <!-- Route all events from the JSON access log to the correct output. The additivity
            setting here ensures that the events don't also land in the other file. -->
    <logger name="HTTP_ACCESS" level="INFO" additivity="false">
        <appender-ref ref="HTTP_ACCESS"/>
    </logger>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>%date{ISO8601} [%thread] %-5level %logger{36} [%file:%line] %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Set to 'debug' to log FHIR test client request and response summaries,
            or to 'trace' to log the full requests and responses. -->
    <logger name="gov.cms.bfd.server.war.ServerTestUtils" level="info"/>

    <root level="info">
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>
