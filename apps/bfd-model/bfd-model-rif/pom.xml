<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.cms.bfd</groupId>
		<artifactId>bfd-model-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>bfd-model-rif</artifactId>
	<packaging>jar</packaging>

	<description>
		Provides shared helpers and model classes related to the CCW's 'RIF' 
		file format.
	</description>

	<dependencies>
		<dependency>
			<!-- Provides an enum of all the CCW variables. -->
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-model-codebook-data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<!-- Uses the `dev/rif-layout-and-fhir-mapping.xlsx` file to codegen the 
				model classes in the gov.cms.bfd.model.rif package. -->
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-model-codegen-annotations</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<!-- Uses the `dev/rif-layout-and-fhir-mapping.xlsx` file to codegen the 
				model classes in the gov.cms.bfd.model.rif package. -->
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-model-codegen</artifactId>
			<version>${project.version}</version>

			<!-- Marked as provided to keep it (and its dependencies) out of our production 
				systems. -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!-- Provides various generic utilities. -->
			<groupId>com.justdavis.karl.jessentials</groupId>
			<artifactId>jessentials-misc</artifactId>
		</dependency>

		<dependency>
			<!-- Provides a sane facade for the giant mess of incompatible logging 
				frameworks in Java. -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<!-- Used to monitor performance and other statistics at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<dependency>
			<!-- Provides BOMInputStream, and other basic I/O utilities. -->
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<!-- Used to parse and read the RIF data files. -->
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<!-- The JPA 2.1 API. (Does not provide a JPA implementation by itself; 
				Hibernate is used for that in the BFD projects.) -->
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<groupId>org.hibernate.javax.persistence</groupId>
		</dependency>
		<dependency>
			<!-- The Hibernate JPA Model Generator, which will produce MetaModel classes 
				for JPA entities. This happens happens automagically via javac's annotation 
				processor. -->
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Hibernate is a popular ORM that implements the JPA 2.1 spec. It's 
				only brought into this project for the extra ORM mapping annotations that 
				it provides (hence all of the exclusions). -->
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate.common</groupId>
					<artifactId>hibernate-commons-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml</groupId>
					<artifactId>classmate</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss.spec.javax.transaction</groupId>
					<artifactId>jboss-transaction-api_1.2_spec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss</groupId>
					<artifactId>jandex</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>antlr</groupId>
					<artifactId>antlr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<!-- Provides a database schema mechanism. See the DatabaseSchemaManager 
				class. -->
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>4.2.0</version>
		</dependency>

		<dependency>
			<!-- Used to run our unit and integration tests. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Logback is used as the logging target/backend for SLF4J during tests: 
				all logging events will be sent to it. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- In-memory database that can be used for testing. -->
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<!-- Only used by tests, but included in compile scope for use with test
				utilities in that scope. -->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- The DB that BFD uses in production environments, included here for use in tests. -->
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<!-- Only used by tests, but included in compile scope for use with test
				utilities in that scope. -->
			<scope>compile</scope>
		</dependency>
		<dependency>
  		<groupId>org.xerial.snappy</groupId>
  		<artifactId>snappy-java</artifactId>
  		<version>1.1.7.3</version>
  		<type>jar</type>
  		<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<plugins>
		</plugins>
	</build>

</project>
