map "https://bfd.cms.gov/MappingLanguage/Maps/EOB-SupportingInfo-Helper" = "BFD-ExplanationOfBenefit-SupportingInfo-Helper-Map"
imports "https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper" 

group addSupportingInfo(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src.ROW_NUM as seqNum -> tgt.sequence = seqNum "set sequence number";
    src.CLM_ACTV_CARE_FROM_DT as careFromDate -> tgt then addAdmissionPeriod(src, tgt) "Add admission period.";
    src.CLM_SUBMSN_DT as clmRecvDate -> tgt then addClaimReceivedDate(src, tgt) "Add claim received date.";
    src.CLM_ADMSN_SRC_CD as pointOfOrigin -> tgt then addPointOfOrigin(src, tgt) "Add point of origin";
    src.DGNS_DRG_CD as drgCode -> tgt then addMSDRG(src, tgt) "Add DRG code";
    src.BENE_PTNT_STUS_CD as ptntStusCd -> tgt then addDischargeStatus(src, tgt) "Add discharge status";
    src.CLM_ADMSN_TYPE_CD as admitTypeCode -> tgt then addAdmitType(src, tgt) "Add admission type";
    src.CLM_BLOOD_PT_FRNSH_QTY as pintsFurnished -> tgt then addBloodPintsFurnished(src, tgt) "Add blood pints furnished";
    src.CLM_MDCR_INSTNL_MCO_PD_SW as primaryPayerCode -> tgt then addPrimaryPayer(src, tgt) "Add primary payer switch";
    src.CLM_MDCR_NCH_PTNT_STUS_IND_CD as patientStatusIndicator -> tgt then addPatientStatusIndicator(src, tgt) "Add patient status indicator";
    src.TYPE_OF_BILL_CD as tobCode -> tgt then addTypeOfBill(src, tgt) "Add type of bill code";
    src.CLM_NCH_WKLY_PROC_DT as procDt -> tgt then addProcessingDate(src, tgt) "Add processing date";
    src.CLM_ACTV_CARE_THRU_DT as activeThruDt -> tgt then addNCHThroughDate(src, tgt) "Add processing date";
    src.CLM_NCVRD_FROM_DT as ncvrdFromDt -> tgt then addNCStayFromDate(src, tgt) "Add processing date";
    src.CLM_NCVRD_THRU_DT as ncvrdToDt -> tgt then addNCStayToDate(src, tgt) "Add processing date";
    src.CLM_MDCR_EXHSTD_DT as mdcrExhaustDt -> tgt then addBenefitsExhaustedDate(src, tgt) "Add benefits exhausted date";
}
//timingPeriod
group addAdmissionPeriod(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.timing = create('Period') as tgtPeriod then {
        src.CLM_ACTV_CARE_FROM_DT as startValue -> tgtPeriod.start = startValue "set start";
        src.CLM_DSCHRG_DT as endValue -> tgtPeriod.end = endValue "set end";
    } "Add admission period";

    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("CLM_ACTV_CARE_FROM_DT",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";
}
//timingDate
group addClaimReceivedDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src.CLM_SUBMSN_DT as dateReceived -> tgt.timing = cast(dateReceived, "date") "set date";
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("CLM_SUBMSN_DT",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";
}
//code
group addPointOfOrigin(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("CLM_ADMSN_SRC_CD",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";

    //https://www.nubc.org/CodeSystem/PointOfOrigin
    src -> tgt.code = create('CodeableConcept') as tgtCC then{
        src.CLM_ADMSN_SRC_CD as val -> tgtCC.coding = c("https://www.nubc.org/CodeSystem/PointOfOrigin", val) "Add coding";
        src.CLM_ADMSN_SRC_CD as val -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/CLM-ADMSN-SRC-CD", val) "Add coding";
    } "Add CC";
}
//code
group addMSDRG(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("DGNS_DRG_CD",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src.DGNS_DRG_CD as val -> tgtCC.coding = c("https://www.cms.gov/Medicare/Medicare-Fee-for-Service-Payment/AcuteInpatientPPS/MS-DRG-Classifications-and-Software", val) "Add coding";
    } "Add CC";
}
//code
group addDischargeStatus(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("BENE_PTNT_STUS_CD",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src.BENE_PTNT_STUS_CD as val -> tgtCC.coding = c("https://www.nubc.org/CodeSystem/PatDischargeStatus",val) "Add coding";
        src.BENE_PTNT_STUS_CD as val -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/BENE-PTNT-STUS-CD",val) "Add coding";
    } "Add CC";
}
//code
group addAdmitType(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("CLM_ADMSN_TYPE_CD",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";

    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src.CLM_ADMSN_TYPE_CD as val -> tgtCC.coding = c("https://www.nubc.org/CodeSystem/PriorityTypeOfAdmitOrVisit",val) "Add coding";
        src.CLM_ADMSN_TYPE_CD as val -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/CLM-ADMSN-TYPE-CD",val) "Add coding";
    } "Add CC";
}
//value
group addBloodPintsFurnished(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_BLOOD_PT_FRNSH_QTY") "Add Coding";
    } "Add category";
    src -> tgt.value = create('SimpleQuantity') as tgtQuantity then {
        src.CLM_BLOOD_PT_FRNSH_QTY as val -> tgtQuantity.value = cast(val,"decimal") "Set value";
        src -> tgtQuantity.system = "http://unitsofmeasure.org" "Set system";
        src -> tgtQuantity.unit = "pint" "Set unit";
        src -> tgtQuantity.code = "[pt_us]" "Set code";
    } "Add blood Furnished";
}
//code
group addPrimaryPayer(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_MDCR_INSTNL_MCO_PD_SW") "Add Coding";
    } "Add category";
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src.CLM_MDCR_INSTNL_MCO_PD_SW as val -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/CLM-MDCR-INSTNL-MCO-PD-SW",val) "Add coding";
    } "Add CC";
}
//code
group addPatientStatusIndicator(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_MDCR_NCH_PTNT_STUS_IND_CD") "Add Coding";
    } "Add category";
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src.CLM_MDCR_NCH_PTNT_STUS_IND_CD as val -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/CLM-MDCR-NCH-PTNT-STUS-IND-CD", val) "Add coding";
    } "Add CC";
}
group addProcessingDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_NCH_WKLY_PROC_DT") "Add Coding";
    } "Add category";
    src.CLM_NCH_WKLY_PROC_DT as val -> tgt.timing = cast(val, 'date') "Add value";

}
//timingDate
group addNCHThroughDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_ACTV_CARE_THRU_DT") "Add Coding";
    } "Add category";
    src.CLM_ACTV_CARE_THRU_DT as val -> tgt.timing = cast(val, 'date') "Add value";

}
//timingDate
group addNCStayFromDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_NCVRD_FROM_DT") "Add Coding";
    } "Add category";
    src.CLM_NCVRD_FROM_DT as val -> tgt.timing = cast(val, 'date') "Add value";
}
//timingDate
group addNCStayToDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_NCVRD_THRU_DT") "Add Coding";
    } "Add category";
    src.CLM_NCVRD_THRU_DT as val -> tgt.timing = cast(val, 'date') "add value";
}
//timingDate
group addBenefitsExhaustedDate(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/claiminformationcategory","info") "Add Coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Supporting-Information","CLM_MDCR_EXHSTD_DT") "Add Coding";
    } "Add category";
    src.CLM_MDCR_EXHSTD_DT as val -> tgt.timing = cast(val, 'date') "add date";
}
//code. It will be interesting to see the response here on how these are represented. We may eschew 
group addTypeOfBill(source src: SupportingInfoComponent, target tgt: BackboneElement){
    src -> tgt.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = translate("TYPE_OF_BILL_CD",'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB-SupportingInfo-Categories','coding') "set coding";
    } "set category";

    src.TYPE_OF_BILL_CD as val -> tgt.code = cc("https://www.nubc.org/CodeSystem/TypeOfBill",val) "Add CC";

    //This field is actually a combination of multiple fields, so we need to isolate those.
    //cc macro won't work with %evaluate
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = create('Coding') as tgtCoding then {
            src.TYPE_OF_BILL_CD as val -> tgtCoding.code=evaluate(val,substring(1,1)), 
            //CLM_BILL_FAC_TYPE_CD
            tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-BILL-FAC-TYPE-CD" "Set coding";
        } "Add coding #2";
    } "Add CC";
    
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = create('Coding') as tgtCoding then {
            //This must be a concatenation to work. The meaning of the classification type code is dependent upon the facility type code. So we concatenate them.
            src.TYPE_OF_BILL_CD as val -> tgtCoding.code=evaluate(val,substring(1,2)), 
            tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-BILL-CLSFCTN-CD" "Set coding";
        } "Add coding #3";
    } "Add CC";
    src -> tgt.code = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = create('Coding') as tgtCoding then {
            //Same deal as above, but it's a concatenation of all three fields. 
            src.TYPE_OF_BILL_CD as val -> tgtCoding.code=evaluate(val,substring(1,3)), 
            tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-BILL-FREQ-CD" "Set coding";
        } "Add coding #4";
    } "Add CC";
}
