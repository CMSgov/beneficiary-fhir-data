//See this link for lexer order -> https://github.com/hapifhir/org.hl7.fhir.core/blob/c06051838f9bcd5fc0b552df960f5bf2fcf2dbb4/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/utils/StructureMapUtilities.java#L757
//Must appear in order map -> conceptmap -> uses -> imports -> groups

map "https://bfd.cms.gov/MappingLanguage/Maps/ExplanationOfBenefit-Base" = "BFD-ExplanationOfBenefit-Base-Map"

uses "https://bfd.cms.gov/fhir/StructureDefinition/ExplanationOfBenefit-Base" alias ExplanationOfBenefitBase as source
//hl7.org urls are used for dependent resources as the FHIR validator resolves them as such. 
uses "http://hl7.org/fhir/StructureDefinition/ProcedureComponent" alias ProcedureComponent as source
uses "http://hl7.org/fhir/StructureDefinition/DiagnosisComponent" alias DiagnosisComponent as source
uses "http://hl7.org/fhir/StructureDefinition/SupportingInfoComponent" alias SupportingInfoComponent as source
uses "http://hl7.org/fhir/StructureDefinition/LineItemComponent" alias LineItemComponent as source
uses "http://hl7.org/fhir/StructureDefinition/CareTeamComponent" alias CareTeamComponent as source

//The first specified target is what the default output will output as the ResourceType
uses "http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit" alias BFDEOB as target

imports "https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper" 
imports "https://bfd.cms.gov/MappingLanguage/Maps/EOB-SupportingInfo-Helper" 
imports "https://bfd.cms.gov/MappingLanguage/Maps/EOB-Item-Institutional-Helper" 

group createEOBBase(source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
    
    src -> tgt.status = "active" "Set status";
    //CLM_LTST_CLM_IND = latest claim indicator
    //CLM_FINL_ACTN_IND = claim is done processing
    //CLM_CNTL_NUM = claim control number
    //ORIG_CLM_CNTL_NUM = original claim control number. subsumes previous ones. 

    src -> tgt.use = "claim" "Set use code";
    src -> tgt.type = create('CodeableConcept') as tgtCC then {
      //CodeSystem -> CLM_TYPE_CD
      src.CLM_TYPE_CD as typeCd -> tgtCC.coding = translate(typeCd,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#ClM_TYPE_CD','coding') "translate code";
      src.CLM_TYPE_CD as typeCd -> tgtCC.coding = c('https://bluebutton.cms.gov/fhir/CodeSystem/CLM-TYPE-CD', typeCd) "Add claim type code";
    } "Create type";

    src -> tgt.subType = create('CodeableConcept') as tgtCC then {
      src.CLM_TYPE_CD as typeCd -> tgtCC.coding = translate(typeCd,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#subtype','coding') "translate code";
    } "Create type";

    src -> tgt.patient = create('Reference') as tgtReference then {
      src.CLM_BENE_XREF_EFCTV_SK as ptId -> tgtReference.reference = append("Patient/",ptId) "Concatenate patient id";
    } "Add patient reference to EOB";

    src -> tgt.meta = create('Meta') as tgtMeta then {
      src.lastUpdated as lastUpdated -> tgtMeta.lastUpdated = lastUpdated "set lastUpdated";
      src.CLM_TYPE_CD as typeCd -> tgtMeta.profile = translate(typeCd,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#profile_metadata','code') "set profile";
      //CodeSystem -> CLM_SRC_ID
      src.CLM_SRC_ID as sourceSk -> tgtMeta.source = translate(sourceSk, 'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#CLM_SRC_ID','code') "set source";
      src.CLM_SRC_ID as sourceSk -> tgtMeta.tag = translate(sourceSk, 'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#ADJUDICATION-STATUS','coding') "set source";
    } "Create metadata";

    //add unique claim ID as one identifier. We will add multiple.
    src -> tgt.identifier = create('Identifier') as tgtIdentifier then {
          src -> tgtIdentifier.type = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBIdentifierType", "uc") "Add identifier type";
          src.CLM_UNIQ_ID as claimId -> tgtIdentifier.value = claimId "Set identifier Value";
    } "Add CLM_UNIQ_ID as unique identifier";

    //CLM_CNTL_NUM  
    src -> tgt.identifier = create('Identifier') as tgtIdentifier then {
      src -> tgtIdentifier.system = "https://bluebutton.cms.gov/identifiers/CLM-CNTL-NUM" "set system";
      src.CLM_CNTL_NUM as claimCntlNum -> tgtIdentifier.value = claimCntlNum "Set identifier Value";
    } "Add CLM_CNTL_NUM as identifier";

    src.clmCntlArray as otherClaimNumber -> tgt.related = create('BackboneElement') as tgtBBElement then {
      src -> tgtBBElement.relationship = cc("http://terminology.hl7.org/CodeSystem/ex-relatedclaimrelationship","prior") "Add relationshipp";
      src -> tgtBBElement.reference = create('Identifier') as tgtId then{
        src -> tgtId.system = "https://bluebutton.cms.gov/identifiers/CLM-CNTL-NUM" "Add system";
        src -> tgtId.value = otherClaimNumber "Add value";
      } "Add reference";
    } "Add other claim control numbers";

    src -> tgt.billablePeriod = create('Period') as billablePeriod then {
      src.CLM_FROM_DT as fromDate -> billablePeriod.start = fromDate "Set from date";
      src.CLM_THRU_DT as toDate -> billablePeriod.end = toDate "Set to date";
      src.CLM_QUERY_CD as clmQueryCd -> billablePeriod.extension = create('Extension') as billableExtension then {
        //FSH Extension -> CLM_QUERY_CD
        src -> billableExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-QUERY-CD" "Set extension url";
        //for whatever reason, this one doesn't want to accept the macro. 
        src -> billableExtension.value = create('Coding') as tgtCoding then {
          //CodeSystem -> CLM_QUERY_CD
          src -> tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-QUERY-CD",
          tgtCoding.code=clmQueryCd "set claim query code";
        } "Set coding";
      } "Add claim query code";
    } "Set EOB period";
    
    src.CLM_EFCTV_DT as efctvDate -> tgt.created = efctvDate "Add created date for EOB";

    //Set insurer for part A + B claims. MA starts at 4XXX
    src.CLM_TYPE_CD as typeCd where (typeCd > 4 and typeCd < 4000) -> tgt.contained = create('Organization') as tgtOrg then createInsurerOrgPartAB(src,tgtOrg) "Create insurer org.";
    src.CLM_TYPE_CD as typeCd where (typeCd > 4 and typeCd < 4000) -> tgt.insurer = create('Reference') as tgtOrgRef, 
    tgtOrgRef.reference = "#insurer-org" "Set reference to contained insurer org";

    //FSH Extension + CodeSystem -> CLM_CNTRCTR_NUM
    src.CLM_CNTRCTR_NUM as fiNum -> tgt.extension = create('Extension') as tgtExtension then {
        src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-CNTRCTR-NUM" "Add url";
        src -> tgtExtension.value = create('Coding') as tgtCoding then{
          src -> tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-CNTRCTR-NUM",
          tgtCoding.code = fiNum "Add code";
        } "Add coding";
    } "CLM_CNTRCTR_NUM";

    //This field can be used to set the Coverage type. 
    //When adding a claim type that can be covered under part B (or PDE, whichever comes first), add the insurance logic here.
    src.CLM_NRLN_RIC_CD as ricCd -> tgt.extension = create('Extension') as tgtExtension then {
        src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-NRLN-RIC-CD" "Add url";
        src -> tgtExtension.value = create('Coding') as tgtCoding then{
          src -> tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-NRLN-RIC-CD",
          tgtCoding.code = ricCd "Add code";
        } "Add coding";
      } "CLM_NRLN_RIC_CD";

    src.CLM_DISP_CD as dispCd -> tgt.extension = create('Extension') as tgtExtension then {
        src -> tgtExtension.url =  "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-DISP-CD" "Add url";
        src -> tgtExtension.value = create('Coding') as tgtCoding then{
          src -> tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-DISP-CD",
          tgtCoding.code = dispCd "Add code";
        } "Add coding";
      } "CLM_DISP_CD";

    src.CLM_PMT_AMT as amt -> tgt.payment = create('BackboneElement') as tgtBBElement then {
      src -> tgtBBElement.amount = create('Money') as tgtMoney then addMoney(amt, tgtMoney) "Add Money";
    } "CLM_PMT_AMT";

    //CLM_CMS_PROC_DT - FI Claim Process Date
      src.CLM_CMS_PROC_DT as procDt -> tgt.extension = create('Extension') as tgtExtension then {
        src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-CMS-PROC-DT" "Add url";
        procDt -> tgtExtension.value = procDt "set process date";
      } "CLM_CMS_PROC_DT";

    //For institutional claims, the provider will be an institution. For others, it will generally be a practitioner.
    src.CLM_TYPE_CD as typeCd where((typeCd > 4 and typeCd < 70) or (typeCd >= 2000 and typeCd <= 2700) or (typeCd >= 1000 and typeCd <= 1700)) -> tgt.contained = create('Organization') as tgtOrg then createProviderOrg(src,tgtOrg) "Create contained org."; 
    src.CLM_TYPE_CD as typeCd where((typeCd > 4 and typeCd < 70) or (typeCd >= 2000 and typeCd <= 2700) or (typeCd >= 1000 and typeCd <= 1700)) -> tgt.provider = create('Reference') as tgtRef, 
    tgtRef.reference = "#provider-org" "Set reference to contained provider org";
   
    //Partial for PAC data, complete for adjudicated. Of note, we do this by source. So even if final action on PAC source, still "partial"
    src.CLM_SRC_ID as sourceSk where sourceSk = '20000' -> tgt.outcome = "complete" "Set NCH outcome to complete.";
    src.CLM_TYPE_CD as typeCd where(typeCd >= 1000 and typeCd < 2000) -> tgt.outcome = "partial" "Add phase 1 outcome";
    //Check on 1000-2000 phases w/ the CLM_CRNT_STUS_CD. We can 
    src.CLM_TYPE_CD as typeCd where(typeCd >= 2000 and typeCd < 3000) -> tgt then {
      //Bifurcate by if it's institutional or professional. 
      src.institutionalComponents as instComponents -> tgt then {
        instComponents.CLM_CRNT_STUS_CD as curStatusCode -> tgt.outcome = translate(curStatusCode, 'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#CLM-CRNT-STUS-CD','code') "Set outcome for phase 2/3 FISS";
      } "Set institutional outcome";

      //We will add the professional "array" here.
    } "Complete additional outcomes";
    
    //When we get to carrier/DME, we'll do the same with MCS/VIPS status. 

    //Building out procedure, diagnosis, supportingInfo, item, and then careteam

    //procedure
    src.procedures as procedures -> tgt.procedure = create('BackboneElement') as tgtProcedure then addProcedures(procedures, tgtProcedure) "Add procedures to inpatient institutional EOBs";

    //diagnosis
    src.diagnoses as diagnoses -> tgt.diagnosis = create('BackboneElement') as tgtDiagnosis then addDiagnoses(diagnoses, tgtDiagnosis) "Add diagnoses";

    //Supportinginfo!
    src.supportingInfoComponents as infoComponent -> tgt.supportingInfo = create('BackboneElement') as tgtSupportingInfo then addSupportingInfo(infoComponent,tgtSupportingInfo) "add supportingInfo";

    //item
    src.lineItemComponents as itemComponent -> tgt.item = create('BackboneElement') as tgtItem then addItem(itemComponent,tgtItem) "add items";

    //careteam. Assigning an alias here means "if this is populated in the source, evaluate this group/rule"
   // src.careTeamComponents as careTeamComponent -> tgt as careTeamTarget then addCareTeamMembers(src, careTeamTarget) "Add care team";

    src.CLM_ATNDG_PRVDR_NPI_NUM as prvdrNPI where prvdrNPI != '0' -> tgt then addAttendingCareTeamMember(src,tgt) "Add attending";
    src.CLM_OPRTG_PRVDR_NPI_NUM as prvdrNPI where prvdrNPI != '0' -> tgt then addOperatingCareTeamMember(src,tgt) "Add operating";
    src.CLM_OTHR_PRVDR_NPI_NUM as prvdrNPI where prvdrNPI != '0' -> tgt then addOtherCareTeamMember(src,tgt) "Add other";
    //The below is deliberate. Rendering Providers are Type 1 NPIs in CMS data.
    src.CLM_RNDRG_PRVDR_NPI_NUM as prvdrNPI where prvdrNPI != '0' -> tgt then addRenderingCareTeamMember(src,tgt) "Add rendering";

    //Add header level adjudication.
    src -> tgt.adjudication = create('BackboneElement') as tgtAdjudication then {
      //CLM_MDCR_IP_PPS_DRG_WT_NUM - Claim PPS Capital DRG Weight Number
      src.institutionalComponents as institutionalComponents -> tgt then {
        institutionalComponents.CLM_MDCR_IP_PPS_DRG_WT_NUM as amtUsed -> tgtAdjudication.extension = create('Extension') as tgtExtension then{
          src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-MDCR-IP-PPS-DRG-WT-NUM" "Add url";
          amtUsed -> tgtExtension.value = cast(amtUsed,'decimal') "set amtUsed";
        } "add PPS DRG WT ";

      }"Add adjudication extension for PPS weight number.";
      src -> tgtAdjudication.reason = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBPayerAdjudicationStatus","other") "Set adjudication reason";
      src -> tgtAdjudication.category = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator","benefitpaymentstatus") "Set adjudication category";
    } "Add header-level adjudication";

    src.institutionalComponents as institutionalComponents -> tgt as instlTgt then addInstitutionalItems(src, instlTgt) "add institutional components";

    
    //skeleton translation provided. Will transition to NRLN_RIC_CD/RIC_CD once it is profiled by the IDR for FISS/MCS. 
    src.CLM_TYPE_CD as claimType -> tgt.insurance = create('BackboneElement') as tgtBBElement then {
      src -> tgtBBElement.focal = true "Add focal";
      src -> tgtBBElement.coverage = create('Reference') as tgtReference then {
        claimType -> tgtReference.display = translate(claimType,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#CLM_TYPE_TO_COVERAGE_PART','code') "Add temp coverage placeholder";
      } "Add reference for coverage";
    } "Add insurance coverage";

    //CLM_MDCR_INSTNL_TOT_CHRG_AMT -> CLM_SBMT_CHRG_AMT
    src.CLM_SBMT_CHRG_AMT as totChargeAmt -> tgt.total = create('BackboneElement') as tgtBBElement then {
      src -> tgtBBElement.category = create('CodeableConcept') as tgtCC then {
        src -> tgtCC.coding = c("http://terminology.hl7.org/CodeSystem/adjudication", "submitted") "Add first coding";
        src -> tgtCC.coding = c("https://bluebutton.cms.gov/fhir/CodeSystem/Adjudication", "CLM_SBMT_CHRG_AMT") "Add second coding";
     } "Add codeable concept";
     src -> tgtBBElement.amount = create('Money') as tgtMoney then addMoney(totChargeAmt, tgtMoney) "Add Money";
    } "Add total charge amount";
  


   /* src.CLM_TYPE_CD as claim_type where claim_type = 60 -> tgt.coverage = create('Reference') as tgtReference then {
      src -> tgtReference.display = "Part A" "Add temp coverage placeholder";
    } "Add coverage display to EOB";
    */
}

group addMoney(source src: String, target tgt: Money){
  src -> tgt.currency = "USD" "Set Currency";
  src as amt -> tgt.value = cast(amt, "decimal") "Set amount";
}

group addInstitutionalItems (source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
  //This is a bit obtuse, but this allows us to cite the institutional + overall information from the same context.
  src.institutionalComponents as institutionalComponents -> tgt then {
    institutionalComponents.CLM_MDCR_NPMT_RSN_CD as nonPmtCode where nonPmtCode.length()>0 -> tgt.extension = create('Extension') as tgtExtension then {
      src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-MDCR-NPMT-RSN-CD" "Add url";
      src -> tgtExtension.value = create('Coding') as tgtCoding then {
        src -> tgtCoding.code = nonPmtCode,
        tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-MDCR-NPMT-RSN-CD" "set system";
      } "Add target coding";
    } "Add non payment reason";

    institutionalComponents.CLM_FI_ACTN_CD as actnCd where actnCd != '~' -> tgt.extension = create('Extension') as tgtExtension then {
      src -> tgtExtension.url = "https://bluebutton.cms.gov/fhir/StructureDefinition/CLM-FI-ACTN-CD" "Add url";
      src -> tgtExtension.value = create('Coding') as tgtCoding then {
        src -> tgtCoding.system = "https://bluebutton.cms.gov/fhir/CodeSystem/CLM-FI-ACTN-CD" "Set system";
        actnCd -> tgtCoding.code=actnCd "set code";
      } "Set value";
    } "CLM_FI_ACTN_CD";
    
  } "Add wrapper for institutional components";

  src -> tgt.benefitBalance = create('BackboneElement') as tgtBB then addInstitutionalBenefitBalance(src,tgtBB) "Add benefit balance";
}

//Because of the way that a BenefitBalance is structured, there will inherently be some redundancy in what is populated with elements that are not strictly institutional.
group addInstitutionalBenefitBalance (source src: ExplanationOfBenefitBase, target tgt: BackboneElement){
  src.institutionalComponents as institutionalComponents -> tgt then {
    src -> tgt.category = cc("http://terminology.hl7.org/CodeSystem/ex-benefitcategory","1") "Create Base CC";

  //Unsigned integer fields.
  institutionalComponents.CLM_MDCR_IP_LRD_USE_CNT as lrdUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_LRD_USE_CNT") "Add codeable concept";
    lrdUsed -> tgtBBElement.used = cast(lrdUsed,'unsignedInt') "set lrdUsed";
  } "Add CLM_MDCR_IP_LRD_USE_CNT";
  institutionalComponents.CLM_INSTNL_MDCR_COINS_DAY_CNT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_MDCR_COINS_DAY_CNT") "Add codeable concept";
    amtUsed -> tgtBBElement.used = cast(amtUsed,'unsignedInt') "set amtUsed";
  } "Add CLM_INSTNL_MDCR_COINS_DAY_CNT";
  institutionalComponents.CLM_INSTNL_NCVRD_DAY_CNT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_NCVRD_DAY_CNT") "Add codeable concept";
    amtUsed -> tgtBBElement.used = cast(amtUsed,'unsignedInt') "set amtUsed";
  } "Add CLM_INSTNL_NCVRD_DAY_CNT";

  institutionalComponents.CLM_MDCR_HOSPC_PRD_CNT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_HOSPC_PRD_CNT") "Add codeable concept";
    amtUsed -> tgtBBElement.used = cast(amtUsed,'unsignedInt') "set amtUsed";
  } "Add CLM_MDCR_HOSPC_PRD_CNT";

  institutionalComponents.CLM_MDCR_HHA_TOT_VISIT_CNT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_HHA_TOT_VISIT_CNT") "Add codeable concept";
    amtUsed -> tgtBBElement.used = cast(amtUsed,'unsignedInt') "set amtUsed";
  } "Add CLM_MDCR_HHA_TOT_VISIT_CNT";
  
  //CLM_INSTNL_CVRD_DAY_CNT - Utilization Day Count
  institutionalComponents.CLM_INSTNL_CVRD_DAY_CNT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_CVRD_DAY_CNT") "Add codeable concept";
    amtUsed -> tgtBBElement.used = cast(amtUsed,'unsignedInt') "set amtUsed";
  } "Add CLM_INSTNL_CVRD_DAY_CNT";

  //Money
  institutionalComponents.CLM_INSTNL_PER_DIEM_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_PER_DIEM_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_INSTNL_PER_DIEM_AMT";
  //CLM_MDCR_IP_PPS_DSPRPRTNT_AMT - Claim PPS Capital Disproportionate Share Amount
  institutionalComponents.CLM_MDCR_IP_PPS_DSPRPRTNT_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_DSPRPRTNT_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_DSPRPRTNT_AMT";
  //CLM_MDCR_IP_PPS_EXCPTN_AMT - Claim PPS Capital Exception Amount
  institutionalComponents.CLM_MDCR_IP_PPS_EXCPTN_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_EXCPTN_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_EXCPTN_AMT";
  //CLM_PPS_CPTL_FSP_AMT - Claim PPS Capital FSP Amount
  institutionalComponents.CLM_MDCR_IP_PPS_CPTL_FSP_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_CPTL_FSP_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_CPTL_FSP_AMT";
  //CLM_PPS_CPTL_IME_AMT - Claim PPS Capital IME Amount
  institutionalComponents.CLM_MDCR_IP_PPS_CPTL_IME_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_CPTL_IME_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_CPTL_IME_AMT";
  //CLM_PPS_CPTL_OUTLIER_AMT - Claim PPS Capital Outlier Amount
  institutionalComponents.CLM_MDCR_IP_PPS_OUTLIER_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_OUTLIER_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_OUTLIER_AMT";
  //CLM_MDCR_IP_PPS_CPTL_HRMLS_AMT - Claim PPS Old Capital Hold Harmless Amount
  institutionalComponents.CLM_MDCR_IP_PPS_CPTL_HRMLS_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_CPTL_HRMLS_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_CPTL_HRMLS_AMT";
  //CLM_MDCR_IP_PPS_CPTL_TOT_AMT - Claim Total PPS Capital Amount
  institutionalComponents.CLM_MDCR_IP_PPS_CPTL_TOT_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_PPS_CPTL_TOT_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_PPS_CPTL_TOT_AMT";
  //CLM_MDCR_INSTNL_PRMRY_PYR_AMT - Primary Payer Paid Amount
  institutionalComponents.CLM_MDCR_INSTNL_PRMRY_PYR_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_INSTNL_PRMRY_PYR_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_INSTNL_PRMRY_PYR_AMT";
  //CLM_INSTNL_PRFNL_AMT - Professional Component Charge
  institutionalComponents.CLM_INSTNL_PRFNL_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_PRFNL_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_INSTNL_PRFNL_AMT";
  //CLM_INSTNL_DRG_OUTLIER_AMT - DRG Outlier Approved Payment Amount
  institutionalComponents.CLM_INSTNL_DRG_OUTLIER_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_INSTNL_DRG_OUTLIER_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_INSTNL_DRG_OUTLIER_AMT";
  //CLM_MDCR_IP_BENE_DDCTBL_AMT - Deductible Amount
  institutionalComponents.CLM_MDCR_IP_BENE_DDCTBL_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_IP_BENE_DDCTBL_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_IP_BENE_DDCTBL_AMT";
  //CLM_HIPPS_UNCOMPD_CARE_AMT - Claim Uncompensated Care Payment Amount
  institutionalComponents.CLM_HIPPS_UNCOMPD_CARE_AMT as uncompdCareAmt -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_HIPPS_UNCOMPD_CARE_AMT") "Add url";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(uncompdCareAmt, tgtMoney) "Add Money";
  } "Add non payment reason";

  //CLM_MDCR_INSTNL_BENE_PD_AMT - Claim PPS Capital Disproportionate Share Amount
  institutionalComponents.CLM_MDCR_INSTNL_BENE_PD_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_INSTNL_BENE_PD_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_INSTNL_BENE_PD_AMT";

  //for all practical purposes, these will only be present on institutional claims. 
  src.CLM_OPRTNL_DSPRTNT_AMT as amt -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_OPRTNL_DSPRTNT_AMT") "Add url";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amt, tgtMoney) "Add Money";
  } "CLM_OPRTNL_DSPRTNT_AMT";

  src.CLM_OPRTNL_IME_AMT as amt -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_OPRTNL_IME_AMT") "Add url";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amt, tgtMoney) "Add Money";
  } "CLM_OPRTNL_IME_AMT";

  //CLM_MDCR_DDCTBL_AMT
  src.CLM_MDCR_DDCTBL_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_DDCTBL_AMT") "Add codeable concept";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_DDCTBL_AMT";

  //From CLM
  //These are institutional-inpatient mappings. For others, ensure that the mappings are correct. 
  //CLM_MDCR_COINSRNC_AMT
  src.CLM_MDCR_COINSRNC_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_MDCR_COINSRNC_AMT") "Add CC";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_MDCR_COINSRNC_AMT";
  
  //CLM_BLOOD_LBLTY_AMT
  src.CLM_BLOOD_LBLTY_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_BLOOD_LBLTY_AMT") "Add CC";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_BLOOD_LBLTY_AMT";

  //CLM_NCVRD_CHRG_AMT
  src.CLM_NCVRD_CHRG_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_NCVRD_CHRG_AMT") "Add CC";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_NCVRD_CHRG_AMT";

  src.CLM_PRVDR_PMT_AMT as amtUsed -> tgt.financial = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.type = cc("https://bluebutton.cms.gov/fhir/CodeSystem/Benefit-Balance","CLM_PRVDR_PMT_AMT") "Add CC";
    src -> tgtBBElement.used = create('Money') as tgtMoney then addMoney(amtUsed, tgtMoney) "Add Money";
  } "Add CLM_PRVDR_PMT_AMT";

  } "Add wrapper for institutional components";
}

group addDiagnoses(source src: DiagnosisComponent, target tgt: BackboneElement){
  src.ROW_NUM as rowNum -> tgt.sequence = rowNum "set sequence number";

  src.CLM_PROD_TYPE_CD as dTypeCode where (dTypeCode = "A" or dTypeCode = "P") -> tgt.type = create('CodeableConcept') as tgtCC then {
    src -> tgtCC.coding = translate(dTypeCode,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#HL7_DIAGTYPE','coding') "set coding";
  } "Set type";
  src.CLM_PROD_TYPE_CD as dTypeCode where (dTypeCode = "1" or dTypeCode = "D" or dTypeCode = "E" or dTypeCode = "R") -> tgt.type = create('CodeableConcept') as tgtCC then {
    src -> tgtCC.coding = translate(dTypeCode,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#C4BB_DIAGTYPE','coding') "set coding";
  } "Set type";

  src.CLM_POA_IND as poaInd where (poaInd != ' ' and poaInd != '~' ) -> tgt.onAdmission = create('CodeableConcept') as tgtPOA,
    tgtPOA.coding = create('Coding') as tgtCoding,
    tgtCoding.system = "https://www.cms.gov/Medicare/Medicare-Fee-for-Service-Payment/HospitalAcqCond/Coding",
    tgtCoding.code = poaInd "Set POA indicator";

  src -> tgt.diagnosis = create('CodeableConcept') as tgtDiagnosis then {
    src -> tgtDiagnosis.coding = create('Coding') as tgtCoding then {
      //From CLM_PROD
      src.CLM_DGNS_PRCDR_ICD_IND as indicator -> tgtCoding.system = translate(indicator,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#CLM_DGNS_PRCDR_ICD_IND_DIAGNOSIS','code') "set system";
      src.CLM_DGNS_CD as diagnosisCode -> tgtCoding.code = diagnosisCode "set diagnosis code";
    } "set coding";
  } "Set diagnosis, including code";

}

group addProcedures(source src: ProcedureComponent, target tgt: BackboneElement){
  src.CLM_VAL_SQNC_NUM as sequenceNum -> tgt.sequence = sequenceNum "set sequence number";
  src.CLM_VAL_SQNC_NUM as sequenceNum where sequenceNum = 1 -> tgt.type = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimProcedureType","principal") "Set type for principal";
  src.CLM_VAL_SQNC_NUM as sequenceNum where sequenceNum != 1 -> tgt.type = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimProcedureType","other") "Set type for non-principal";
  src.CLM_PRCDR_PRFRM_DT as procedureDate where procedureDate > '2000-01-01'-> tgt.date = procedureDate "set procedure date";

  src -> tgt.procedure = create('CodeableConcept') as tgtProcedure then {
    src -> tgtProcedure.coding = create('Coding') as tgtCoding then {
      src.CLM_DGNS_PRCDR_ICD_IND as indicator -> tgtCoding.system = translate(indicator,'https://bfd.cms.gov/MappingLanguage/Maps/EOB-Helper#CLM_DGNS_PRCDR_ICD_IND_PROCEDURE','code') "set system";
      src.CLM_PRCDR_CD as procedureCode -> tgtCoding.code = procedureCode "set procedure code";
    } "set coding";
  } "Set procedure, including code";

}

group addAttendingCareTeamMember(source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
  src -> tgt.contained = create('Practitioner') as tgtPract then {
    src -> tgtPract.id = "careteam-provider-1" "Set practitioner id";
    src -> tgtPract.meta = create('Meta') as tgtMeta then {
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Practitioner|2.1.0" "Add profile";
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner|6.1.0" "Add profile";
    } "Add practitioner meta";
    src -> tgtPract.identifier = create('Identifier') as tgtId then {
      src -> tgtId.type = cc("http://terminology.hl7.org/CodeSystem/v2-0203","NPI") "Add ID Type";
      src -> tgtId.system = "http://hl7.org/fhir/sid/us-npi" "set NPI system url";
      src.CLM_ATNDG_PRVDR_NPI_NUM as npi -> tgtId.value = npi "set NPI";
    } "Create NPI identifier";
    src.family_name_atndg as family_name -> tgtPract.name = create('HumanName') as tgtName then {
      family_name -> tgtName.family = family_name "set family name";
    } "add family name";
  } "Add attending practitioner";
  src -> tgt.careTeam = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.role = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimCareTeamRole","attending") "Add role";
    src -> tgtBBElement.sequence = "1" "Set sequence";
    src -> tgtBBElement.provider = create('Reference') as tgtReference then {
      src -> tgtReference.reference = "#careteam-provider-1" "Add practitioner";
    } "Add practitioner reference to EOB";
  } "Add CareTeam Element";
}
group addOperatingCareTeamMember(source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
  src -> tgt.contained = create('Practitioner') as tgtPract then {
    src -> tgtPract.id = "careteam-provider-2" "Set practitioner id";
    src -> tgtPract.meta = create('Meta') as tgtMeta then {
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Practitioner|2.1.0" "Add profile";
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner|6.1.0" "Add profile";
    } "Add practitioner meta";
    src -> tgtPract.identifier = create('Identifier') as tgtId then {
      src -> tgtId.type = cc("http://terminology.hl7.org/CodeSystem/v2-0203","NPI") "Add ID Type";
      src -> tgtId.system = "http://hl7.org/fhir/sid/us-npi" "set NPI system url";
      src.CLM_OPRTG_PRVDR_NPI_NUM as npi -> tgtId.value = npi "set NPI";
    } "Create NPI identifier";
    src.family_name_oprtg as familyName -> tgtPract.name = create('HumanName') as tgtName then {
      familyName -> tgtName.family = familyName "set family name";
    } "add family name";
  } "Add attending practitioner";
  src -> tgt.careTeam = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.role = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimCareTeamRole","operating") "Add role";
    src -> tgtBBElement.sequence = "2" "Set sequence";
    src -> tgtBBElement.provider = create('Reference') as tgtReference then {
      src -> tgtReference.reference = "#careteam-provider-2" "Add practitioner";
    } "Add practitioner reference to EOB";
  } "Add CareTeam Element";
}
group addOtherCareTeamMember(source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
  src -> tgt.contained = create('Practitioner') as tgtPract then {
    src -> tgtPract.id = "careteam-provider-3" "Set practitioner id";
    src -> tgtPract.meta = create('Meta') as tgtMeta then {
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Practitioner|2.1.0" "Add profile";
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner|6.1.0" "Add profile";
    } "Add practitioner meta";
    src -> tgtPract.identifier = create('Identifier') as tgtId then {
      src -> tgtId.type = cc("http://terminology.hl7.org/CodeSystem/v2-0203","NPI") "Add ID Type";
      src -> tgtId.system = "http://hl7.org/fhir/sid/us-npi" "set NPI system url";
      src.CLM_OTHR_PRVDR_NPI_NUM as npi -> tgtId.value = npi "set NPI";
    } "Create NPI identifier";
    src.family_name_othr as familyName -> tgtPract.name = create('HumanName') as tgtName then {
      familyName -> tgtName.family = familyName "set family name";
    } "add family name";
  } "Add attending practitioner";
  src -> tgt.careTeam = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.role = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimCareTeamRole","otheroperating") "Add role";
    src -> tgtBBElement.sequence = "3" "Set sequence";
    src -> tgtBBElement.provider = create('Reference') as tgtReference then {
      src -> tgtReference.reference = "#careteam-provider-3" "Add practitioner";
    } "Add practitioner reference to EOB";
  } "Add CareTeam Element";
}
//Note, this may need to be changed to an Organization situationally. C4BB defines it as constrained to an Organization, which doesn't make sense at first glance. 
group addRenderingCareTeamMember(source src: ExplanationOfBenefitBase, target tgt: BFDEOB){
  src -> tgt.contained = create('Practitioner') as tgtPract then {
    src -> tgtPract.id = "careteam-provider-4" "Set practitioner id";
    src -> tgtPract.meta = create('Meta') as tgtMeta then {
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Practitioner|2.1.0" "Add profile";
      src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner|6.1.0" "Add profile";
    } "Add practitioner meta";
    src -> tgtPract.identifier = create('Identifier') as tgtId then {
      src -> tgtId.type = cc("http://terminology.hl7.org/CodeSystem/v2-0203","NPI") "Add ID Type";
        src -> tgtId.system = "http://hl7.org/fhir/sid/us-npi" "set NPI system url";
        src.CLM_RNDRG_PRVDR_NPI_NUM as npi -> tgtId.value = npi "set NPI";
    } "Create NPI identifier";
    src.family_name_rndrg as familyName -> tgtPract.name = create('HumanName') as tgtName then {
      familyName -> tgtName.family = familyName "set family name";
    } "add family name";
  } "Add attending practitioner";
  src -> tgt.careTeam = create('BackboneElement') as tgtBBElement then {
    src -> tgtBBElement.role = cc("http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBClaimCareTeamRole","rendering") "Add role";
    src -> tgtBBElement.sequence = "4" "Set sequence";
    src -> tgtBBElement.provider = create('Reference') as tgtReference then {
      src -> tgtReference.reference = "#careteam-provider-4" "Add practitioner";
    } "Add practitioner reference to EOB";
  } "Add CareTeam Element";
}

group createInsurerOrgPartAB(source src: ExplanationOfBenefitBase, target tgtOrg: Organization){
  src -> tgtOrg.id = "insurer-org" "Set org id";
  src -> tgtOrg.meta = create('Meta') as tgtMeta then {
    src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Organization|2.1.0" "Set org profile";
    src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization|6.1.0" "Set org profile";
  } "Set organization metadata";
  src -> tgtOrg.active = "true" "set org status";
  src -> tgtOrg.name = "Centers for Medicare and Medicaid Services" "set org name";
}

group createProviderOrg(source src: ExplanationOfBenefitBase, target tgt: Organization){
  src -> tgt.id = "provider-org" "Set org id";
  src -> tgt.meta = create('Meta') as tgtMeta then {
          src -> tgtMeta.profile = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Organization|2.1.0" "Set org profile";
          src -> tgtMeta.profile = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization|6.1.0" "Set org profile";
        } "Set organization metadata";
        src -> tgt.active = "true" "set org status";
        src -> tgt.identifier = create('Identifier') as tgtId then {
          src -> tgtId.type = cc("http://terminology.hl7.org/CodeSystem/v2-0203","NPI") "Add ID Type";
          src -> tgtId.system = "http://hl7.org/fhir/sid/us-npi" "set NPI system url";
          src.PRVDR_BLG_PRVDR_NPI_NUM as npi -> tgtId.value = npi "set NPI";
      } "Create NPI identifier";
      src.CLM_BLG_PRVDR_OSCAR_NUM as ccn -> tgt.identifier = create('Identifier') as tgtId then{
        src -> tgtId.system = "http://terminology.hl7.org/NamingSystem/CCN" "set ccn system url";
        src -> tgtId.value = ccn "set ccn";
      } "Add OSCAR/CCN num";
  src -> tgt.name = "PROVIDER ORG SOURCED FROM NPPES" "Add provider org";
}
