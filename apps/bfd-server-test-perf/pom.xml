<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>gov.cms.bfd</groupId>
		<artifactId>bfd-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>bfd-server-test-perf</artifactId>
	<packaging>jar</packaging>

	<description>
		A set of stress tests for the BFD Server, using Apache JMeter and Ansible.
	</description>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Ensure that this version, which hapi-fhir-* absolutely requires, 
					gets included in the shaded Uber JAR. -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
			</dependency>
			<dependency>
				<!-- Ensure that this version, which hapi-fhir-* absolutely requires, 
					gets included in the shaded Uber JAR. -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.14</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<!-- The JMeter API for "Java Request" samplers, as documented on http://jmeter.apache.org/usermanual/component_reference.html#Java_Request. -->
			<!-- Marked 'provided' as this project's uber JAR will end up being loaded 
				into the same classpath as the JMeter server/client, which provides an implementation 
				of this already. -->
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_java</artifactId>
			<version>2.13</version>
			<scope>provided</scope>
			<exclusions>
				<!-- Excluding these only because they're not in the central repo. Fortunately, 
					we don't need them to compile this project, only at runtime, and JMeter has 
					them builtin so we're fine there. -->
				<exclusion>
					<groupId>commons-jexl</groupId>
					<artifactId>commons-jexl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-math3</groupId>
					<artifactId>commons-math3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-pool2</groupId>
					<artifactId>commons-pool2</artifactId>
				</exclusion>
				<!-- Exclude SLF4J bindings that are causing conflicts for the logger -->
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-nop</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-server-war</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<classifier>classes</classifier>
		</dependency>
		<dependency>
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-model-rif</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-pipeline-ccw-rif</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<!-- Provides sample data used in tests. -->
			<groupId>gov.cms.bfd</groupId>
			<artifactId>bfd-model-rif-samples</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<!-- Used for parsing JSON resources. -->
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.12.2</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.0</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Can be used to select which JDK to use (amongst other things). 
						Options must be specified in `~/.m2/toolchains.xml`. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<configuration>
						<toolchains>
							<jdk>
								<!-- Use a Java 11 JDK. -->
								<version>11</version>
							</jdk>
						</toolchains>
					</configuration>
				</plugin>
				<plugin>
					<!-- Builds an "uber" JAR for this project, which includes the project's 
						output and all dependencies, baked into a single big JAR file. This is done 
						to simplify this project's usage with JMeter: there's now only one JAR to 
						include with JMeter, rather than the whole dependency tree. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.2.4</version>
					<configuration>
						<keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
						<promoteTransitiveDependencies>false</promoteTransitiveDependencies>
						<shadedArtifactAttached>true</shadedArtifactAttached>
						<shadedClassifierName>uber</shadedClassifierName>
						<filters>
							<filter>
								<!-- Exclude JAR signature files, per http://stackoverflow.com/a/6743609/1851299. -->
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
								</excludes>
							</filter>
						</filters>
						<relocations>
							<relocation>
								<!-- JMeter includes an old version of httpclient, but HAPI FHIR 
									has a hard dependency on a newer version. Rewrite the bytecode to make it 
									all work anyways. -->
								<pattern>org.apache.http</pattern>
								<shadedPattern>shaded.org.apache.http</shadedPattern>
							</relocation>
						</relocations>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Activate the toolchain specified above. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-toolchains-plugin</artifactId>
				<executions>
					<execution>
						<id>toolchain-default</id>
						<goals>
							<goal>toolchain</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Builds an "uber" JAR. See above for details. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
