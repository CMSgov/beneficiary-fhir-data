<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.3</maven>
	</prerequisites>

	<parent>
		<groupId>gov.hhs.cms.bluebutton</groupId>
		<artifactId>bluebutton-parent</artifactId>
		<version>1.1.0</version>
	</parent>

	<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
	<artifactId>bluebutton-data-pipeline</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>bluebutton-data-pipeline</name>
	<description>
		A parent POM for the CMS/MyMedicare.gov ETL: migrates data from the CCW data warehouse to the Blue Button FHIR server.
	</description>
	<url>https://github.com/HHSIDEAlab/bluebutton-data-pipeline</url>

	<issueManagement>
		<!-- There doesn't seem to be any tooling support for this yet, but it 
			doesn't hurt to include it. -->
		<system>GitHub Issues</system>
		<url>https://github.com/HHSIDEAlab/bluebutton-data-pipeline/issues</url>
	</issueManagement>

	<ciManagement>
		<!-- Per http://stackoverflow.com/questions/14754372/whats-the-purpose-of-the-maven-3-cimanagement-configuration#comment20752353_14762245, 
			Sonar (at least) can use this information. -->
		<system>jenkins</system>
		<url>http://builds.hhsdevcloud.us/job/HHSIDEALab/job/bluebutton-data-pipeline/</url>
	</ciManagement>

	<scm>
		<!-- URL format taken from http://www.sonatype.com/people/2009/09/maven-tips-and-tricks-using-github/ -->
		<connection>scm:git:git@github.com:HHSIDEAlab/bluebutton-data-pipeline.git</connection>
		<developerConnection>scm:git:git@github.com:HHSIDEAlab/bluebutton-data-pipeline.git</developerConnection>
		<url>https://github.com/HHSIDEAlab/bluebutton-data-pipeline</url>
		<tag>HEAD</tag>
	</scm>

	<modules>
		<module>bluebutton-data-pipeline-desynpuf</module>
		<module>bluebutton-data-pipeline-ccw</module>
		<module>bluebutton-data-pipeline-ccw-test</module>
		<module>bluebutton-data-pipeline-sampledata</module>
		<module>bluebutton-data-pipeline-ccw-extract</module>
		<module>bluebutton-data-pipeline-fhir-load</module>
		<module>bluebutton-data-pipeline-fhir-sampledata</module>
	</modules>

	<properties>
		<hapi-fhir.version>1.4-SNAPSHOT</hapi-fhir.version>
		<metrics.version>3.1.2</metrics.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Provides the FHIR client being used to create/push resources to 
					the server. -->
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-base</artifactId>
				<version>${hapi-fhir.version}</version>
			</dependency>
			<dependency>
				<!-- At least one "structures" JAR must also be included -->
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-structures-dstu2.1</artifactId>
				<version>${hapi-fhir.version}</version>
			</dependency>

			<dependency>
				<!-- Provides various utilities, particularly for managing DB connections. -->
				<groupId>com.justdavis.karl.jessentials</groupId>
				<artifactId>jessentials-misc</artifactId>
				<version>3.2.0</version>
			</dependency>

			<dependency>
				<!-- Provides a sane facade for the giant mess of incompatible logging 
					frameworks in Java. -->
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.7</version>
			</dependency>

			<dependency>
				<!-- Locks the versions of all Spring modules that are used in child 
					projects to ones that are actually compatible with each other. We're not 
					using most of those modules, but this is our ticket out of dependency-mismatch 
					hell. -->
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>2.0.3.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<!-- The JDO API is a more flexible alternative to JPA: an ORM for working 
					with databases in Java. DataNucleus provides an implementation of the JDO 
					API. -->
				<groupId>org.datanucleus</groupId>
				<artifactId>datanucleus-accessplatform-jdo-rdbms</artifactId>
				<version>5.0.0-m1</version>
				<type>pom</type>
			</dependency>

			<dependency>
				<!-- Used to measure performance and collect other runtime statistics 
					within these projects. -->
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>${metrics.version}</version>
			</dependency>
			<dependency>
				<!-- Used to monitor the JVM's memory usage, garbage collection, etc. 
					at runtime. -->
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-jvm</artifactId>
				<version>${metrics.version}</version>
			</dependency>

			<dependency>
				<!-- JDBC driver for working with PostgreSQL DBs on Java 8 (JDBC 4.2). -->
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.4.1208</version>
			</dependency>

			<dependency>
				<!-- Used to run our unit and integration tests. -->
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- In-memory database that is used in some tests to speed things up. -->
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.2.4</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Can be used to run the DataNucleus/JDO bytecode enhancer on projects' 
						compiled classes. -->
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-maven-plugin</artifactId>
					<version>4.0.2</version>
					<configuration>
						<api>JDO</api>
						<verbose>true</verbose>
					</configuration>
				</plugin>
				<plugin>
					<!-- Can be used to run any `*IT.java` integration tests in a project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<redirectTestOutputToFile>true</redirectTestOutputToFile>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
