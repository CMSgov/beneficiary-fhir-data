CREATE OR REPLACE PACKAGE CCW_SRC.fhir_data_extract_pkg AUTHID CURRENT_USER IS

  FUNCTION get_part_name(pi_table_name VARCHAR2, pi_value VARCHAR2)
    RETURN VARCHAR2;
  FUNCTION get_subpart_name(pi_table_name VARCHAR2,
                            pi_value      NUMBER,
                            pi_part_name  VARCHAR2) RETURN VARCHAR2;
  PROCEDURE create_done_file(p_utl_file VARCHAR2);

  PROCEDURE create_done_file; -- For Apex --

  PROCEDURE update_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                   pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE');

  ---- iNd should come in as 'Y';??
  PROCEDURE finalize_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                     pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE');
  PROCEDURE create_clm_grp_id(p_strt_dt      IN DATE,
                              p_end_dt       IN DATE,
                              p_part_num     IN VARCHAR2,
                              pb_run_pta     IN VARCHAR2 DEFAULT 'FALSE',
                              pb_run_ptb     IN VARCHAR2 DEFAULT 'FALSE',
                              pb_run_ptd     IN VARCHAR2 DEFAULT 'FALSE',
                              pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE',
                              pb_init_ld     IN VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_bene(p_part_num     VARCHAR2 DEFAULT NULL,
                         pb_new_version VARCHAR2 DEFAULT 'FALSE',
                         pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                         pb_bene_fltr   VARCHAR2 DEFAULT 'FALSE',
                         pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                         pb_extrct_only VARCHAR2 DEFAULT 'TRUE'
                        ,
                         pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_bcarrier(p_part_num     VARCHAR2,
                             pb_new_version VARCHAR2 DEFAULT 'FALSE',
                             pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                             pb_stats       VARCHAR2 DEFAULT 'FALSE',
                             pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                             pb_extrct_only VARCHAR2 DEFAULT 'TRUE'
                            ,
                             pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_dme(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE',
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                        pb_stats       VARCHAR2 DEFAULT 'FALSE',
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE'
                       ,
                        pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_hha(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE',
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                        pb_stats       VARCHAR2 DEFAULT 'FALSE',
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE'
                       ,
                        pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_hospice(p_part_num     VARCHAR2,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE',
                            pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                            pb_stats       VARCHAR2 DEFAULT 'FALSE',
                            pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                            pb_extrct_only VARCHAR2 DEFAULT 'TRUE'
                           ,
                            pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_inpatient(p_part_num     VARCHAR2,
                              pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                              pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                              pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                              pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                              pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                             ,
                              pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_outpatient(p_part_num     VARCHAR2,
                               pb_new_version VARCHAR2 DEFAULT 'FALSE',
                               pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                               pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                               pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                               pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                              ,
                               pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_pde(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                       ,
                        pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_snf(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                       ,
                        pb_output_data VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE ld_ld_clm_status(pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  -- Deltas

  PROCEDURE extract_bene_changes(p_strt_dt      DATE,
                                 p_end_dt       DATE,
                                 p_prcsg_dt     DATE,
                                 p_part_num     VARCHAR2,
                                 p_load_data    BOOLEAN DEFAULT FALSE,
                                 p_bene_fltr    BOOLEAN DEFAULT TRUE,
                                 p_100_parts    BOOLEAN DEFAULT FALSE,
                                 p_new_version  BOOLEAN DEFAULT FALSE,
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_bcarrier_changes(p_strt_dt      DATE,
                                     p_end_dt       DATE,
                                     p_prcsg_dt     DATE,
                                     p_part_num     VARCHAR2,
                                     pb_load_data   VARCHAR2, 
                                     pb_new_version VARCHAR2 ,
                                     pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_dme_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2 ,
                                pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_hha_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2,
                                pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_hospice_changes(p_strt_dt      DATE,
                                    p_end_dt       DATE,
                                    p_prcsg_dt     DATE,
                                    p_part_num     VARCHAR2,
                                    pb_load_data   VARCHAR2,
                                    pb_new_version VARCHAR2,
                                    pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_inpatient_changes(p_strt_dt      DATE,
                                      p_end_dt       DATE,
                                      p_prcsg_dt     DATE,
                                      p_part_num     VARCHAR2,
                                      pb_load_data   VARCHAR2,
                                      pb_new_version VARCHAR2,
                                      pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_outpatient_changes(p_strt_dt      DATE,
                                       p_end_dt       DATE,
                                       p_prcsg_dt     DATE,
                                       p_part_num     VARCHAR2,
                                       pb_load_data   VARCHAR2,
                                       pb_new_version VARCHAR2,
                                       pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_snf_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2,
                                pb_new_version VARCHAR2,
                                pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_pde_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2,
                                pb_new_version VARCHAR2,
                                pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE updatefhir_ld_clm_status(pb_run_pta     IN VARCHAR2,
                                     pb_run_ptb     IN VARCHAR2,
                                     pb_run_ptd     IN VARCHAR2,
                                     pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE extract_updates(p_part_num     VARCHAR2,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE',
                            pb_extrct_only VARCHAR2 DEFAULT 'FALSE');

  -- 3.8
  PROCEDURE fhir_part_A_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE');
  PROCEDURE fhir_part_B_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE');
  PROCEDURE fhir_part_D_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE');
  PROCEDURE fhir_part_A_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE');
  PROCEDURE fhir_part_B_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE');
  PROCEDURE fhir_part_D_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE');

  -- Deltas

  PROCEDURE load_pta_fact_tables(p_part_num     VARCHAR2 DEFAULT NULL,
                                 pb_stats       VARCHAR2 DEFAULT 'FALSE',
                                 pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE load_ptb_fact_tables(p_part_num     VARCHAR2 DEFAULT NULL,
                                 pb_stats       VARCHAR2 DEFAULT 'FALSE',
                                 pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  PROCEDURE load_all_tables(p_strt_dt      DATE DEFAULT NULL,
                            p_end_dt       DATE DEFAULT NULL,
                            p_prcsg_dt     DATE DEFAULT NULL,
                            p_part_num     VARCHAR2 DEFAULT NULL,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE',
                            pb_load_all    VARCHAR2 DEFAULT 'FALSE',
                            pb_load_data   VARCHAR2 DEFAULT 'TRUE',
                            p_file         VARCHAR2 DEFAULT NULL,
                            pb_run_bene    VARCHAR2 DEFAULT 'TRUE',
                            pb_run_pta     VARCHAR2 DEFAULT 'FALSE',
                            pb_run_ptb     VARCHAR2 DEFAULT 'FALSE',
                            pb_run_ptd     VARCHAR2 DEFAULT 'FALSE',
                            pb_bene_fltr   VARCHAR2 DEFAULT 'FALSE',
                            pb_stats       VARCHAR2 DEFAULT 'FALSE',
                            pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                            pb_apex_run    VARCHAR2 DEFAULT 'TRUE'
                            -- testing
                           , p_test_partition VARCHAR2 DEFAULT NULL
                           , pb_force_updates VARCHAR2 DEFAULT 'FALSE'
                           -- testing
                           , pb_full_delta   VARCHAR2 DEFAULT 'FALSE'
                           , pb_delta_job_nm VARCHAR2 DEFAULT 'FHIR LOAD CHANGES'
);

  --3.12
  PROCEDURE close_delta_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                        pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE');

  -- 3.13
  PROCEDURE get_latest_load_desc(p_grp_type_nm    IN VARCHAR2,
                                 p_grp_nm         IN VARCHAR2,
                                 p_latest_ld_desc OUT VARCHAR2);

  -- 3.13
  PROCEDURE fhir_edb_updt(pb_extrct_only VARCHAR2 DEFAULT 'TRUE');

  -- 3.13
  PROCEDURE fhir_edb_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                         pb_truncate_tab VARCHAR2 DEFAULT 'FALSE');

  -- 3.17 - get a fixed date to use on all manifest creation.
  FUNCTION manifest_date(p_prd_run_type IN VARCHAR2,
                         p_grp_typ_nm   IN ccw_sprt.sprt_grp.grp_name%TYPE DEFAULT 'FHIR')
    RETURN VARCHAR2;



  -- 3.20
  PROCEDURE update_NULL_bene_ids (pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_apex_log_info IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_pta       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptb       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptd       IN VARCHAR2 DEFAULT 'TRUE');

  -- 3.20
  PROCEDURE update_NULL_clm_grp_ids (pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_apex_log_info IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_pta       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptb       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptd       IN VARCHAR2 DEFAULT 'TRUE');

  -- 3.21
  PROCEDURE chk_dup_FHIR_clm_ids (pb_run_pta     IN VARCHAR2,
                                  pb_run_ptb     IN VARCHAR2,
                                  pb_run_ptd     IN VARCHAR2,
                                  pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE');
                                  

  -----------------------------------------------------------------------------

                       
END fhir_data_extract_pkg;
/
CREATE OR REPLACE PACKAGE BODY CCW_SRC.fhir_data_extract_pkg IS

  /*
   * 09/05/17 (3.22) - Editing extract_bene_changes, added new layer of select on inserts into
   *                   temp_fhir_bene to decode actual dml_ind (update/insert). This allows removing
   *                   the performance problem of the existing UPDATE of fhir_bene_ld_status. Replacing
   *                   the UPDATE with a DELETE of existing FHIR_BENE_LD_STATUS records where the bene_id
   *                   exists in TEMP_FHIR_BENE (an updated row). All either INSERT or UPDATES for the
   *                   current run will now be INSERTED into FHIR_BEND_LD_STATUS with the existing INSERT
   *                 - Reset naming of prd_name field inserted into meta_prcsng_dtl in fhir_part_D_clms (),
   *                   it was not matching ccw_load_desc in ccw_pde_fact.
   *                 - Add 'AND acp.nch_clm_type_cd = upd.nch_clm_type_cd' to filter the selected
   *                   fhir_clm_bene_updt records to the correct "Part" in clm_bene_id_updates ().
   *                 - Removed "ordered" from "ordered parallel" hints (6) - performance issue
   *                 - removed product_clm_grp from extract_%_Changes, because it was checked in the
   *                   creation of fhir_pt(abd)_ld_Clm_status records and clm_grp_ids were assigned
   *                   at that point, the status clm_grp_id was to be extracted rather than the
   *                   clm_grp_id from product_clm_grp
   *                 - Reset Ld_ld_clm_status () to include ccw_ld_desc from temp load tables and
   *                   new columns for the STUS tables, from the temp_"extract" tables.
   *                   **Better for cost if we put ccw_ld_desc in temp_"extract" tables and insert/select
   *                     into FHIR_PT(ABD)_LD_CLM_STATUS from temp_"extract" tables.
   * 09/01/17 (3.21) - Changed ccw_ld_desc source in updated_claims, insert-b, to use ccw_ld_desc
   *                   from ccw_ptb_fact instead of fhir_ptb_ld_clm_status since at that point we
   *                   are looking for empty records (null-clm_id) in the fhir_ptb_ld_clm_status table.
   *                 - Removed filter criteria in create_clm_grp_id to make sure only ccw_ld_desc with 'DELTA'
   *                   prd_run_type values from meta_prcsng_dtl were looked at as several NULL clm_grp_id
   *                   values were created in DELTA run due to inserting recs with INITIAL values in the META table.
   *                 - Removing prd_run_type = 'DELTA' and prd_prsng_ind = 'N' filters from FA audit checks
   *                   in close_delta_meta_prcsng_dtl () - "old" partitions could have inserts added.
   *                 - Removed handling of g_version=5 from "output_%_file" procedures,
   *                   only writing "dml_ind||'|'||" now.
   *                 - Updated WHEREs in clm_bene_id_updates () to NOT compare values of ccw_pta_fact.ccw_ld_desc
   *                   vs. a specified ccw_ld_desc (in g_latest_load_Desc or itself), all compares on ccw_ld_desc
   *                   will be just making sure the value in ccw_pta_fact is in the meta_prcsng_dtl table,
   *                   belonging to a CLAIMS ccw_ld_desc.
   *                 - Added validation procedure in LOAD_ALL_TABLES () - during the delta process, will raise
   *                   an error if duplicate CLM_ID or PDE_ID found in any of the FHIR_PT(ABD)_LD_CLM_STATUS tables.
   *                   This will cause the DELTA to ERROR and terminate without extracts being done.
   *                 - Removed all filters on FHIR_PT(ABD)_LD_CLM_STATUS.finl_Actn_id = 21
   *                   from the extract_%changes () procedures after review with Jeff D. Updates to 22 must
   *                   be sent.
   *                 - Added handling of PartD info to clm_bene_id_updates (), had previously not done
   *                   PartD processing here.
   *                 - Added "AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID"
   *                   to PartD selects in new_claims () and clm_bene_id_updates () to assure
   *                   a UK value for the ccw_pde_srvc_prvdr_prfl table matching its unique index
   *                 -
   * 07/31/17 (3.20) - Added bene_id to the INSERT/SELECT statements (3) in updated_claims ().
   *                 - Added proc, update_NULL_bene_ids (), to correct delta data issue where bene_id's had not
   *                   always been added to pt(abd)ld_clm_status records. This problem currently NOT on PROD.
   *                   Called from new apex job.
   *                 - Created new Apex Job to call update_NULL_bene_ids (), setting param 3,4,5 to FALSE will
   *                   allow job to run with no operations being done to satisfy dependency allowing LOAD_ALL_Tables ()
   *                   to run (if desired).
   *                 - In create_clm_grp_id (), removed WHERE filter on meta_prcsng_dtl.PRD_PRCSNG_IND,
   *                   updated_claims () will reference ccw_ld_desc's that have already processed and clm_grp_id may
   *                   need to be created for the records
   *                 - Changed fhir_part_(ABD)_clms () to delete records from "update" tables if in the currently being
   *                   loaded, ccw_ld_desc. Added ccw_ld_desc to each table to populate based on the Final Action job running.
   *
   *
   * 07/11/17 (3.19) - Corrected NVL () call in insert_inp_delta_by_part (), extract_inpatient_changes ()
   *                   to use a substring call as 2nd arg, previously just using the
   *                   ccw_pta_fact.bene_id, which caused no rows to match the filter.
   *                 - In create_clm_grp_id () removed filters to only consider finl_actn_id values of 21
   *                 - In create_clm_grp_id () removed use/reference to table ccw_finl_actn_prfl, it
   *                   was unneeded.
   *                 - In clm_bene_id_updates () - changed use of acp.bic_cd in WHERE clauses to
   *                   use acp.eqtbl_bic_cd
   *                 - In clm_bene_id_updates () - added a check for NULL in the process_ts field when
   *                   updating processed records in the FHIR_clm_bene_updt table to make sure that only
   *                   newly processed records are updated.
   *                 - When processing carrier records, if a '\' char is encountered the field is exported
   *                   as NULL.
   *
   * 06/23/17 (3.18) - Added handling for new dml_status fields when using the fhir_pt(abd)_ld_clm_status tables
   *                 - Added misc logging messages
   *                 - Removed call to updt_clm_grp_families procedure - functionality was removed
   *                 - Added DISTINCT into INSERT/select statements in updated_claims () when inserting into fhir_pta_ld_clm_status tables
   *                 - Removed outer join INSERT/select statement in updated_claims (), unneeded
   *                 - Added filter on Insert/SELECT statements in updated_claims () to only look for finl_actn_id values of 21 from the fhir_pt(abd)_clm_updt tables
   *                 - Removed filter in clm_bene_id_updates () to only look for meta_prcsng_dtl tables records with prd_prcsng_ind values of 'N' (unprocessed). The functionality of this procedure means it will not be looking at records representing unprocessed ccw_ld_desc values
   *
   * 05/22/17 (3.17) - Changed to g_version to 6
   *                 - set crnt_vrsn = 6 in CCW_OWNER.TEMP_FHIR_META_PRCSNG_DTL
   *                 - get_file_version, no_data_found from select on temp_fhir_meta_prcsng_dtl set to 6
   *
   *                 - Added clm_id/pde_id back into output_..._file () procedures, selected from temp_... tables
   *
   *                 - In table ccw_owner.temp_rec_layout added clm_grp_id header/column
   */

  g_3_yr_dt DATE DEFAULT add_months(SYSDATE, -36);

  g_delta_strt_dt DATE; 

  g_utl_file             VARCHAR2(60); -- moved from 30 to 50 to handle the datestamp to be put on the update files
  g_utl_manifest_file_dt VARCHAR2(30) := to_char(SYSDATE, 'YYYY-MM-DD') || 'T' ||
                                         to_char(SYSDATE, 'HH24:MI:SS') || 'Z';

  g_utl_manifest_file VARCHAR2(50) := 'manifest' || g_utl_manifest_file_dt ||
                                      '.manifest';
  g_utl_manifest_type VARCHAR2(30);

  g_use_manifest_seq  BOOLEAN := TRUE; -- Adjust when needed - 3.8
  g_manifest_file_seq NUMBER := NULL;

  g_utl_file_dir         VARCHAR2(30) := 'UTL_FILE_DIR';
  g_file                 utl_file.file_type;
  g_manifest_file        utl_file.file_type;
  g_column_name          ccw_owner.temp_rec_layout.column_name%TYPE;
  g_first_column         BOOLEAN DEFAULT TRUE;
  g_version              INTEGER DEFAULT 7;
  g_version_increment_by INTEGER DEFAULT 1;
  g_separator            VARCHAR(10) DEFAULT '_';
  g_sub_part_name        VARCHAR2(80);
  g_part_name            VARCHAR2(30);
  g_latest_load_desc     ccw_sprt.sprt_prd.prd_name%TYPE;
  g_output_data          BOOLEAN DEFAULT TRUE; 

  g_max_bene_enrlmt_rfrnc_yr ccw_owner.ccw_bene_data_smry.bene_enrlmt_rfrnc_yr%TYPE; --3.9

  g_bene_pipe_cnt       CONSTANT NUMBER := 17;
  g_dme_pipe_cnt        CONSTANT NUMBER := 93;
  g_bcarrier_pipe_cnt   CONSTANT NUMBER := 97;
  g_hha_pipe_cnt        CONSTANT NUMBER := 128;
  g_hospice_pipe_cnt    CONSTANT NUMBER := 126;
  g_inpatient_pipe_cnt  CONSTANT NUMBER := 271;
  g_outpatient_pipe_cnt CONSTANT NUMBER := 231;
  g_snf_pipe_cnt        CONSTANT NUMBER := 227;
  g_pde_pipe_cnt        CONSTANT NUMBER := 40;


  cannot_annlz_tbl        EXCEPTION;
  cannot_truncate         EXCEPTION;
  manifest_creat_err      EXCEPTION;  -- 3.17 raised during creation of manifest error.
  g_duplicate_claim_error EXCEPTION;  -- 3.21

  -- For Apex use
  g_ld_dtl_id NUMBER;
  g_errm_out  VARCHAR2(1024);
  g_errm      VARCHAR2(1024);
  g_ecode_out NUMBER;
  g_ecode     NUMBER;

  g_tot_rows NUMBER := 0;

  g_finl_actn_id     CONSTANT NUMBER := 21;
  g_not_finl_actn_id CONSTANT NUMBER := 22;  -- 3.20

  g_prd_run_type VARCHAR2(16);

  --Testing
  g_test_partition VARCHAR2(64) DEFAULT NULL;
  g_force_updates  BOOLEAN DEFAULT FALSE;

  g_min_act_death_dt CONSTANT DATE := to_date('01-jan-2016', 'dd-mon-yyyy'); -- 3.9
  g_no_act_death_dt  CONSTANT DATE := to_date('01-jan-0001', 'dd-mon-yyyy');


  FUNCTION truefalsetoboolean(p_booleantext IN VARCHAR2) RETURN BOOLEAN IS
  BEGIN
    IF LTRIM(RTRIM(p_booleantext)) = 'TRUE' THEN
      RETURN TRUE;
    ELSIF LTRIM(RTRIM(p_booleantext)) = 'FALSE' THEN
      RETURN FALSE;
    END IF;

    --falling to here will indicate an error.
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'Value Error, parameter (' ||
                                              p_booleantext ||
                                              ') must be TRUE/FALSE');
    RAISE value_error;

  END truefalsetoboolean;

  FUNCTION booleantotruefalse(p_boolean IN BOOLEAN) RETURN VARCHAR2 IS
  BEGIN
    IF p_boolean THEN
      RETURN 'TRUE';
    ELSIF NOT p_boolean THEN
      RETURN 'FALSE';
    END IF;

    --falling to here will indicate an error.
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'booleanToTrueFalse Value Error, parameter (p_boolean) must be TRUE/FALSE');
    RAISE value_error;

  END booleantotruefalse;

  --
  -- Return a formatted date_time string to append to the end of delta file names
  --
  -- Not in spec / not in APEX
  FUNCTION delta_file_nm_dt RETURN VARCHAR2 IS
  BEGIN
    RETURN to_char(SYSDATE, 'YYYYMMDD') || to_char(SYSDATE, 'HHMISS');
  END delta_file_nm_dt;

  --
  -- Get update_window begin date 
  -- 
  FUNCTION delta_file_strt_dt (p_part_nm IN VARCHAR2) RETURN DATE IS
     l_dt DATE; 
  BEGIN
    
    IF p_part_nm = 'PART_A' THEN
     SELECT /*+ PARALLEL (16) */ MIN (job_ld_dt) 
       INTO l_dt 
       FROM ccw_owner.fhir_pta_ld_clm_status; 
    ELSIF p_part_nm = 'PART_B' THEN
     SELECT /*+ PARALLEL (16) */ MIN (job_ld_dt) 
       INTO l_dt 
       FROM ccw_owner.fhir_ptb_ld_clm_status;             
    ELSIF p_part_nm = 'PART_D' THEN
     SELECT /*+ PARALLEL (16) */ MIN (job_ld_dt) 
       INTO l_dt 
       FROM ccw_owner.fhir_ptd_ld_clm_status;       
    ELSE 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ERROR: parameter (p_part_nm) must be PART_A or PART_B or PART_D');
      RAISE value_error;
    END IF; 

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'Found delta start window date for: '||p_part_nm||' = '||
                                   ADD_MONTHS (l_dt, -36));
    
    RETURN  ADD_MONTHS (l_dt, -36); 
    
  END delta_file_strt_dt; 

  ------------------------------------------------------------------------------------------
  -- Used in initial load to set all records loaded for the initial load to have their
  -- processing indicators (prd_prcsng_ind) = 'N' to indicate they have not been processed.
  ------------------------------------------------------------------------------------------
  PROCEDURE update_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                   pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE') IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.UPDATE_META_PRCSNG_DTL',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_meta_prcsng_dtl - started');

    END IF;

    g_tot_rows := 0;

    --Set all of the partitions that need to be processed because we are rerunning ALL
    UPDATE /*+ parallel (16) */ ccw_owner.meta_prcsng_dtl
       SET prd_prcsng_ind = p_prd_prcsng_ind
     WHERE prd_run_type = 'INITIAL';

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_meta_prcsng_dtl - finished');
    END IF;

  END update_meta_prcsng_dtl;

  ------------------------------------------------------------------------------------------
  -- Used in initial load to set all records loaded for the initial load to have their
  -- processing indicators (prd_prcsng_ind) = 'Y' to indicate they have been processed.
  -- This will be run as the last step in the initial load process
  ------------------------------------------------------------------------------------------
  PROCEDURE finalize_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                     pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE') IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FINALIZE_META_PRCSNG_DTL (' ||
                                              p_prd_prcsng_ind || ')',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'finalize_meta_prcsng_dtl - started');
    END IF;

    g_tot_rows := 0;

    UPDATE /*+ parallel (16) */ ccw_owner.meta_prcsng_dtl
       SET prd_prcsng_ind = p_prd_prcsng_ind
     WHERE prd_prcsng_ind = 'N'
       AND prd_run_type = 'INITIAL';

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'finalize_meta_prcsng_dtl - finished');
    END IF;
  END finalize_meta_prcsng_dtl;

  ------------------------------------------------------------------------------------------
  -- Used in delta processing to set all records processed - their ind = 'N' to have their
  -- processing indicators (prd_prcsng_ind) = 'Y' to indicate they have been processed.
  -- This will be run as the last step in the delta processing
  ------------------------------------------------------------------------------------------
  PROCEDURE close_delta_meta_prcsng_dtl(p_prd_prcsng_ind IN VARCHAR2,
                                        pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE') IS
     audit_file  utl_file.file_type;
  BEGIN

    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.CLOSE_DELTA_META_PRCSNG_DTL (' ||
                                              p_prd_prcsng_ind || ')',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'close_delta_meta_prcsng_dtl - started');
    END IF;


-------------------------------------------------------------------------------------------------------------------------------------
-- Review PtA
-------------------------------------------------------------------------------------------------------------------------------------
   audit_file := utl_file.fopen(g_utl_file_dir, 'audit_partA.txt', 'w', 6000);
   -- header --
   utl_file.put_line(audit_file, 'FACT FINL_ACTN_ID'||'|'||'CLM_ID'||'|'||'DML_IND'||'|'||
                                 'BENE_ID'||'|'||'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                 'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'|'||'DML_STATUS');

   FOR auditA IN ( select /*+ parallel(16) */ pta.finl_actn_id pta_finl_actn_id
                 , ps.clm_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
                 , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                   FROM ccw_owner.fhir_pta_ld_clm_status ps, ccw_owner.ccw_pta_fact pta
                  where pta.clm_id = ps.clm_id
                    and pta.finl_actn_id <> ps.finl_actn_id
                    and pta.ccw_ld_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE -- 3.21 - removed could be INITIAL or other OLD DELTA -- prd_prcsng_ind = 'N'     -- unprocessed, could be multiple
                              -- 3.21 AND
                              prd_type IN ('CLAIMS')  -- , 'PDE')
                              -- 3.21 - removed could be INITIAL or other OLD DELTA -- AND prd_run_type = 'DELTA'

                  ))
   LOOP
      -- data --
      utl_file.put_line(audit_file, auditA.pta_finl_actn_id||'|'||auditA.CLM_ID||'|'||
                                    auditA.DML_IND||'|'||auditA.BENE_ID||'|'||
                                    auditA.PS_FINL_ACTN_ID||'|'||auditA.CCW_LD_DESC||'|'||
                                    auditA.JOB_LD_DT||'|'||auditA.PROC_NUM||'|'||auditA.CLM_GRP_ID||'|'||
                                    auditA.DML_STATUS);
   END LOOP;

   -- Log these differences --
   INSERT  /*+ append parallel (16) */ INTO ccw_owner.FHIR_FA_AUDIT_A
      select /*+ parallel(16) */ pta.finl_actn_id pta_finl_actn_id
                 , ps.clm_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
                 , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status, SYSDATE
                   FROM ccw_owner.fhir_pta_ld_clm_status ps, ccw_owner.ccw_pta_fact pta
                  where pta.clm_id = ps.clm_id
                    and pta.finl_actn_id <> ps.finl_actn_id
                    and pta.ccw_ld_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE -- 3.21 - removed could be INITIAL or other OLD DELTA -- prd_prcsng_ind = 'N'     -- unprocessed, could be multiple
                              -- 3.21 AND
                              prd_type IN ('CLAIMS')  -- , 'PDE')
                              -- 3.21 - removed could be INITIAL or other OLD DELTA -- AND prd_run_type = 'DELTA'


                  );
   COMMIT;

   utl_file.fclose(audit_file);
-------------------------------------------------------------------------------------------------------------------------------------
-- Review PtB
-------------------------------------------------------------------------------------------------------------------------------------
   audit_file := utl_file.fopen(g_utl_file_dir, 'audit_partB.txt', 'w', 6000);
   -- header --
   utl_file.put_line(audit_file, 'FACT FINL_ACTN_ID'||'|'||'CLM_ID'||'|'||'DML_IND'||'|'||
                                 'BENE_ID'||'|'||'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                 'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'|'||'DML_STATUS');
   FOR auditB IN ( select /*+ parallel(16) */ ptb.finl_actn_id ptb_finl_actn_id
         , ps.clm_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
         , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                 FROM ccw_owner.fhir_ptb_ld_clm_status ps
                    , ccw_owner.ccw_ptb_fact ptb
                where ptb.clm_id = ps.clm_id
                  and ptb.finl_actn_id <> ps.finl_actn_id
                  and ptb.ccw_ld_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE -- 3.21 - removed could be INITIAL or other OLD DELTA -- prd_prcsng_ind = 'N'     -- unprocessed, could be multiple
                              -- 3.21 AND
                              prd_type IN ('CLAIMS')  -- , 'PDE')
                              -- 3.21 - removed could be INITIAL or other OLD DELTA -- AND prd_run_type = 'DELTA'


   ))   LOOP
      -- data --
      utl_file.put_line(audit_file, auditB.ptb_finl_actn_id||'|'||auditB.CLM_ID||'|'||
                                    auditB.DML_IND||'|'||auditB.BENE_ID||'|'||
                                    auditB.PS_FINL_ACTN_ID||'|'||auditB.CCW_LD_DESC||'|'||
                                    auditB.JOB_LD_DT||'|'||auditB.PROC_NUM||'|'||auditB.CLM_GRP_ID||'|'||
                                    auditB.DML_STATUS);

   END LOOP;

   -- Log these differences --
   INSERT  /*+ append parallel (16) */ INTO ccw_owner.FHIR_FA_AUDIT_B
      select /*+ parallel(16) */ ptb.finl_actn_id ptb_finl_actn_id
                 , ps.clm_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
                 , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status, SYSDATE
                   FROM ccw_owner.fhir_ptb_ld_clm_status ps, ccw_owner.ccw_ptb_fact ptb
                  where ptb.clm_id = ps.clm_id
                    and ptb.finl_actn_id <> ps.finl_actn_id
                    and ptb.ccw_ld_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE -- 3.21 - removed could be INITIAL or other OLD DELTA -- prd_prcsng_ind = 'N'     -- unprocessed, could be multiple
                              -- 3.21 AND
                              prd_type IN ('CLAIMS')  -- , 'PDE')
                              -- 3.21 - removed could be INITIAL or other OLD DELTA -- AND prd_run_type = 'DELTA'


                  );
   COMMIT;

   utl_file.fclose(audit_file);
-------------------------------------------------------------------------------------------------------------------------------------
-- Review PtB
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
-- Review PtD
-------------------------------------------------------------------------------------------------------------------------------------
   audit_file := utl_file.fopen(g_utl_file_dir, 'audit_partD.txt', 'w', 6000);
   -- header --
   utl_file.put_line(audit_file, 'FACT FINL_ACTN_ID'||'|'||'PDE_ID'||'|'||'DML_IND'||'|'||
                                 'BENE_ID'||'|'||'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                 'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'|'||'DML_STATUS');
   FOR auditD IN ( select /*+ parallel(16) */ ptd.finl_actn_id ptd_finl_actn_id
         , ps.pde_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
         , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                 FROM ccw_owner.fhir_ptd_ld_clm_status ps
                    , ccw_owner.ccw_pde_fact ptd
                where ptd.pde_id = ps.pde_id
                  and ptd.finl_actn_id <> ps.finl_actn_id
                  and ptd.ccw_load_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE 
                              prd_type IN ('PDE') ))   LOOP
      -- data --
      utl_file.put_line(audit_file, auditD.ptd_finl_actn_id||'|'||auditD.PDE_ID||'|'||
                                    auditD.DML_IND||'|'||auditD.BENE_ID||'|'||
                                    auditD.PS_FINL_ACTN_ID||'|'||auditD.CCW_LD_DESC||'|'||
                                    auditD.JOB_LD_DT||'|'||auditD.PROC_NUM||'|'||auditD.CLM_GRP_ID||'|'||
                                    auditD.DML_STATUS);

   END LOOP;

   -- Log these differences --
   INSERT  /*+ append parallel (16) */ INTO ccw_owner.FHIR_FA_AUDIT_D
      select /*+ parallel(16) */ ptd.finl_actn_id ptd_finl_actn_id
                 , ps.pde_id, ps.version, ps.dml_ind, ps.bene_id, ps.finl_actn_id ps_finl_actn_id
                 , ps.ccw_ld_desc, ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status, SYSDATE
                   FROM ccw_owner.fhir_ptd_ld_clm_status ps, ccw_owner.ccw_pde_fact ptd
                  where ptd.pde_id = ps.pde_id
                    and ptd.finl_actn_id <> ps.finl_actn_id
                    and ptd.ccw_load_desc IN (SELECT /*+ parallel (16) */ prd_name FROM ccw_owner.meta_prcsng_dtl
                            WHERE prd_type IN ('PDE') );
   COMMIT;

   utl_file.fclose(audit_file);
-------------------------------------------------------------------------------------------------------------------------------------
-- Review PtD
-------------------------------------------------------------------------------------------------------------------------------------

    g_tot_rows := 0;

    UPDATE /*+ parallel (16) */ ccw_owner.meta_prcsng_dtl
       SET prd_prcsng_ind = p_prd_prcsng_ind
     WHERE prd_prcsng_ind = 'N'
       AND prd_run_type = 'DELTA';

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'close_delta_meta_prcsng_dtl - finished');
    END IF;
  END close_delta_meta_prcsng_dtl;

  ------------------------------------------------------------------------------------------

  PROCEDURE get_file_version(p_new_version BOOLEAN DEFAULT FALSE) IS
  BEGIN
    --Increment Current Version if necessary
    IF p_new_version THEN
      g_version_increment_by := 1;
    ELSE
      g_version_increment_by := 0;
    END IF;

    --Select current version from processing detail table
    BEGIN
      -- testing
      SELECT /*+ parallel (16) */
       pd.crnt_vrsn + g_version_increment_by
        INTO g_version
        FROM ccw_owner.temp_fhir_meta_prcsng_dtl pd
       WHERE pd.fil_nm = g_utl_file;
    EXCEPTION
      WHEN no_data_found THEN
        g_version := 7;   -- 3.17      , -- 3.20
    END;
  END get_file_version;

  ------------------------------------------------------------------------------------------

  PROCEDURE update_file_version(p_new_version BOOLEAN DEFAULT FALSE) IS
  BEGIN
    --Update current version of processing detail table for the file being processed
    IF p_new_version THEN
      UPDATE /*+ parallel (16) */ ccw_owner.temp_fhir_meta_prcsng_dtl pd
         SET pd.crnt_vrsn = g_version
       WHERE pd.fil_nm = g_utl_file;

      COMMIT;
    END IF;
  END update_file_version;

  ------------------------------------------------------------------------------------------

  PROCEDURE set_file_separator(p_part_num VARCHAR2) IS
  BEGIN
    --If there is not a partition we don't need the separator in the name
    IF p_part_num IS NULL THEN
      g_separator := NULL;
    ELSE
      g_separator := '_';
    END IF;
  END set_file_separator;

  ------------------------------------------------------------------------------------------
  -- Called from APEX directly
  PROCEDURE create_done_file IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.CREATE_DONE_FILE',
                            p_tbl_name   => upper('NONE'),
                            p_prcdr_type => 'I',
                            p_ld_dtl_id  => g_ld_dtl_id);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

    -- Successful end of job
    sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                           p_num_rows  => 0,
                           p_annlz     => FALSE); -- analyze

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Create_Done_File Error: ');
      RAISE;

  END create_done_file;

  -- Called from within the package
  PROCEDURE create_done_file(p_utl_file VARCHAR2) IS
  BEGIN

    -- sequence on front of file name
    g_file := utl_file.fopen(g_utl_file_dir,
                             TO_CHAR(g_manifest_file_seq) || '_' ||
                             p_utl_file,
                             'w');

    utl_file.fclose(g_file);

  END create_done_file;

  ------------------------------------------------------------------------------------------
  FUNCTION manifest_file_nextseq RETURN NUMBER IS
    l_fhir_manifest_seq NUMBER := NULL;
  BEGIN

    IF g_use_manifest_seq THEN
      SELECT CCW_OWNER.FHIR_MANIFEST_SEQ.NEXTVAL
        INTO l_fhir_manifest_seq
        FROM DUAL;

      RETURN(l_fhir_manifest_seq);
    ELSE
      RETURN NULL;
    END IF;

  END manifest_file_nextseq;

  ------------------------------------------------------------------------------------------

  PROCEDURE create_manifest_file(p_prd_run_type IN VARCHAR2
                               , p_part_num IN NUMBER
                               , p_file_type IN VARCHAR2) IS

     l_file_typ VARCHAR2(1) := NULL; 
     
  BEGIN
    -- 3.20 - p_part_num used to identify running group name, to get current period to use for manifest name creation

    -- 3.17 - adds parameter p_prd_run_type, validate parm value
    IF p_prd_run_type NOT LIKE 'INITIAL%' AND
       p_prd_run_type NOT LIKE 'DELTA%' THEN
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'ERROR: Invalid run_type: ' ||
                                                p_prd_run_type);
      RAISE manifest_creat_err;
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'Run_type: ' ||
                                                p_prd_run_type);
    END IF;

    -- 3.17 - store in new var to use in update_manifest_file ()
    -- 3.20 - use p_part_num to determine group name
    IF LENGTH (TO_CHAR(p_part_num)) = 2 THEN -- 100 parts
      g_prd_run_type  := p_prd_run_type||' (100)';
    ELSIF LENGTH (TO_CHAR(p_part_num)) = 1 THEN -- 10 parts
      g_prd_run_type  := p_prd_run_type||' (10)';
    ELSIF p_part_num IS NULL THEN -- Then 1 part
      g_prd_run_type  := p_prd_run_type;
    ELSE
      -- could not figure number of parts --
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'Run_type Part Count could not be determined: ' ||
                                                p_prd_run_type||' p_part_num: '||p_part_num);
    END IF;

    g_manifest_file_seq := manifest_file_nextseq;

    -- 3.17 get manifest_file date based on current period of job and reset globals.
    g_utl_manifest_file_dt := manifest_date(p_prd_run_type);

    IF g_utl_manifest_file_dt IS NOT NULL THEN
      g_utl_manifest_file := 'manifest' || g_utl_manifest_file_dt ||
                             '.manifest';
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'ERROR: Invalid manifest_file_dt: ' ||
                                                g_utl_manifest_file_dt);
      RAISE manifest_creat_err;
    END IF;

    -- Convert p_file_type to a number; 
    IF p_file_type = 'BENE' THEN 
      l_file_typ := '1'; 
    ELSIF p_file_type IS NULL THEN 
      l_file_typ := '0';         -- Multi-file manifest
    ELSE
      l_file_typ := '2';
    END IF; 
    
    g_manifest_file_seq := l_file_typ || g_manifest_file_seq; 
    
    --Create manifest file
    g_manifest_file := utl_file.fopen(g_utl_file_dir,
                                      -- 
                                      TO_CHAR(g_manifest_file_seq) || '_' ||                                     --
                                      g_utl_manifest_file,
                                      'w',
                                      6000);

    utl_file.put_line(g_manifest_file,
                      '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' ||
                      chr(13));
    utl_file.put_line(g_manifest_file,
                      '<dataSetManifest xmlns="http://cms.hhs.gov/bluebutton/api/schema/ccw-rif/v'
                      ||g_version||'"
  timestamp="' || g_utl_manifest_file_dt || '"'
                      ---------------TESTING CHANGE v2 instead of v1
                       || ' sequenceId="' || TO_CHAR(g_manifest_file_seq) || '"' || '>' ||
                       chr(13));

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'Created Manifest file: ' ||
                                              g_utl_manifest_file);

  END create_manifest_file;

  ------------------------------------------------------------------------------------------

  PROCEDURE update_manifest_file(p_utl_file VARCHAR2) IS
    l_prd_run_type VARCHAR2(16);
  BEGIN
    IF p_utl_file LIKE '%bene%' THEN
      g_utl_manifest_type := 'BENEFICIARY';
    ELSIF p_utl_file LIKE '%bcarrier%' THEN
      g_utl_manifest_type := 'CARRIER';
    ELSIF p_utl_file LIKE '%dme%' THEN
      g_utl_manifest_type := 'DME';
    ELSIF p_utl_file LIKE '%hha%' THEN
      g_utl_manifest_type := 'HHA';
    ELSIF p_utl_file LIKE '%hospice%' THEN
      g_utl_manifest_type := 'HOSPICE';
    ELSIF p_utl_file LIKE '%inpatient%' THEN
      g_utl_manifest_type := 'INPATIENT';
    ELSIF p_utl_file LIKE '%outpatient%' THEN
      g_utl_manifest_type := 'OUTPATIENT';
    ELSIF p_utl_file LIKE '%snf%' THEN
      g_utl_manifest_type := 'SNF';
    ELSIF p_utl_file LIKE '%pde%' THEN
      g_utl_manifest_type := 'PDE';
    ELSIF p_utl_file LIKE '%updPt%' THEN
      g_utl_manifest_type := 'UPD';
    END IF;

  IF g_prd_run_type LIKE 'INITIAL%' THEN
     l_prd_run_type := 'INITIAL_LOAD';
  ELSIF g_prd_run_type LIKE 'DELTA%' THEN
     l_prd_run_type := 'UPDATE';
  ELSE
      RAISE manifest_creat_err;
  END IF;

  utl_file.put_line(g_manifest_file,
                      '<entry name="' || p_utl_file || '" '|| -- CHR (13) ||
                        'type="' ||g_utl_manifest_type || '" ' || -- CHR (13) ||
                        'exportType="'|| l_prd_run_type ||'"  />' || chr(13));

  END update_manifest_file;

  ------------------------------------------------------------------------------------------

  FUNCTION get_part_name(pi_table_name VARCHAR2, pi_value VARCHAR2)
    RETURN VARCHAR2 IS
    v_varchar2 VARCHAR2(4000);
    v_return   VARCHAR2(30);
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';
    FOR v_recs IN (SELECT /*+ PARALLEL (16) */
                    t.*
                     FROM all_tab_partitions t
                    WHERE t.table_name = pi_table_name) LOOP

      v_varchar2 := REPLACE(substr(v_recs.high_value, 1, 4000), '''', '');
      IF v_varchar2 = TO_NUMBER(pi_value) THEN
        v_return := (v_recs.partition_name);
        RETURN v_return;
      END IF;
    END LOOP;
    RETURN NULL;
  END get_part_name;

  ------------------------------------------------------------------------------------------

  FUNCTION get_subpart_name(pi_table_name VARCHAR2,
                            pi_value      NUMBER,
                            pi_part_name  VARCHAR2) RETURN VARCHAR2 IS
    v_varchar2 VARCHAR2(4000);
    v_return   VARCHAR2(30);
    v_number   NUMBER;
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';
    FOR v_recs IN (SELECT /*+ PARALLEL (16) */
                    t.*
                     FROM all_tab_subpartitions t
                    WHERE t.table_name = pi_table_name
                      AND t.partition_name = pi_part_name) LOOP

      v_number := substr(v_recs.high_value, 1, 4000);
      IF v_number = pi_value THEN
        v_return := (v_recs.subpartition_name);
        RETURN v_return;
      END IF;
    END LOOP;
    RETURN NULL;
  END get_subpart_name;

  ------------------------------------------------------------------------------------------

  PROCEDURE truncate_table(p_part_num VARCHAR2, p_table_name VARCHAR2) IS
  BEGIN

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'Truncating existing table, ' ||
                                              p_table_name);

    IF p_part_num IS NULL THEN

      IF ccw_owner.src_ddl.trnct_tbl(p_tbl_nm    => UPPER(p_table_name),
                                     p_ecode_out => g_ecode,
                                     p_errm_out  => g_errm) = FALSE THEN

        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => g_errm);
        RAISE cannot_truncate;
      END IF;

    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'Truncating existing partition, ' ||
                                                'BENE_PART' ||
                                                to_number(p_part_num));

      IF ccw_owner.src_ddl.trnct_tbl_partn(p_tbl_nm    => UPPER(p_table_name),
                                           p_partn     => 'BENE_PART' ||
                                                          to_number(p_part_num),
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
        RAISE cannot_truncate;
      END IF;

      IF g_errm IS NOT NULL THEN
        -- may be "successful completion"
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => g_errm);
      END IF;

    END IF;

  END truncate_table;

  ------------------------------------------------------------------------------------------

  PROCEDURE truncate_table(p_part_num   VARCHAR2,
                           p_table_name VARCHAR2,
                           p_clm_type   VARCHAR2) IS
  BEGIN
    --Translate the claim type to subpartition name
    IF p_clm_type = '10' THEN
      g_sub_part_name := 'NCH_CLM_TYPE1' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type = '50' THEN
      g_sub_part_name := 'NCH_CLM_TYPE2' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type = '71' THEN
      g_sub_part_name := 'NCH_CLM_TYPE3' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('60', '72') THEN
      g_sub_part_name := 'NCH_CLM_TYPE4' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('61', '73') THEN
      g_sub_part_name := 'NCH_CLM_TYPE5' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('62', '81') THEN
      g_sub_part_name := 'NCH_CLM_TYPE6' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('40', '82') THEN
      g_sub_part_name := 'NCH_CLM_TYPE7' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('41') THEN
      g_sub_part_name := 'NCH_CLM_TYPE8' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('42') THEN
      g_sub_part_name := 'NCH_CLM_TYPE9' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('20') THEN
      g_sub_part_name := 'NCH_CLM_TYPE10' || '_BENE_PART' ||
                         to_number(p_part_num);
    ELSIF p_clm_type IN ('30') THEN
      g_sub_part_name := 'NCH_CLM_TYPE11' || '_BENE_PART' ||
                         to_number(p_part_num);
    END IF;

    IF p_part_num IS NULL THEN
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'Truncating existing table, ' ||
                                                p_table_name);

      IF ccw_owner.src_ddl.trnct_tbl(p_tbl_nm    => UPPER(p_table_name),
                                     p_ecode_out => g_ecode,
                                     p_errm_out  => g_errm) = FALSE THEN
        RAISE cannot_truncate;
      END IF;

    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'Truncating existing subpartition, ' ||
                                                g_sub_part_name);

      IF ccw_owner.src_ddl.trnct_tbl_subpartn(p_tbl_nm    => UPPER(p_table_name),
                                              p_subpartn  => g_sub_part_name,
                                              p_owner     => 'CCW_OWNER',
                                              p_ecode_out => g_ecode,
                                              p_errm_out  => g_errm) =
         FALSE THEN
        RAISE cannot_truncate;
      END IF;

    END IF;

    IF g_errm IS NOT NULL THEN
      -- may be "successful completion"
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => g_errm);
    END IF;

  END truncate_table;
  
                           

  PROCEDURE output_hha_file(p_part_num     IN VARCHAR2,
                            pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN

    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';
    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'HHA'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                    WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         fi_clm_proc_dt || '|' || prvdr_num || '|' ||
                         clm_fac_type_cd || '|' || clm_srvc_clsfctn_type_cd || '|' ||
                         clm_freq_cd || '|' || fi_num || '|' ||
                         clm_mdcr_non_pmt_rsn_cd || '|' || clm_pmt_amt || '|' ||
                         nch_prmry_pyr_clm_pd_amt || '|' || nch_prmry_pyr_cd || '|' ||
                         prvdr_state_cd || '|' || org_npi_num || '|' ||
                         at_physn_upin || '|' || at_physn_npi || '|' ||
                         ptnt_dschrg_stus_cd || '|' || clm_pps_ind_cd || '|' ||
                         clm_tot_chrg_amt || '|' || prncpal_dgns_cd || '|' ||
                         prncpal_dgns_vrsn_cd || '|' || icd_dgns_cd1 || '|' ||
                         icd_dgns_vrsn_cd1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || icd_dgns_cd3 || '|' ||
                         icd_dgns_vrsn_cd3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || icd_dgns_cd5 || '|' ||
                         icd_dgns_vrsn_cd5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || icd_dgns_cd7 || '|' ||
                         icd_dgns_vrsn_cd7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || icd_dgns_cd9 || '|' ||
                         icd_dgns_vrsn_cd9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || icd_dgns_cd11 || '|' ||
                         icd_dgns_vrsn_cd11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || icd_dgns_cd13 || '|' ||
                         icd_dgns_vrsn_cd13 || '|' || icd_dgns_cd14 || '|' ||
                         icd_dgns_vrsn_cd14 || '|' || icd_dgns_cd15 || '|' ||
                         icd_dgns_vrsn_cd15 || '|' || icd_dgns_cd16 || '|' ||
                         icd_dgns_vrsn_cd16 || '|' || icd_dgns_cd17 || '|' ||
                         icd_dgns_vrsn_cd17 || '|' || icd_dgns_cd18 || '|' ||
                         icd_dgns_vrsn_cd18 || '|' || icd_dgns_cd19 || '|' ||
                         icd_dgns_vrsn_cd19 || '|' || icd_dgns_cd20 || '|' ||
                         icd_dgns_vrsn_cd20 || '|' || icd_dgns_cd21 || '|' ||
                         icd_dgns_vrsn_cd21 || '|' || icd_dgns_cd22 || '|' ||
                         icd_dgns_vrsn_cd22 || '|' || icd_dgns_cd23 || '|' ||
                         icd_dgns_vrsn_cd23 || '|' || icd_dgns_cd24 || '|' ||
                         icd_dgns_vrsn_cd24 || '|' || icd_dgns_cd25 || '|' ||
                         icd_dgns_vrsn_cd25 || '|' || fst_dgns_e_cd || '|' ||
                         fst_dgns_e_vrsn_cd || '|' || icd_dgns_e_cd1 || '|' ||
                         icd_dgns_e_vrsn_cd1 || '|' || icd_dgns_e_cd2 || '|' ||
                         icd_dgns_e_vrsn_cd2 || '|' || icd_dgns_e_cd3 || '|' ||
                         icd_dgns_e_vrsn_cd3 || '|' || icd_dgns_e_cd4 || '|' ||
                         icd_dgns_e_vrsn_cd4 || '|' || icd_dgns_e_cd5 || '|' ||
                         icd_dgns_e_vrsn_cd5 || '|' || icd_dgns_e_cd6 || '|' ||
                         icd_dgns_e_vrsn_cd6 || '|' || icd_dgns_e_cd7 || '|' ||
                         icd_dgns_e_vrsn_cd7 || '|' || icd_dgns_e_cd8 || '|' ||
                         icd_dgns_e_vrsn_cd8 || '|' || icd_dgns_e_cd9 || '|' ||
                         icd_dgns_e_vrsn_cd9 || '|' || icd_dgns_e_cd10 || '|' ||
                         icd_dgns_e_vrsn_cd10 || '|' || icd_dgns_e_cd11 || '|' ||
                         icd_dgns_e_vrsn_cd11 || '|' || icd_dgns_e_cd12 || '|' ||
                         icd_dgns_e_vrsn_cd12 || '|' || clm_hha_lupa_ind_cd || '|' ||
                         clm_hha_rfrl_cd || '|' || clm_hha_tot_visit_cnt || '|' ||
                         clm_admsn_dt || '|' || --*** Rev Line Values
                        --l.clm_thru_dt || '|' ||
                         clm_line_num || '|' || rev_cntr || '|' ||
                         rev_cntr_dt || '|' || rev_cntr_1st_ansi_cd || '|' ||
                         rev_cntr_apc_hipps_cd || '|' || hcpcs_cd || '|' ||
                         hcpcs_1st_mdfr_cd || '|' || hcpcs_2nd_mdfr_cd || '|' ||
                         rev_cntr_pmt_mthd_ind_cd || '|' || rev_cntr_unit_cnt || '|' ||
                         rev_cntr_rate_amt || '|' || rev_cntr_pmt_amt_amt || '|' ||
                         rev_cntr_tot_chrg_amt || '|' ||
                         rev_cntr_ncvrd_chrg_amt || '|' ||
                         rev_cntr_ddctbl_coinsrnc_cd || '|' ||
                         rev_cntr_stus_ind_cd || '|' || rev_cntr_ndc_qty || '|' ||
                         rev_cntr_ndc_qty_qlfr_cd || '|' || rndrng_physn_upin || '|' ||
                         rndrng_physn_npi AS combo_field
                         FROM ccw_owner.temp_hha f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, clm_line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_hha_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for hha file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_hha_file;

  PROCEDURE output_hospice_file(p_part_num     IN VARCHAR2,
                                pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'HOSPICE'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5  ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel (16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         fi_clm_proc_dt || '|' || prvdr_num || '|' ||
                         clm_fac_type_cd || '|' || clm_srvc_clsfctn_type_cd || '|' ||
                         clm_freq_cd || '|' || fi_num || '|' ||
                         clm_mdcr_non_pmt_rsn_cd || '|' || clm_pmt_amt || '|' ||
                         nch_prmry_pyr_clm_pd_amt || '|' || nch_prmry_pyr_cd || '|' ||
                         prvdr_state_cd || '|' || org_npi_num || '|' ||
                         at_physn_upin || '|' || at_physn_npi || '|' ||
                         ptnt_dschrg_stus_cd || '|' || clm_tot_chrg_amt || '|' ||
                         nch_ptnt_status_ind_cd || '|' || clm_utlztn_day_cnt || '|' ||
                         nch_bene_dschrg_dt || '|' || prncpal_dgns_cd || '|' ||
                         prncpal_dgns_vrsn_cd || '|' || icd_dgns_cd1 || '|' ||
                         icd_dgns_vrsn_cd1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || icd_dgns_cd3 || '|' ||
                         icd_dgns_vrsn_cd3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || icd_dgns_cd5 || '|' ||
                         icd_dgns_vrsn_cd5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || icd_dgns_cd7 || '|' ||
                         icd_dgns_vrsn_cd7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || icd_dgns_cd9 || '|' ||
                         icd_dgns_vrsn_cd9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || icd_dgns_cd11 || '|' ||
                         icd_dgns_vrsn_cd11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || icd_dgns_cd13 || '|' ||
                         icd_dgns_vrsn_cd13 || '|' || icd_dgns_cd14 || '|' ||
                         icd_dgns_vrsn_cd14 || '|' || icd_dgns_cd15 || '|' ||
                         icd_dgns_vrsn_cd15 || '|' || icd_dgns_cd16 || '|' ||
                         icd_dgns_vrsn_cd16 || '|' || icd_dgns_cd17 || '|' ||
                         icd_dgns_vrsn_cd17 || '|' || icd_dgns_cd18 || '|' ||
                         icd_dgns_vrsn_cd18 || '|' || icd_dgns_cd19 || '|' ||
                         icd_dgns_vrsn_cd19 || '|' || icd_dgns_cd20 || '|' ||
                         icd_dgns_vrsn_cd20 || '|' || icd_dgns_cd21 || '|' ||
                         icd_dgns_vrsn_cd21 || '|' || icd_dgns_cd22 || '|' ||
                         icd_dgns_vrsn_cd22 || '|' || icd_dgns_cd23 || '|' ||
                         icd_dgns_vrsn_cd23 || '|' || icd_dgns_cd24 || '|' ||
                         icd_dgns_vrsn_cd24 || '|' || icd_dgns_cd25 || '|' ||
                         icd_dgns_vrsn_cd25 || '|' || fst_dgns_e_cd || '|' ||
                         fst_dgns_e_vrsn_cd || '|' || icd_dgns_e_cd1 || '|' ||
                         icd_dgns_e_vrsn_cd1 || '|' || icd_dgns_e_cd2 || '|' ||
                         icd_dgns_e_vrsn_cd2 || '|' || icd_dgns_e_cd3 || '|' ||
                         icd_dgns_e_vrsn_cd3 || '|' || icd_dgns_e_cd4 || '|' ||
                         icd_dgns_e_vrsn_cd4 || '|' || icd_dgns_e_cd5 || '|' ||
                         icd_dgns_e_vrsn_cd5 || '|' || icd_dgns_e_cd6 || '|' ||
                         icd_dgns_e_vrsn_cd6 || '|' || icd_dgns_e_cd7 || '|' ||
                         icd_dgns_e_vrsn_cd7 || '|' || icd_dgns_e_cd8 || '|' ||
                         icd_dgns_e_vrsn_cd8 || '|' || icd_dgns_e_cd9 || '|' ||
                         icd_dgns_e_vrsn_cd9 || '|' || icd_dgns_e_cd10 || '|' ||
                         icd_dgns_e_vrsn_cd10 || '|' || icd_dgns_e_cd11 || '|' ||
                         icd_dgns_e_vrsn_cd11 || '|' || icd_dgns_e_cd12 || '|' ||
                         icd_dgns_e_vrsn_cd12 || '|' || clm_hospc_start_dt_id || '|' ||
                         bene_hospc_prd_cnt || '|' || --Rev Line Values
                         clm_line_num || '|' || rev_cntr || '|' ||
                         rev_cntr_dt || '|' || 
                         hcpcs_cd || '|' || hcpcs_1st_mdfr_cd || '|' ||
                         hcpcs_2nd_mdfr_cd || '|' ||
                         rev_cntr_unit_cnt || '|' || rev_cntr_rate_amt || '|' ||
                         rev_cntr_prvdr_pmt_amt || '|' ||
                         rev_cntr_bene_pmt_amt || '|' || rev_cntr_pmt_amt_amt || '|' ||
                         rev_cntr_tot_chrg_amt || '|' ||
                         rev_cntr_ncvrd_chrg_amt || '|' ||
                         rev_cntr_ddctbl_coinsrnc_cd || '|' ||
                         rev_cntr_ndc_qty || '|' || rev_cntr_ndc_qty_qlfr_cd || '|' ||
                         rndrng_physn_upin || '|' || rndrng_physn_npi AS combo_field
                         FROM ccw_owner.temp_hospice f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, clm_line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_hospice_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for hospice file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_hospice_file;

  PROCEDURE output_inpatient_file(p_part_num     IN VARCHAR2,
                                  pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'INPATIENT'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                    WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         fi_clm_proc_dt || '|' || claim_query_code || '|' ||
                         prvdr_num || '|' || clm_fac_type_cd || '|' ||
                         clm_srvc_clsfctn_type_cd || '|' || clm_freq_cd || '|' ||
                         fi_num || '|' || clm_mdcr_non_pmt_rsn_cd || '|' ||
                         clm_pmt_amt || '|' || nch_prmry_pyr_clm_pd_amt || '|' ||
                         nch_prmry_pyr_cd || '|' || fi_clm_actn_cd || '|' ||
                         prvdr_state_cd || '|' || org_npi_num || '|' ||
                         at_physn_upin || '|' || at_physn_npi || '|' ||
                         op_physn_upin || '|' || op_physn_npi || '|' ||
                         ot_physn_upin || '|' || ot_physn_npi || '|' ||
                         clm_mco_pd_sw || '|' || ptnt_dschrg_stus_cd || '|' ||
                         clm_pps_ind_cd || '|' || clm_tot_chrg_amt || '|' ||
                         clm_admsn_dt || '|' || clm_ip_admsn_type_cd || '|' ||
                         clm_src_ip_admsn_cd || '|' || nch_ptnt_status_ind_cd || '|' ||
                         clm_pass_thru_per_diem_amt || '|' ||
                         nch_bene_ip_ddctbl_amt || '|' ||
                         nch_bene_pta_coinsrnc_lblty_am || '|' ||
                         nch_bene_blood_ddctbl_lblty_am || '|' ||
                         nch_profnl_cmpnt_chrg_amt || '|' ||
                         nch_ip_ncvrd_chrg_amt || '|' || nch_ip_tot_ddctn_amt || '|' ||
                         clm_tot_pps_cptl_amt || '|' || clm_pps_cptl_fsp_amt || '|' ||
                         clm_pps_cptl_outlier_amt || '|' ||
                         clm_pps_cptl_dsprprtnt_shr_amt || '|' ||
                         clm_pps_cptl_ime_amt || '|' ||
                         clm_pps_cptl_excptn_amt || '|' ||
                         clm_pps_old_cptl_hld_hrmls_amt || '|' ||
                         clm_pps_cptl_drg_wt_num || '|' || clm_utlztn_day_cnt || '|' ||
                         bene_tot_coinsrnc_days_cnt || '|' ||
                         bene_lrd_used_cnt || '|' || clm_non_utlztn_days_cnt || '|' ||
                         nch_blood_pnts_frnshd_qty || '|' ||
                         nch_vrfd_ncvrd_stay_from_dt || '|' ||
                         nch_vrfd_ncvrd_stay_thru_dt || '|' ||
                         nch_actv_or_cvrd_lvl_care_thru || '|' ||
                         nch_bene_mdcr_bnfts_exhtd_dt_i || '|' ||
                         nch_bene_dschrg_dt || '|' || clm_drg_cd || '|' ||
                         clm_drg_outlier_stay_cd || '|' ||
                         nch_drg_outlier_aprvd_pmt_amt || '|' ||
                         admtg_dgns_cd || '|' || admtg_dgns_vrsn_cd || '|' ||
                         prncpal_dgns_cd || '|' || prncpal_dgns_vrsn_cd || '|' ||
                         icd_dgns_cd1 || '|' || icd_dgns_vrsn_cd1 || '|' ||
                         clm_poa_ind_sw1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || clm_poa_ind_sw2 || '|' ||
                         icd_dgns_cd3 || '|' || icd_dgns_vrsn_cd3 || '|' ||
                         clm_poa_ind_sw3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || clm_poa_ind_sw4 || '|' ||
                         icd_dgns_cd5 || '|' || icd_dgns_vrsn_cd5 || '|' ||
                         clm_poa_ind_sw5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || clm_poa_ind_sw6 || '|' ||
                         icd_dgns_cd7 || '|' || icd_dgns_vrsn_cd7 || '|' ||
                         clm_poa_ind_sw7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || clm_poa_ind_sw8 || '|' ||
                         icd_dgns_cd9 || '|' || icd_dgns_vrsn_cd9 || '|' ||
                         clm_poa_ind_sw9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || clm_poa_ind_sw10 || '|' ||
                         icd_dgns_cd11 || '|' || icd_dgns_vrsn_cd11 || '|' ||
                         clm_poa_ind_sw11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || clm_poa_ind_sw12 || '|' ||
                         icd_dgns_cd13 || '|' || icd_dgns_vrsn_cd13 || '|' ||
                         clm_poa_ind_sw13 || '|' || icd_dgns_cd14 || '|' ||
                         icd_dgns_vrsn_cd14 || '|' || clm_poa_ind_sw14 || '|' ||
                         icd_dgns_cd15 || '|' || icd_dgns_vrsn_cd15 || '|' ||
                         clm_poa_ind_sw15 || '|' || icd_dgns_cd16 || '|' ||
                         icd_dgns_vrsn_cd16 || '|' || clm_poa_ind_sw16 || '|' ||
                         icd_dgns_cd17 || '|' || icd_dgns_vrsn_cd17 || '|' ||
                         clm_poa_ind_sw17 || '|' || icd_dgns_cd18 || '|' ||
                         icd_dgns_vrsn_cd18 || '|' || clm_poa_ind_sw18 || '|' ||
                         icd_dgns_cd19 || '|' || icd_dgns_vrsn_cd19 || '|' ||
                         clm_poa_ind_sw19 || '|' || icd_dgns_cd20 || '|' ||
                         icd_dgns_vrsn_cd20 || '|' || clm_poa_ind_sw20 || '|' ||
                         icd_dgns_cd21 || '|' || icd_dgns_vrsn_cd21 || '|' ||
                         clm_poa_ind_sw21 || '|' || icd_dgns_cd22 || '|' ||
                         icd_dgns_vrsn_cd22 || '|' || clm_poa_ind_sw22 || '|' ||
                         icd_dgns_cd23 || '|' || icd_dgns_vrsn_cd23 || '|' ||
                         clm_poa_ind_sw23 || '|' || icd_dgns_cd24 || '|' ||
                         icd_dgns_vrsn_cd24 || '|' || clm_poa_ind_sw24 || '|' ||
                         icd_dgns_cd25 || '|' || icd_dgns_vrsn_cd25 || '|' ||
                         clm_poa_ind_sw25 || '|' || fst_dgns_e_cd || '|' ||
                         fst_dgns_e_vrsn_cd || '|' || icd_dgns_e_cd1 || '|' ||
                         icd_dgns_e_vrsn_cd1 || '|' || clm_e_poa_ind_sw1 || '|' ||
                         icd_dgns_e_cd2 || '|' || icd_dgns_e_vrsn_cd2 || '|' ||
                         clm_e_poa_ind_sw2 || '|' || icd_dgns_e_cd3 || '|' ||
                         icd_dgns_e_vrsn_cd3 || '|' || clm_e_poa_ind_sw3 || '|' ||
                         icd_dgns_e_cd4 || '|' || icd_dgns_e_vrsn_cd4 || '|' ||
                         clm_e_poa_ind_sw4 || '|' || icd_dgns_e_cd5 || '|' ||
                         icd_dgns_e_vrsn_cd5 || '|' || clm_e_poa_ind_sw5 || '|' ||
                         icd_dgns_e_cd6 || '|' || icd_dgns_e_vrsn_cd6 || '|' ||
                         clm_e_poa_ind_sw6 || '|' || icd_dgns_e_cd7 || '|' ||
                         icd_dgns_e_vrsn_cd7 || '|' || clm_e_poa_ind_sw7 || '|' ||
                         icd_dgns_e_cd8 || '|' || icd_dgns_e_vrsn_cd8 || '|' ||
                         clm_e_poa_ind_sw8 || '|' || icd_dgns_e_cd9 || '|' ||
                         icd_dgns_e_vrsn_cd9 || '|' || clm_e_poa_ind_sw9 || '|' ||
                         icd_dgns_e_cd10 || '|' || icd_dgns_e_vrsn_cd10 || '|' ||
                         clm_e_poa_ind_sw10 || '|' || icd_dgns_e_cd11 || '|' ||
                         icd_dgns_e_vrsn_cd11 || '|' || clm_e_poa_ind_sw11 || '|' ||
                         icd_dgns_e_cd12 || '|' || icd_dgns_e_vrsn_cd12 || '|' ||
                         clm_e_poa_ind_sw12 || '|' || icd_prcdr_cd1 || '|' ||
                         icd_prcdr_vrsn_cd1 || '|' || prcdr_dt1 || '|' ||
                         icd_prcdr_cd2 || '|' || icd_prcdr_vrsn_cd2 || '|' ||
                         prcdr_dt2 || '|' || icd_prcdr_cd3 || '|' ||
                         icd_prcdr_vrsn_cd3 || '|' || prcdr_dt3 || '|' ||
                         icd_prcdr_cd4 || '|' || icd_prcdr_vrsn_cd4 || '|' ||
                         prcdr_dt4 || '|' || icd_prcdr_cd5 || '|' ||
                         icd_prcdr_vrsn_cd5 || '|' || prcdr_dt5 || '|' ||
                         icd_prcdr_cd6 || '|' || icd_prcdr_vrsn_cd6 || '|' ||
                         prcdr_dt6 || '|' || icd_prcdr_cd7 || '|' ||
                         icd_prcdr_vrsn_cd7 || '|' || prcdr_dt7 || '|' ||
                         icd_prcdr_cd8 || '|' || icd_prcdr_vrsn_cd8 || '|' ||
                         prcdr_dt8 || '|' || icd_prcdr_cd9 || '|' ||
                         icd_prcdr_vrsn_cd9 || '|' || prcdr_dt9 || '|' ||
                         icd_prcdr_cd10 || '|' || icd_prcdr_vrsn_cd10 || '|' ||
                         prcdr_dt10 || '|' || icd_prcdr_cd11 || '|' ||
                         icd_prcdr_vrsn_cd11 || '|' || prcdr_dt11 || '|' ||
                         icd_prcdr_cd12 || '|' || icd_prcdr_vrsn_cd12 || '|' ||
                         prcdr_dt12 || '|' || icd_prcdr_cd13 || '|' ||
                         icd_prcdr_vrsn_cd13 || '|' || prcdr_dt13 || '|' ||
                         icd_prcdr_cd14 || '|' || icd_prcdr_vrsn_cd14 || '|' ||
                         prcdr_dt14 || '|' || icd_prcdr_cd15 || '|' ||
                         icd_prcdr_vrsn_cd15 || '|' || prcdr_dt15 || '|' ||
                         icd_prcdr_cd16 || '|' || icd_prcdr_vrsn_cd16 || '|' ||
                         prcdr_dt16 || '|' || icd_prcdr_cd17 || '|' ||
                         icd_prcdr_vrsn_cd17 || '|' || prcdr_dt17 || '|' ||
                         icd_prcdr_cd18 || '|' || icd_prcdr_vrsn_cd18 || '|' ||
                         prcdr_dt18 || '|' || icd_prcdr_cd19 || '|' ||
                         icd_prcdr_vrsn_cd19 || '|' || prcdr_dt19 || '|' ||
                         icd_prcdr_cd20 || '|' || icd_prcdr_vrsn_cd20 || '|' ||
                         prcdr_dt20 || '|' || icd_prcdr_cd21 || '|' ||
                         icd_prcdr_vrsn_cd21 || '|' || prcdr_dt21 || '|' ||
                         icd_prcdr_cd22 || '|' || icd_prcdr_vrsn_cd22 || '|' ||
                         prcdr_dt22 || '|' || icd_prcdr_cd23 || '|' ||
                         icd_prcdr_vrsn_cd23 || '|' || prcdr_dt23 || '|' ||
                         icd_prcdr_cd24 || '|' || icd_prcdr_vrsn_cd24 || '|' ||
                         prcdr_dt24 || '|' || icd_prcdr_cd25 || '|' ||
                         icd_prcdr_vrsn_cd25 || '|' || prcdr_dt25 || '|' ||
                         ime_op_clm_val_amt || '|' || dsh_op_clm_val_amt || '|' || --Rev Line Values
                         clm_line_num || '|' || rev_cntr || '|' ||
                         hcpcs_cd || '|' || 
                         rev_cntr_unit_cnt || '|' || rev_cntr_rate_amt || '|' ||
                         rev_cntr_tot_chrg_amt || '|' ||
                         rev_cntr_ncvrd_chrg_amt || '|' ||
                         rev_cntr_ddctbl_coinsrnc_cd || '|' ||
                         rev_cntr_ndc_qty || '|' || rev_cntr_ndc_qty_qlfr_cd || '|' ||
                         rndrng_physn_upin || '|' || rndrng_physn_npi AS combo_field
                         FROM ccw_owner.temp_inpatient f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, clm_line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_inpatient_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for inpatient file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_inpatient_file;

  PROCEDURE output_outpatient_file(p_part_num     IN VARCHAR2,
                                   pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'OUTPATIENT'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         fi_clm_proc_dt || '|' || claim_query_code || '|' ||
                         prvdr_num || '|' || clm_fac_type_cd || '|' ||
                         clm_srvc_clsfctn_type_cd || '|' || clm_freq_cd || '|' ||
                         fi_num || '|' || clm_mdcr_non_pmt_rsn_cd || '|' ||
                         clm_pmt_amt || '|' || nch_prmry_pyr_clm_pd_amt || '|' ||
                         nch_prmry_pyr_cd || '|' || prvdr_state_cd || '|' ||
                         org_npi_num || '|' || at_physn_upin || '|' ||
                         at_physn_npi || '|' || op_physn_upin || '|' ||
                         op_physn_npi || '|' || ot_physn_upin || '|' ||
                         ot_physn_npi || '|' || clm_mco_pd_sw || '|' ||
                         ptnt_dschrg_stus_cd || '|' || clm_tot_chrg_amt || '|' ||
                         nch_bene_blood_ddctbl_lblty_am || '|' ||
                         nch_profnl_cmpnt_chrg_amt || '|' || prncpal_dgns_cd || '|' ||
                         prncpal_dgns_vrsn_cd || '|' || icd_dgns_cd1 || '|' ||
                         icd_dgns_vrsn_cd1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || icd_dgns_cd3 || '|' ||
                         icd_dgns_vrsn_cd3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || icd_dgns_cd5 || '|' ||
                         icd_dgns_vrsn_cd5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || icd_dgns_cd7 || '|' ||
                         icd_dgns_vrsn_cd7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || icd_dgns_cd9 || '|' ||
                         icd_dgns_vrsn_cd9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || icd_dgns_cd11 || '|' ||
                         icd_dgns_vrsn_cd11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || icd_dgns_cd13 || '|' ||
                         icd_dgns_vrsn_cd13 || '|' || icd_dgns_cd14 || '|' ||
                         icd_dgns_vrsn_cd14 || '|' || icd_dgns_cd15 || '|' ||
                         icd_dgns_vrsn_cd15 || '|' || icd_dgns_cd16 || '|' ||
                         icd_dgns_vrsn_cd16 || '|' || icd_dgns_cd17 || '|' ||
                         icd_dgns_vrsn_cd17 || '|' || icd_dgns_cd18 || '|' ||
                         icd_dgns_vrsn_cd18 || '|' || icd_dgns_cd19 || '|' ||
                         icd_dgns_vrsn_cd19 || '|' || icd_dgns_cd20 || '|' ||
                         icd_dgns_vrsn_cd20 || '|' || icd_dgns_cd21 || '|' ||
                         icd_dgns_vrsn_cd21 || '|' || icd_dgns_cd22 || '|' ||
                         icd_dgns_vrsn_cd22 || '|' || icd_dgns_cd23 || '|' ||
                         icd_dgns_vrsn_cd23 || '|' || icd_dgns_cd24 || '|' ||
                         icd_dgns_vrsn_cd24 || '|' || icd_dgns_cd25 || '|' ||
                         icd_dgns_vrsn_cd25 || '|' || fst_dgns_e_cd || '|' ||
                         fst_dgns_e_vrsn_cd || '|' || icd_dgns_e_cd1 || '|' ||
                         icd_dgns_e_vrsn_cd1 || '|' || icd_dgns_e_cd2 || '|' ||
                         icd_dgns_e_vrsn_cd2 || '|' || icd_dgns_e_cd3 || '|' ||
                         icd_dgns_e_vrsn_cd3 || '|' || icd_dgns_e_cd4 || '|' ||
                         icd_dgns_e_vrsn_cd4 || '|' || icd_dgns_e_cd5 || '|' ||
                         icd_dgns_e_vrsn_cd5 || '|' || icd_dgns_e_cd6 || '|' ||
                         icd_dgns_e_vrsn_cd6 || '|' || icd_dgns_e_cd7 || '|' ||
                         icd_dgns_e_vrsn_cd7 || '|' || icd_dgns_e_cd8 || '|' ||
                         icd_dgns_e_vrsn_cd8 || '|' || icd_dgns_e_cd9 || '|' ||
                         icd_dgns_e_vrsn_cd9 || '|' || icd_dgns_e_cd10 || '|' ||
                         icd_dgns_e_vrsn_cd10 || '|' || icd_dgns_e_cd11 || '|' ||
                         icd_dgns_e_vrsn_cd11 || '|' || icd_dgns_e_cd12 || '|' ||
                         icd_dgns_e_vrsn_cd12 || '|' || icd_prcdr_cd1 || '|' ||
                         icd_prcdr_vrsn_cd1 || '|' || prcdr_dt1 || '|' ||
                         icd_prcdr_cd2 || '|' || icd_prcdr_vrsn_cd2 || '|' ||
                         prcdr_dt2 || '|' || icd_prcdr_cd3 || '|' ||
                         icd_prcdr_vrsn_cd3 || '|' || prcdr_dt3 || '|' ||
                         icd_prcdr_cd4 || '|' || icd_prcdr_vrsn_cd4 || '|' ||
                         prcdr_dt4 || '|' || icd_prcdr_cd5 || '|' ||
                         icd_prcdr_vrsn_cd5 || '|' || prcdr_dt5 || '|' ||
                         icd_prcdr_cd6 || '|' || icd_prcdr_vrsn_cd6 || '|' ||
                         prcdr_dt6 || '|' || icd_prcdr_cd7 || '|' ||
                         icd_prcdr_vrsn_cd7 || '|' || prcdr_dt7 || '|' ||
                         icd_prcdr_cd8 || '|' || icd_prcdr_vrsn_cd8 || '|' ||
                         prcdr_dt8 || '|' || icd_prcdr_cd9 || '|' ||
                         icd_prcdr_vrsn_cd9 || '|' || prcdr_dt9 || '|' ||
                         icd_prcdr_cd10 || '|' || icd_prcdr_vrsn_cd10 || '|' ||
                         prcdr_dt10 || '|' || icd_prcdr_cd11 || '|' ||
                         icd_prcdr_vrsn_cd11 || '|' || prcdr_dt11 || '|' ||
                         icd_prcdr_cd12 || '|' || icd_prcdr_vrsn_cd12 || '|' ||
                         prcdr_dt12 || '|' || icd_prcdr_cd13 || '|' ||
                         icd_prcdr_vrsn_cd13 || '|' || prcdr_dt13 || '|' ||
                         icd_prcdr_cd14 || '|' || icd_prcdr_vrsn_cd14 || '|' ||
                         prcdr_dt14 || '|' || icd_prcdr_cd15 || '|' ||
                         icd_prcdr_vrsn_cd15 || '|' || prcdr_dt15 || '|' ||
                         icd_prcdr_cd16 || '|' || icd_prcdr_vrsn_cd16 || '|' ||
                         prcdr_dt16 || '|' || icd_prcdr_cd17 || '|' ||
                         icd_prcdr_vrsn_cd17 || '|' || prcdr_dt17 || '|' ||
                         icd_prcdr_cd18 || '|' || icd_prcdr_vrsn_cd18 || '|' ||
                         prcdr_dt18 || '|' || icd_prcdr_cd19 || '|' ||
                         icd_prcdr_vrsn_cd19 || '|' || prcdr_dt19 || '|' ||
                         icd_prcdr_cd20 || '|' || icd_prcdr_vrsn_cd20 || '|' ||
                         prcdr_dt20 || '|' || icd_prcdr_cd21 || '|' ||
                         icd_prcdr_vrsn_cd21 || '|' || prcdr_dt21 || '|' ||
                         icd_prcdr_cd22 || '|' || icd_prcdr_vrsn_cd22 || '|' ||
                         prcdr_dt22 || '|' || icd_prcdr_cd23 || '|' ||
                         icd_prcdr_vrsn_cd23 || '|' || prcdr_dt23 || '|' ||
                         icd_prcdr_cd24 || '|' || icd_prcdr_vrsn_cd24 || '|' ||
                         prcdr_dt24 || '|' || icd_prcdr_cd25 || '|' ||
                         icd_prcdr_vrsn_cd25 || '|' || prcdr_dt25 || '|' ||
                         rsn_visit_cd1 || '|' || rsn_visit_vrsn_cd1 || '|' ||
                         rsn_visit_cd2 || '|' || rsn_visit_vrsn_cd2 || '|' ||
                         rsn_visit_cd3 || '|' || rsn_visit_vrsn_cd3 || '|' ||
                         nch_bene_ptb_ddctbl_amt || '|' ||
                         nch_bene_ptb_coinsrnc_amt || '|' ||
                         clm_op_prvdr_pmt_amt || '|' || clm_op_bene_pmt_amt || '|' || --Rev Line Values
                         clm_line_num || '|' || rev_cntr || '|' ||
                         rev_cntr_dt || '|' || --3.6
                         rev_cntr_1st_ansi_cd || '|' || rev_cntr_2nd_ansi_cd || '|' ||
                         rev_cntr_3rd_ansi_cd || '|' || rev_cntr_4th_ansi_cd || '|' ||
                         rev_cntr_apc_hipps_cd || '|' || hcpcs_cd || '|' ||
                         hcpcs_1st_mdfr_cd || '|' || hcpcs_2nd_mdfr_cd || '|' ||
                         rev_cntr_pmt_mthd_ind_cd || '|' ||
                         rev_cntr_dscnt_ind_cd || '|' ||
                         rev_cntr_packg_ind_cd || '|' || rev_cntr_otaf_pmt_cd || '|' ||
                         rev_cntr_ide_ndc_upc_num || '|' || rev_cntr_unit_cnt || '|' ||
                         rev_cntr_rate_amt || '|' ||
                         rev_cntr_blood_ddctbl_amt || '|' ||
                         rev_cntr_cash_ddctbl_amt || '|' ||
                         rev_cntr_coinsrnc_wge_adjstd_c || '|' ||
                         rev_cntr_rdcd_coinsrnc_amt || '|' ||
                         rev_cntr_1st_msp_pd_amt || '|' ||
                         rev_cntr_2nd_msp_pd_amt || '|' ||
                         rev_cntr_prvdr_pmt_amt || '|' ||
                         rev_cntr_bene_pmt_amt || '|' ||
                         rev_cntr_ptnt_rspnsblty_pmt || '|' ||
                         rev_cntr_pmt_amt_amt || '|' || rev_cntr_tot_chrg_amt || '|' ||
                         rev_cntr_ncvrd_chrg_amt || '|' ||
                         rev_cntr_stus_ind_cd || '|' || rev_cntr_ndc_qty || '|' ||
                         rev_cntr_ndc_qty_qlfr_cd || '|' || rndrng_physn_upin || '|' ||
                         rndrng_physn_npi AS combo_field
                         FROM ccw_owner.temp_outpatient f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, clm_line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_outpatient_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for outpatient file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_outpatient_file;

  PROCEDURE output_snf_file(p_part_num     IN VARCHAR2,
                            pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'SNF'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5
                                                ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         fi_clm_proc_dt || '|' || claim_query_code || '|' ||
                         prvdr_num || '|' || clm_fac_type_cd || '|' ||
                         clm_srvc_clsfctn_type_cd || '|' || clm_freq_cd || '|' ||
                         fi_num || '|' || clm_mdcr_non_pmt_rsn_cd || '|' ||
                         clm_pmt_amt || '|' || nch_prmry_pyr_clm_pd_amt || '|' ||
                         nch_prmry_pyr_cd || '|' || fi_clm_actn_cd || '|' ||
                         prvdr_state_cd || '|' || org_npi_num || '|' ||
                         at_physn_upin || '|' || at_physn_npi || '|' ||
                         op_physn_upin || '|' || op_physn_npi || '|' ||
                         ot_physn_upin || '|' || ot_physn_npi || '|' ||
                         clm_mco_pd_sw || '|' || ptnt_dschrg_stus_cd || '|' ||
                         clm_pps_ind_cd || '|' || clm_tot_chrg_amt || '|' ||
                         clm_admsn_dt || '|' || clm_ip_admsn_type_cd || '|' ||
                         clm_src_ip_admsn_cd || '|' || nch_ptnt_status_ind_cd || '|' ||
                         nch_bene_ip_ddctbl_amt || '|' ||
                         nch_bene_pta_coinsrnc_lblty_am || '|' ||
                         nch_bene_blood_ddctbl_lblty_am || '|' ||
                         nch_ip_ncvrd_chrg_amt || '|' || nch_ip_tot_ddctn_amt || '|' ||
                         clm_pps_cptl_fsp_amt || '|' ||
                         clm_pps_cptl_outlier_amt || '|' ||
                         clm_pps_cptl_dsprprtnt_shr_amt || '|' ||
                         clm_pps_cptl_ime_amt || '|' ||
                         clm_pps_cptl_excptn_amt || '|' ||
                         clm_pps_old_cptl_hld_hrmls_amt || '|' ||
                         clm_utlztn_day_cnt || '|' ||
                         bene_tot_coinsrnc_days_cnt || '|' ||
                         clm_non_utlztn_days_cnt || '|' ||
                         nch_blood_pnts_frnshd_qty || '|' ||
                         nch_qlfyd_stay_from_dt || '|' ||
                         nch_qlfyd_stay_thru_dt || '|' ||
                         nch_vrfd_ncvrd_stay_from_dt || '|' ||
                         nch_vrfd_ncvrd_stay_thru_dt || '|' ||
                         nch_actv_or_cvrd_lvl_care_thru || '|' ||
                         nch_bene_mdcr_bnfts_exhtd_dt_i || '|' ||
                         nch_bene_dschrg_dt || '|' || clm_drg_cd || '|' ||
                         admtg_dgns_cd || '|' || admtg_dgns_vrsn_cd || '|' ||
                         prncpal_dgns_cd || '|' || prncpal_dgns_vrsn_cd || '|' ||
                         icd_dgns_cd1 || '|' || icd_dgns_vrsn_cd1 || '|' ||
                         icd_dgns_cd2 || '|' || icd_dgns_vrsn_cd2 || '|' ||
                         icd_dgns_cd3 || '|' || icd_dgns_vrsn_cd3 || '|' ||
                         icd_dgns_cd4 || '|' || icd_dgns_vrsn_cd4 || '|' ||
                         icd_dgns_cd5 || '|' || icd_dgns_vrsn_cd5 || '|' ||
                         icd_dgns_cd6 || '|' || icd_dgns_vrsn_cd6 || '|' ||
                         icd_dgns_cd7 || '|' || icd_dgns_vrsn_cd7 || '|' ||
                         icd_dgns_cd8 || '|' || icd_dgns_vrsn_cd8 || '|' ||
                         icd_dgns_cd9 || '|' || icd_dgns_vrsn_cd9 || '|' ||
                         icd_dgns_cd10 || '|' || icd_dgns_vrsn_cd10 || '|' ||
                         icd_dgns_cd11 || '|' || icd_dgns_vrsn_cd11 || '|' ||
                         icd_dgns_cd12 || '|' || icd_dgns_vrsn_cd12 || '|' ||
                         icd_dgns_cd13 || '|' || icd_dgns_vrsn_cd13 || '|' ||
                         icd_dgns_cd14 || '|' || icd_dgns_vrsn_cd14 || '|' ||
                         icd_dgns_cd15 || '|' || icd_dgns_vrsn_cd15 || '|' ||
                         icd_dgns_cd16 || '|' || icd_dgns_vrsn_cd16 || '|' ||
                         icd_dgns_cd17 || '|' || icd_dgns_vrsn_cd17 || '|' ||
                         icd_dgns_cd18 || '|' || icd_dgns_vrsn_cd18 || '|' ||
                         icd_dgns_cd19 || '|' || icd_dgns_vrsn_cd19 || '|' ||
                         icd_dgns_cd20 || '|' || icd_dgns_vrsn_cd20 || '|' ||
                         icd_dgns_cd21 || '|' || icd_dgns_vrsn_cd21 || '|' ||
                         icd_dgns_cd22 || '|' || icd_dgns_vrsn_cd22 || '|' ||
                         icd_dgns_cd23 || '|' || icd_dgns_vrsn_cd23 || '|' ||
                         icd_dgns_cd24 || '|' || icd_dgns_vrsn_cd24 || '|' ||
                         icd_dgns_cd25 || '|' || icd_dgns_vrsn_cd25 || '|' ||
                         fst_dgns_e_cd || '|' || fst_dgns_e_vrsn_cd || '|' ||
                         icd_dgns_e_cd1 || '|' || icd_dgns_e_vrsn_cd1 || '|' ||
                         icd_dgns_e_cd2 || '|' || icd_dgns_e_vrsn_cd2 || '|' ||
                         icd_dgns_e_cd3 || '|' || icd_dgns_e_vrsn_cd3 || '|' ||
                         icd_dgns_e_cd4 || '|' || icd_dgns_e_vrsn_cd4 || '|' ||
                         icd_dgns_e_cd5 || '|' || icd_dgns_e_vrsn_cd5 || '|' ||
                         icd_dgns_e_cd6 || '|' || icd_dgns_e_vrsn_cd6 || '|' ||
                         icd_dgns_e_cd7 || '|' || icd_dgns_e_vrsn_cd7 || '|' ||
                         icd_dgns_e_cd8 || '|' || icd_dgns_e_vrsn_cd8 || '|' ||
                         icd_dgns_e_cd9 || '|' || icd_dgns_e_vrsn_cd9 || '|' ||
                         icd_dgns_e_cd10 || '|' || icd_dgns_e_vrsn_cd10 || '|' ||
                         icd_dgns_e_cd11 || '|' || icd_dgns_e_vrsn_cd11 || '|' ||
                         icd_dgns_e_cd12 || '|' || icd_dgns_e_vrsn_cd12 || '|' ||
                         icd_prcdr_cd1 || '|' || icd_prcdr_vrsn_cd1 || '|' ||
                         prcdr_dt1 || '|' || icd_prcdr_cd2 || '|' ||
                         icd_prcdr_vrsn_cd2 || '|' || prcdr_dt2 || '|' ||
                         icd_prcdr_cd3 || '|' || icd_prcdr_vrsn_cd3 || '|' ||
                         prcdr_dt3 || '|' || icd_prcdr_cd4 || '|' ||
                         icd_prcdr_vrsn_cd4 || '|' || prcdr_dt4 || '|' ||
                         icd_prcdr_cd5 || '|' || icd_prcdr_vrsn_cd5 || '|' ||
                         prcdr_dt5 || '|' || icd_prcdr_cd6 || '|' ||
                         icd_prcdr_vrsn_cd6 || '|' || prcdr_dt6 || '|' ||
                         icd_prcdr_cd7 || '|' || icd_prcdr_vrsn_cd7 || '|' ||
                         prcdr_dt7 || '|' || icd_prcdr_cd8 || '|' ||
                         icd_prcdr_vrsn_cd8 || '|' || prcdr_dt8 || '|' ||
                         icd_prcdr_cd9 || '|' || icd_prcdr_vrsn_cd9 || '|' ||
                         prcdr_dt9 || '|' || icd_prcdr_cd10 || '|' ||
                         icd_prcdr_vrsn_cd10 || '|' || prcdr_dt10 || '|' ||
                         icd_prcdr_cd11 || '|' || icd_prcdr_vrsn_cd11 || '|' ||
                         prcdr_dt11 || '|' || icd_prcdr_cd12 || '|' ||
                         icd_prcdr_vrsn_cd12 || '|' || prcdr_dt12 || '|' ||
                         icd_prcdr_cd13 || '|' || icd_prcdr_vrsn_cd13 || '|' ||
                         prcdr_dt13 || '|' || icd_prcdr_cd14 || '|' ||
                         icd_prcdr_vrsn_cd14 || '|' || prcdr_dt14 || '|' ||
                         icd_prcdr_cd15 || '|' || icd_prcdr_vrsn_cd15 || '|' ||
                         prcdr_dt15 || '|' || icd_prcdr_cd16 || '|' ||
                         icd_prcdr_vrsn_cd16 || '|' || prcdr_dt16 || '|' ||
                         icd_prcdr_cd17 || '|' || icd_prcdr_vrsn_cd17 || '|' ||
                         prcdr_dt17 || '|' || icd_prcdr_cd18 || '|' ||
                         icd_prcdr_vrsn_cd18 || '|' || prcdr_dt18 || '|' ||
                         icd_prcdr_cd19 || '|' || icd_prcdr_vrsn_cd19 || '|' ||
                         prcdr_dt19 || '|' || icd_prcdr_cd20 || '|' ||
                         icd_prcdr_vrsn_cd20 || '|' || prcdr_dt20 || '|' ||
                         icd_prcdr_cd21 || '|' || icd_prcdr_vrsn_cd21 || '|' ||
                         prcdr_dt21 || '|' || icd_prcdr_cd22 || '|' ||
                         icd_prcdr_vrsn_cd22 || '|' || prcdr_dt22 || '|' ||
                         icd_prcdr_cd23 || '|' || icd_prcdr_vrsn_cd23 || '|' ||
                         prcdr_dt23 || '|' || icd_prcdr_cd24 || '|' ||
                         icd_prcdr_vrsn_cd24 || '|' || prcdr_dt24 || '|' ||
                         icd_prcdr_cd25 || '|' || icd_prcdr_vrsn_cd25 || '|' ||
                         prcdr_dt25 || '|' || --Rev Line Values
                         clm_line_num || '|' || rev_cntr || '|' ||
                         hcpcs_cd || '|' ||
                         rev_cntr_unit_cnt || '|' || rev_cntr_rate_amt || '|' ||
                         rev_cntr_tot_chrg_amt || '|' ||
                         rev_cntr_ncvrd_chrg_amt || '|' ||
                         rev_cntr_ddctbl_coinsrnc_cd || '|' ||
                         rev_cntr_ndc_qty || '|' || rev_cntr_ndc_qty_qlfr_cd || '|' ||
                         rndrng_physn_upin || '|' || rndrng_physn_npi AS combo_field
                         FROM ccw_owner.temp_snf f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, clm_line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_snf_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for snf file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_snf_file;

  PROCEDURE output_dme_file(p_part_num     IN VARCHAR2,
                            pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'DME'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         carr_clm_entry_cd || '|' || clm_disp_cd || '|' ||
                         carr_num || '|' || carr_clm_pmt_dnl_cd || '|' ||
                         clm_pmt_amt || '|' || carr_clm_prmry_pyr_pd_amt || '|' ||
                         carr_clm_prvdr_asgnmt_ind_sw || '|' ||
                         nch_clm_prvdr_pmt_amt || '|' || nch_clm_bene_pmt_amt || '|' ||
                         nch_carr_clm_sbmtd_chrg_amt || '|' ||
                         nch_carr_clm_alowd_amt || '|' ||
                         carr_clm_cash_ddctbl_apld_amt || '|' ||
                         carr_clm_hcpcs_yr_cd || '|' || prncpal_dgns_cd || '|' ||
                         prncpal_dgns_vrsn_cd || '|' || icd_dgns_cd1 || '|' ||
                         icd_dgns_vrsn_cd1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || icd_dgns_cd3 || '|' ||
                         icd_dgns_vrsn_cd3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || icd_dgns_cd5 || '|' ||
                         icd_dgns_vrsn_cd5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || icd_dgns_cd7 || '|' ||
                         icd_dgns_vrsn_cd7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || icd_dgns_cd9 || '|' ||
                         icd_dgns_vrsn_cd9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || icd_dgns_cd11 || '|' ||
                         icd_dgns_vrsn_cd11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || rfr_physn_upin || '|' ||
                         rfr_physn_npi || '|' || clm_clncl_tril_num || '|' || --****** Line Level Values
                         line_num || '|' || 
                         tax_num || '|' || prvdr_spclty || '|' ||
                         prtcptng_ind_cd || '|' || line_srvc_cnt || '|' ||
                         line_cms_type_srvc_cd || '|' ||
                         line_place_of_srvc_cd || '|' || line_1st_expns_dt || '|' ||
                         line_last_expns_dt || '|' || hcpcs_cd || '|' ||
                         hcpcs_1st_mdfr_cd || '|' || hcpcs_2nd_mdfr_cd || '|' ||
                         betos_cd || '|' || line_nch_pmt_amt || '|' ||
                         line_bene_pmt_amt || '|' || line_prvdr_pmt_amt || '|' ||
                         line_bene_ptb_ddctbl_amt || '|' ||
                         line_bene_prmry_pyr_cd || '|' ||
                         line_bene_prmry_pyr_pd_amt || '|' ||
                         line_coinsrnc_amt || '|' ||
                         line_prmry_alowd_chrg_amt || '|' ||
                         line_sbmtd_chrg_amt || '|' || line_alowd_chrg_amt || '|' ||
                         line_prcsg_ind_cd || '|' || line_pmt_80_100_cd || '|' ||
                         line_service_deductible || '|' || line_icd_dgns_cd || '|' ||
                         line_icd_dgns_vrsn_cd || '|' ||
                         line_dme_prchs_price_amt || '|' || prvdr_num || '|' ||
                         prvdr_npi || '|' || dmerc_line_prcng_state_cd || '|' ||
                         prvdr_state_cd || '|' || dmerc_line_supplr_type_cd || '|' ||
                         hcpcs_3rd_mdfr_cd || '|' || hcpcs_4th_mdfr_cd || '|' ||
                         dmerc_line_scrn_svgs_amt || '|' ||
                         dmerc_line_mtus_cnt || '|' || dmerc_line_mtus_cd || '|' ||
                         line_hct_hgb_rslt_num || '|' || line_hct_hgb_type_cd || '|' ||
                         line_ndc_cd AS combo_field
                         FROM ccw_owner.temp_dme f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_dme_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for dme file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_dme_file;

  PROCEDURE output_bcarrier_file(p_part_num     IN VARCHAR2,
                                 pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN
      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'BCARRIER'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      g_first_column := TRUE;
      utl_file.put_line(g_file, g_column_name);

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         bene_id || '|' ||
                         clm_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         nch_near_line_rec_ident_cd || '|' ||
                         nch_clm_type_cd || '|' || clm_from_dt || '|' ||
                         clm_thru_dt || '|' || nch_wkly_proc_dt || '|' ||
                         carr_clm_entry_cd || '|' || clm_disp_cd || '|' ||
                         carr_num || '|' || carr_clm_pmt_dnl_cd || '|' ||
                         clm_pmt_amt || '|' || carr_clm_prmry_pyr_pd_amt || '|' ||
                        -- DECODE 3/19 - '\'
                        DECODE (REPLACE (
                                DECODE(REPLACE(rfr_physn_upin, '|'),
                                rfr_physn_upin,
                                rfr_physn_upin,
                                NULL), '\'),
                                rfr_physn_upin,
                                rfr_physn_upin,
                                NULL)
                                 || '|' ||
                         rfr_physn_npi || '|' ||
                         carr_clm_prvdr_asgnmt_ind_sw || '|' ||
                         nch_clm_prvdr_pmt_amt || '|' || nch_clm_bene_pmt_amt || '|' ||
                         nch_carr_clm_sbmtd_chrg_amt || '|' ||
                         nch_carr_clm_alowd_amt || '|' ||
                         carr_clm_cash_ddctbl_apld_amt || '|' ||
                         carr_clm_hcpcs_yr_cd || '|' ||
                         carr_clm_rfrng_pin_num || '|' || prncpal_dgns_cd || '|' ||
                         prncpal_dgns_vrsn_cd || '|' || icd_dgns_cd1 || '|' ||
                         icd_dgns_vrsn_cd1 || '|' || icd_dgns_cd2 || '|' ||
                         icd_dgns_vrsn_cd2 || '|' || icd_dgns_cd3 || '|' ||
                         icd_dgns_vrsn_cd3 || '|' || icd_dgns_cd4 || '|' ||
                         icd_dgns_vrsn_cd4 || '|' || icd_dgns_cd5 || '|' ||
                         icd_dgns_vrsn_cd5 || '|' || icd_dgns_cd6 || '|' ||
                         icd_dgns_vrsn_cd6 || '|' || icd_dgns_cd7 || '|' ||
                         icd_dgns_vrsn_cd7 || '|' || icd_dgns_cd8 || '|' ||
                         icd_dgns_vrsn_cd8 || '|' || icd_dgns_cd9 || '|' ||
                         icd_dgns_vrsn_cd9 || '|' || icd_dgns_cd10 || '|' ||
                         icd_dgns_vrsn_cd10 || '|' || icd_dgns_cd11 || '|' ||
                         icd_dgns_vrsn_cd11 || '|' || icd_dgns_cd12 || '|' ||
                         icd_dgns_vrsn_cd12 || '|' || clm_clncl_tril_num || '|' || --***** Line Level Values
                         line_num || '|' || 
                         carr_prfrng_pin_num || '|' || prf_physn_upin || '|' ||
                         prf_physn_npi || '|' || org_npi_num || '|' ||
                         carr_line_prvdr_type_cd || '|' || tax_num || '|' ||
                         prvdr_state_cd || '|' || prvdr_zip || '|' ||
                         prvdr_spclty || '|' || prtcptng_ind_cd || '|' ||
                         carr_line_rdcd_pmt_phys_astn_c || '|' ||
                         line_srvc_cnt || '|' || line_cms_type_srvc_cd || '|' ||
                         line_place_of_srvc_cd || '|' ||
                         carr_line_prcng_lclty_cd || '|' || line_1st_expns_dt || '|' ||
                         line_last_expns_dt || '|' || hcpcs_cd || '|' ||
                         hcpcs_1st_mdfr_cd || '|' ||
                         --3.19 DECODE
                         DECODE(REPLACE(hcpcs_2nd_mdfr_cd, '\'),
                                hcpcs_2nd_mdfr_cd,
                                hcpcs_2nd_mdfr_cd,
                                NULL)|| '|' ||
                         betos_cd || '|' || line_nch_pmt_amt || '|' ||
                         line_bene_pmt_amt || '|' || line_prvdr_pmt_amt || '|' ||
                         line_bene_ptb_ddctbl_amt || '|' ||
                         line_bene_prmry_pyr_cd || '|' ||
                         line_bene_prmry_pyr_pd_amt || '|' ||
                         line_coinsrnc_amt || '|' || line_sbmtd_chrg_amt || '|' ||
                         line_alowd_chrg_amt || '|' || line_prcsg_ind_cd || '|' ||
                         line_pmt_80_100_cd || '|' || line_service_deductible || '|' ||
                         carr_line_mtus_cnt || '|' || carr_line_mtus_cd || '|' ||
                         line_icd_dgns_cd || '|' || line_icd_dgns_vrsn_cd || '|' ||
                         hpsa_scrcty_ind_cd || '|' || carr_line_rx_num || '|' ||
                         line_hct_hgb_rslt_num || '|' || line_hct_hgb_type_cd || '|' ||
                         line_ndc_cd || '|' ||
                         --3.19 DECODE
                         DECODE(REPLACE(carr_line_clia_lab_num, '\'),
                                carr_line_clia_lab_num,
                                carr_line_clia_lab_num,
                                NULL)|| '|' ||
                         carr_line_ansthsa_unit_cnt AS combo_field
                         FROM ccw_owner.temp_bcarrier f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, clm_id, line_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_bcarrier_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for bcarrier file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_bcarrier_file;

  PROCEDURE output_pde_file(p_part_num     IN VARCHAR2,
                            pb_output_data IN VARCHAR2) IS

    p_output_data BOOLEAN;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_output_data := truefalsetoboolean(pb_output_data);

    IF p_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'PDE'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record
      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||   --3.21
                         pde_id || '|' || -- 3.17
                         clm_grp_id || '|' ||
                         DECODE (finl_actn_id, g_finl_actn_id, 'F', g_not_finl_actn_id, 'N', NULL) || '|' || -- 3.20 - fa status
                         bene_id || '|' || srvc_dt || '|' ||
                         pd_dt || '|' || srvc_prvdr_id_qlfyr_cd || '|' ||
                         srvc_prvdr_id || '|' || prscrbr_id_qlfyr_cd || '|' ||
                         prscrbr_id || '|' || rx_srvc_rfrnc_num || '|' ||
                         prod_srvc_id || '|' || plan_cntrct_rec_id || '|' ||
                         plan_pbp_rec_num || '|' || cmpnd_cd || '|' ||
                         daw_prod_slctn_cd || '|' || qty_dspnsd_num || '|' ||
                         days_suply_num || '|' || fill_num || '|' ||
                         dspnsng_stus_cd || '|' || drug_cvrg_stus_cd || '|' ||
                         adjstmt_dltn_cd || '|' || nstd_frmt_cd || '|' ||
                         prcng_excptn_cd || '|' || ctstrphc_cvrg_cd || '|' ||
                         gdc_blw_oopt_amt || '|' || gdc_abv_oopt_amt || '|' ||
                         ptnt_pay_amt || '|' || othr_troop_amt || '|' ||
                         lics_amt || '|' || plro_amt || '|' ||
                         cvrd_d_plan_pd_amt || '|' || ncvrd_plan_pd_amt || '|' ||
                         tot_rx_cst_amt || '|' || rx_orgn_cd || '|' ||
                         rptd_gap_dscnt_num || '|' || brnd_gnrc_cd || '|' ||
                         phrmcy_srvc_type_cd || '|' || ptnt_rsdnc_cd || '|' ||
                         submsn_clr_cd AS combo_field
                         FROM ccw_owner.temp_pde f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY version, bene_id, plan_pbp_rec_num) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_pde_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for pde file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

  END output_pde_file;

  /*
  Runs during delta file processing. Data is loaded into "fhir_pt(abd)_ld_claim_status" tables with a NULL
  value in the job_ld_dt to indicate that the claim will need to be processed as a "new" claim rather than an
  update. Only claim ids not previously processed/loaded into the "ld_clm_status" tables will be inserted.

  If the latest load description has been populated in variable: g_latest_load_desc, records will have to have
  that value in their ccw_ld_desc field. This load description value must also be in the meta_prcsng_dtl with its
  prd_prcsng_ind value set to 'N'. If the g_latest_load_desc variable is NULL, all load descriptions from the
  meta_prcsng_dtl table with the indicator value of 'N' are checked. This is "probably" an error/not optimal.
  */
  PROCEDURE new_claims(p_strt_dt     DATE,
                       p_end_dt      DATE,
                       p_part_num    VARCHAR2,
                       p_run_pta     BOOLEAN DEFAULT TRUE,
                       p_run_ptb     BOOLEAN DEFAULT TRUE,
                       p_run_ptd     BOOLEAN DEFAULT TRUE,
                       p_100_parts   BOOLEAN DEFAULT FALSE,
                       p_new_version BOOLEAN DEFAULT FALSE) IS

    -- retrieve loaded claim_id (clm_id) based on finl_actn_id, ccw_ld_desc, and clm_thru_dt

    l_tot_rows NUMBER;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'new_claims - started');

    
    IF p_run_pta THEN

      dbms_application_info.set_client_info('new_claims () - INS PtA');
      g_delta_strt_dt := delta_file_strt_dt ('PART_A'); 

      l_tot_rows := 0;

      IF p_100_parts THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_ld_clm_status
          (clm_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version
           ,dml_status
           ,nch_clm_type_cd
           ,clm_thru_dt)
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version
           ,'NC-100-INS'
           , acp.nch_clm_type_cd 
           , f.clm_thru_dt 
            FROM ccw_owner.ccw_pta_fact f,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.meta_prcsng_dtl        pd,
                 ccw_owner.fhir_pta_ld_clm_status pta,
                 ccw_owner.fhir_pta_clm_grp         pg,
                 ccw_owner.ccw_prvdr_at_time_of_clm pr,
                 ccw_owner.ccw_all_clm_prfl         acp
           WHERE f.ccw_ld_desc = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id) - 1, 2) =
                 nvl(p_part_num,
                     substr(f.bene_id, length(f.bene_id) - 1, 2))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND pd.prd_prcsng_ind = 'N'
             AND pd.prd_run_type = 'DELTA' -- 3.9
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('10',
                                         '50',
                                         '60',
                                         '61',
                                         '62',
                                         '40',
                                         '41',
                                         '42',
                                         '20',
                                         '30')
             AND f.prvdr_at_time_of_clm_id = pr.prvdr_id
             AND acp.clm_type_id = f.clm_type_id
             AND pg.prvdr_num(+) = pr.prvdr_num
             AND pg.clm_thru_dt(+) = f.clm_thru_dt
             AND pg.clm_from_dt(+) = f.clm_from_dt
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
             AND pta.clm_id(+) = f.clm_id
             AND pta.clm_id IS NULL;
         l_tot_rows := l_tot_rows + SQL%ROWCOUNT;
      ELSE
        -- else (Not) p_100_parts

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_ld_clm_status
          (clm_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version
           ,dml_status
           ,nch_clm_type_cd
           ,clm_thru_dt)
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version
           ,'NC-INS'
           , acp.nch_clm_type_cd
           , f.clm_thru_dt
            FROM ccw_owner.ccw_pta_fact f,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.meta_prcsng_dtl        pd,
                 ccw_owner.fhir_pta_ld_clm_status pta,
                 ccw_owner.fhir_pta_clm_grp         pg,
                 ccw_owner.ccw_prvdr_at_time_of_clm pr,
                 ccw_owner.ccw_all_clm_prfl         acp
           WHERE f.ccw_ld_desc = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl(p_part_num, substr(f.bene_id, length(f.bene_id), 1))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND pd.prd_prcsng_ind = 'N'
             AND pd.prd_run_type = 'DELTA'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('10',
                                         '50',
                                         '60',
                                         '61',
                                         '62',
                                         '40',
                                         '41',
                                         '42',
                                         '20',
                                         '30')
             AND f.prvdr_at_time_of_clm_id = pr.prvdr_id
             AND acp.clm_type_id = f.clm_type_id
             AND pg.prvdr_num(+) = pr.prvdr_num
             AND pg.clm_thru_dt(+) = f.clm_thru_dt
             AND pg.clm_from_dt(+) = f.clm_from_dt
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
             AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
             AND pta.clm_id(+) = f.clm_id
             AND pta.clm_id IS NULL;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

      END IF; -- IF p_100_parts THEN

      g_tot_rows := g_tot_rows + l_tot_rows;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'new_claims - PtA finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');

      COMMIT;
    END IF; -- If p_run_pta --

    IF p_run_ptb THEN

      dbms_application_info.set_client_info('new_claims () - INS PtB');
      g_delta_strt_dt := delta_file_strt_dt ('PART_B'); 

      l_tot_rows := 0;

      IF p_100_parts THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptb_ld_clm_status
          (clm_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version
           ,dml_status
           ,nch_clm_type_cd
           ,clm_thru_dt)
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version
           ,'NC-100-INS'
           , acp.nch_clm_type_cd
           , f.clm_thru_dt
            FROM ccw_owner.ccw_ptb_fact        f,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.fhir_ptb_ld_clm_status ptb,
                 ccw_owner.fhir_bene_ld_status fb,
                 ccw_owner.fhir_ptb_clm_grp pg,
                 ccw_owner.ccw_all_clm_prfl acp,
                 ccw_owner.meta_prcsng_dtl pd
           WHERE f.ccw_ld_desc  = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id) - 1, 2) =
                 nvl(p_part_num,
                     substr(f.bene_id, length(f.bene_id) - 1, 2))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND pd.prd_prcsng_ind = 'N'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND pd.prd_run_type = 'DELTA' 
             AND f.clm_thru_dt >= g_delta_strt_dt   
             AND acp.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
             AND acp.clm_type_id = f.clm_type_id
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
             AND ptb.clm_id(+) = f.clm_id
             AND ptb.clm_id IS NULL;
             
        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

      ELSE
        -- If (not) p_100_parts

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptb_ld_clm_status
          (clm_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version
           ,dml_status
           ,nch_clm_type_cd 
           ,clm_thru_dt) 
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version
           ,'NC-INS'
           , acp.nch_clm_type_cd 
           , f.clm_thru_dt  
            FROM ccw_owner.ccw_ptb_fact        f,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.fhir_ptb_ld_clm_status ptb,
                 ccw_owner.fhir_bene_ld_status fb,
                 ccw_owner.fhir_ptb_clm_grp pg,
                 ccw_owner.ccw_all_clm_prfl acp ,
                 ccw_owner.meta_prcsng_dtl pd
           WHERE f.ccw_ld_desc  = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl(p_part_num, substr(f.bene_id, length(f.bene_id), 1))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND pd.prd_prcsng_ind = 'N'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND pd.prd_run_type = 'DELTA'
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
             AND acp.clm_type_id = f.clm_type_id
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
             AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
             AND ptb.clm_id(+) = f.clm_id
             AND ptb.clm_id IS NULL;
             
        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

      END IF; -- If p_100_parts THEN

      g_tot_rows := g_tot_rows + l_tot_rows;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'new_claims - PtB finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');
      COMMIT;
    END IF; -- If p_run_ptb

    IF p_run_ptd THEN

      dbms_application_info.set_client_info('new_claims () - INS PtD');
      g_delta_strt_dt := delta_file_strt_dt ('PART_D'); 

      l_tot_rows := 0;

      IF p_100_parts THEN
        ---- for example ptd
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_ld_clm_status
          (pde_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version
           ,dml_status
           ,srvc_dt)  
          SELECT /*+ parallel (16) */
           f.pde_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_load_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version 
           ,'NC-100-INS'
           ,f.srvc_dt 
            FROM ccw_owner.ccw_pde_fact f,
                 ccw_owner.fhir_bene_ld_status     fb,
                 ccw_owner.ccw_finl_actn_prfl      fa,
                 ccw_owner.meta_prcsng_dtl         pd ,
                 ccw_owner.fhir_ptd_ld_clm_status  ptd,
                 ccw_owner.fhir_ptd_clm_grp        pg,
                 ccw_owner.ccw_pde_srvc_prvdr_prfl prfl
           WHERE f.ccw_load_desc = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.srvc_dt
                BETWEEN nvl(p_strt_dt, f.srvc_dt) AND nvl(p_end_dt, f.srvc_dt)
             AND substr(f.bene_id, length(f.bene_id) - 1, 2) =
                 nvl(p_part_num,
                     substr(f.bene_id, length(f.bene_id) - 1, 2))
             AND pd.prd_type = 'PDE'
             AND pd.prd_prcsng_ind = 'N'
             AND pd.prd_run_type = 'DELTA'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID
             AND f.srvc_dt >= g_delta_strt_dt
             AND pg.rx_srvc_rfrnc_num 
                 = f.rx_srvc_rfrnc_num
             AND pg.srvc_prvdr_id_qlfyr_cd 
                 = prfl.srvc_prvdr_id_qlfyr_cd
             AND pg.srvc_prvdr_id 
                 = prfl.srvc_prvdr_id
             AND pg.srvc_dt 
                 = f.srvc_dt
             AND ptd.pde_id(+) = f.pde_id
             AND ptd.pde_id IS NULL;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;
      ELSE
        -- If (not) p_100_parts

        ---- for example ptd
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_ld_clm_status
          (pde_id,
           dml_ind,
           finl_actn_id,
           ccw_ld_desc,
           bene_id,
           clm_grp_id,
           version 
           ,dml_status
           ,srvc_dt)                     
          SELECT /*+ parallel (16) */
           f.pde_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_load_desc,
           f.bene_id,
           pg.clm_grp_id,
           g_version 
           ,'NC-INS'
           ,f.srvc_dt  
            FROM ccw_owner.ccw_pde_fact f,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.meta_prcsng_dtl        pd,
                 ccw_owner.fhir_ptd_ld_clm_status ptd,
                 ccw_owner.fhir_ptd_clm_grp        pg,
                 ccw_owner.ccw_pde_srvc_prvdr_prfl prfl
           WHERE f.ccw_load_desc  = NVL (g_latest_load_desc, pd.prd_name)
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.srvc_dt BETWEEN nvl(p_strt_dt, f.srvc_dt) AND
                 nvl(p_end_dt, f.srvc_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl(p_part_num, substr(f.bene_id, length(f.bene_id), 1))
             AND pd.prd_type = 'PDE'
             AND pd.prd_run_type = 'DELTA'  
             AND pd.prd_prcsng_ind = 'N'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID
             AND f.srvc_dt >= g_delta_strt_dt
             AND pg.rx_srvc_rfrnc_num 
                 = f.rx_srvc_rfrnc_num
             AND pg.srvc_prvdr_id_qlfyr_cd 
                 = prfl.srvc_prvdr_id_qlfyr_cd
             AND pg.srvc_prvdr_id 
                 = prfl.srvc_prvdr_id 
             AND pg.srvc_dt
                 = f.srvc_dt 
             AND ptd.pde_id(+) = f.pde_id
             AND ptd.pde_id IS NULL; 

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;
      END IF; -- p_100_parts

      g_tot_rows := g_tot_rows + l_tot_rows;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'new_claims - PtD finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');
      COMMIT;
    END IF; -- If p_run_ptd

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'new_claims - finished');

  END new_claims;

  /*
  */

 PROCEDURE updated_claims(p_strt_dt     DATE,
                           p_end_dt      DATE,
                           p_part_num    VARCHAR2,
                           p_run_pta     BOOLEAN DEFAULT TRUE,
                           p_run_ptb     BOOLEAN DEFAULT TRUE,
                           p_run_ptd     BOOLEAN DEFAULT TRUE,
                           p_new_version BOOLEAN DEFAULT FALSE) IS

    l_tot_rows NUMBER;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'updated_claims - started');
    IF p_run_pta THEN
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - p_run_pta = TRUE');
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - p_run_pta = FALSE');
    END IF;

      --------------------------------------------------------------
      -- Part A
      --------------------------------------------------------------
    IF p_run_pta THEN

      dbms_application_info.set_client_info('upd_claims () - PtA');
      g_delta_strt_dt :=  delta_file_strt_dt ('PART_A'); 

      truncate_table ('', 'FHIR_PTA_LD_CLM_STATUS_UPDT'); 
      l_tot_rows := 0; 
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_pta_ld_clm_status_updt
        (clm_id,
         version,
         dml_ind,
         bene_id,
         finl_actn_id,
         ccw_ld_desc,
         JOB_LD_DT,
         proc_num, 
         clm_grp_id,
         dml_status,
         nch_clm_type_cd,
         clm_thru_dt) 
        select /*+ parallel (16) */
         st.CLM_ID,
         g_version VERSION,
         'UPDATE' DML_IND,
         st.BENE_ID,
         hld.FINL_ACTN_ID,
         st.CCW_LD_DESC,
         NULL JOB_LD_DT,
         st.PROC_NUM,
         st.CLM_GRP_ID,
         'UPDC-UPD' DML_STATUS,
         st.NCH_CLM_TYPE_CD,
         st.CLM_THRU_DT
          FROM (select /*+ parallel(16) */ updt.*,
                       rank() over(PARTITION BY updt.clm_id ORDER BY updt.ccw_ld_desc desc) rank_num
                  from ccw_owner.fhir_pta_clm_updt updt) hld,
               ccw_owner.fhir_pta_ld_clm_status st
         WHERE st.clm_id = hld.clm_id
         and rank_num = 1
         AND st.finl_actn_id <> hld.finl_actn_id;
        
        l_tot_rows := SQL%ROWCOUNT; 
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtA (upd-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');  
        COMMIT; 
        
        l_tot_rows := SQL%ROWCOUNT;
        DELETE /*+ parallel (16) */
        FROM ccw_owner.fhir_pta_ld_clm_status f 
         WHERE EXISTS (SELECT /*+ parallel (16) */
                 1
                  FROM ccw_owner.fhir_pta_ld_clm_status_updt d
                 WHERE d.clm_id = f.clm_id);

        l_tot_rows := SQL%ROWCOUNT; 
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - DelPtA (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows deleted');  
        COMMIT; 

        l_tot_rows := 0;
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_ld_clm_status
        (clm_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        nch_clm_type_cd, 
        clm_thru_dt
        )
        SELECT /*+ parallel (16) */
        clm_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        nch_clm_type_cd, 
        clm_thru_dt
        FROM ccw_owner.fhir_pta_ld_clm_status_updt;
       
       l_tot_rows := SQL%ROWCOUNT; 
       g_tot_rows := g_tot_rows + l_tot_rows;       
 
       sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtA (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted'); 
       COMMIT; 

      l_tot_rows := 0; 
      
       INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_pta_ld_clm_status
        -- 3.20 - add bene_id
        (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, version, clm_grp_id, dml_status, bene_id
           , nch_clm_type_cd, clm_thru_dt)  
        SELECT /*+ parallel (16) */
         DISTINCT hld.clm_id,
         'INSERT',
         hld.finl_actn_id,
         f.ccw_ld_desc,
         g_version,
         pg.clm_grp_id  
         , 'UPDC-INS'
         , f.bene_id
         , acp.nch_clm_type_cd           
         , f.clm_thru_dt                 
          FROM
            (select /*+ parallel (16) */ updt.*,
              rank() over(PARTITION BY updt.clm_id ORDER BY updt.ccw_ld_desc desc) rank_num
              from ccw_owner.fhir_pta_clm_updt updt) hld, 
               
               ccw_owner.fhir_bene_ld_status      fb,
               ccw_owner.fhir_pta_ld_clm_status   st_a, 
               ccw_owner.ccw_pta_fact          f,
               ccw_owner.ccw_prvdr_at_time_of_clm pr,
               ccw_owner.fhir_pta_clm_grp         pg,
               ccw_owner.ccw_all_clm_prfl         acp
         WHERE hld.clm_id = st_a.clm_id(+)
           AND rank_num = 1
           AND st_a.clm_id IS NULL 
           AND f.clm_id = hld.clm_id
           AND f.clm_thru_dt >= g_delta_strt_dt   
           AND f.prvdr_at_time_of_clm_id = pr.prvdr_id  
           AND f.bene_id = fb.key
           AND acp.clm_type_id = f.clm_type_id
           AND pg.prvdr_num(+) = pr.prvdr_num
           AND pg.clm_thru_dt(+) = f.clm_thru_dt
           AND pg.clm_from_dt(+) = f.clm_from_dt
           AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
           AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
           AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
           AND hld.finl_actn_id = 21             
           AND hld.finl_actn_id = f.finl_actn_id;    
      
      l_tot_rows := SQL%ROWCOUNT; 
      g_tot_rows := g_tot_rows + l_tot_rows;
      
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtA (new stus-TAB) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');    
      COMMIT; 
   
     END IF; -- If p_run_pta THEN

    --------------------------------------------------------------
    -- Part B
    --------------------------------------------------------------
    IF p_run_ptb THEN

      dbms_application_info.set_client_info('upd_claims () - PtB');
      g_delta_strt_dt :=  delta_file_strt_dt ('PART_B'); 
      
      truncate_table ('', 'FHIR_PTB_LD_CLM_STATUS_UPDT'); 
      
      l_tot_rows := 0; 
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_ptb_ld_clm_status_updt
        (clm_id,
         version,
         dml_ind,
         bene_id,
         finl_actn_id,
         ccw_ld_desc,
         JOB_LD_DT,
         proc_num, 
         clm_grp_id,
         dml_status,
         nch_clm_type_cd,
         clm_thru_dt)
        select /*+ parallel (16) */
         st.CLM_ID,
         g_version VERSION,
         'UPDATE' DML_IND,
         st.BENE_ID,
         hld.FINL_ACTN_ID,
         st.CCW_LD_DESC,
         NULL JOB_LD_DT,
         PROC_NUM,
         st.CLM_GRP_ID,
         'UPDC-UPD' DML_STATUS,
         st.NCH_CLM_TYPE_CD,
         st.CLM_THRU_DT
          FROM (select /*+ parallel(16) */ updt.*,
                       rank() over(PARTITION BY updt.clm_id ORDER BY updt.ccw_ld_desc desc) rank_num
                  from ccw_owner.fhir_ptb_clm_updt updt) hld,
               ccw_owner.fhir_ptb_ld_clm_status st
         WHERE st.clm_id = hld.clm_id
         and rank_num = 1
         AND st.finl_actn_id <> hld.finl_actn_id;
        
        l_tot_rows := SQL%ROWCOUNT; 
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtB (upd-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');  
        COMMIT; 
        
        l_tot_rows := SQL%ROWCOUNT;
        DELETE /*+ parallel (16) */
        FROM ccw_owner.fhir_ptb_ld_clm_status f 
         WHERE EXISTS (SELECT /*+ parallel (16) */
                 1
                  FROM ccw_owner.fhir_ptb_ld_clm_status_updt d
                 WHERE d.clm_id = f.clm_id);

        l_tot_rows := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - DelPtB (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows deleted');  
        COMMIT; 

        l_tot_rows := 0;
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptb_ld_clm_status
        (clm_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        nch_clm_type_cd, 
        clm_thru_dt
        )
        SELECT /*+ parallel (16) */
        clm_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        nch_clm_type_cd, 
        clm_thru_dt
        FROM ccw_owner.fhir_ptb_ld_clm_status_updt;
       
       l_tot_rows := SQL%ROWCOUNT; 
       g_tot_rows := g_tot_rows + l_tot_rows;       
 
       sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtB (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted'); 
       COMMIT; 

      l_tot_rows := 0;
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_ptb_ld_clm_status
        (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, version, clm_grp_id, dml_status, bene_id
           , nch_clm_type_cd, clm_thru_dt) 
        SELECT /*+ parallel (16) */
         DISTINCT hld.clm_id,
         'INSERT',
         hld.finl_actn_id,
         f.ccw_ld_desc,          
         g_version,
         pg.clm_grp_id
         , 'UPDC-INS'
         , f.bene_id
         , acp.nch_clm_type_cd          
         , f.clm_thru_dt                
          FROM (select /*+ parallel (16) */ updt.*,
                rank() over(PARTITION BY updt.clm_id ORDER BY updt.ccw_ld_desc desc) rank_num
                from ccw_owner.fhir_ptb_clm_updt updt) hld,
               ccw_owner.fhir_ptb_ld_clm_status st_b, 
               ccw_owner.ccw_ptb_fact        f,
               ccw_owner.fhir_bene_ld_status    fb,
               ccw_owner.fhir_ptb_clm_grp       pg,
               ccw_owner.ccw_all_clm_prfl       acp
         WHERE f.clm_thru_dt >= g_delta_strt_dt 
           AND rank_num = 1
           AND hld.clm_id = st_b.clm_id(+)
           AND st_b.clm_id IS NULL
           AND hld.clm_id = f.clm_id
           AND acp.clm_type_id = f.clm_type_id
           AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
           AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
           AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
           AND hld.finl_actn_id = 21
           AND hld.finl_actn_id = f.finl_actn_id      
           AND f.bene_id = fb.key;

      l_tot_rows := SQL%ROWCOUNT; 
      g_tot_rows := g_tot_rows + l_tot_rows;
            
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - Insert PtB (new stus-TAB) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');    
      COMMIT; 

     END IF; -- If p_run_ptb

    --------------------------------------------------------------
    -- Part D
    --------------------------------------------------------------
    IF p_run_ptd THEN
      ----------------------------------------------------------
      dbms_application_info.set_client_info('upd_claims () - PtD');
      g_delta_strt_dt :=  delta_file_strt_dt ('PART_D'); 

      truncate_table ('', 'FHIR_PTD_LD_CLM_STATUS_UPDT'); 
      l_tot_rows := 0;

      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_ptd_ld_clm_status_updt
        (pde_id,
         version,
         dml_ind,
         bene_id,
         finl_actn_id,
         ccw_ld_desc,
         JOB_LD_DT,
         proc_num, 
         clm_grp_id,
         dml_status,
         srvc_dt) 
        select /*+ parallel (16) */
         st.PDE_ID,
         g_version VERSION,
         'UPDATE' DML_IND,
         st.BENE_ID,
         hld.FINL_ACTN_ID,
         st.CCW_LD_DESC,
         NULL JOB_LD_DT,
         PROC_NUM,
         st.CLM_GRP_ID,
         'UPDC-UPD' DML_STATUS,
         st.SRVC_DT
          FROM (select /*+ parallel(16) */ updt.*,
                       rank() over(PARTITION BY updt.pde_id ORDER BY updt.ccw_ld_desc desc) rank_num
                  from ccw_owner.fhir_ptd_clm_updt updt) hld,
               ccw_owner.fhir_ptd_ld_clm_status st
         WHERE st.pde_id = hld.pde_id
         and rank_num = 1
         AND st.finl_actn_id <> hld.finl_actn_id;
       
        l_tot_rows := SQL%ROWCOUNT; 
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtD (upd-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');  
        COMMIT; 
        
        l_tot_rows := SQL%ROWCOUNT;

        DELETE /*+ parallel (16) */
        FROM ccw_owner.fhir_ptd_ld_clm_status f 
         WHERE EXISTS (SELECT /*+ parallel (16) */
                 1
                  FROM ccw_owner.fhir_ptd_ld_clm_status_updt d
                 WHERE d.pde_id = f.pde_id);

        l_tot_rows := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - DelPtD (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows deleted');  
        COMMIT; 

        l_tot_rows := 0;

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_ld_clm_status
        (pde_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        srvc_dt
        )
        SELECT /*+ parallel (16) */
        pde_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        job_ld_dt, 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        srvc_dt
        FROM ccw_owner.fhir_ptd_ld_clm_status_updt;

       
       l_tot_rows := SQL%ROWCOUNT; 
       g_tot_rows := g_tot_rows + l_tot_rows;       
 
       sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtD (stus-tab) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted'); 
       COMMIT;  

      l_tot_rows := 0;
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_ptd_ld_clm_status
        (pde_id, dml_ind, finl_actn_id, ccw_ld_desc, version, clm_grp_id, dml_status, bene_id
           , srvc_dt ) 
        SELECT /*+ parallel (16) */
         DISTINCT  hld.pde_id,
         'INSERT',
         hld.finl_actn_id,
         f.ccw_load_desc,
         g_version,
         pg.clm_grp_id
         , 'UPDC-INS'
         , f.bene_id
         , f.srvc_dt     
          FROM (select /*+ parallel (16) */ updt.*,
                  rank() over(PARTITION BY updt.pde_id ORDER BY updt.ccw_ld_desc desc) rank_num
                  from ccw_owner.fhir_ptd_clm_updt updt) hld, 
                  
               ccw_owner.fhir_ptd_ld_clm_status  st_d 
              , ccw_owner.ccw_pde_fact            f,
               ccw_owner.fhir_bene_ld_status     fb,
               ccw_owner.fhir_ptd_clm_grp        pg,
               ccw_owner.ccw_pde_srvc_prvdr_prfl prfl
         WHERE f.srvc_dt >= g_delta_strt_dt   
         AND rank_num = 1
         AND hld.pde_id = st_d.pde_id(+)
         AND hld.pde_id = f.pde_id
         AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID
         AND pg.rx_srvc_rfrnc_num  = f.rx_srvc_rfrnc_num
         AND pg.srvc_prvdr_id_qlfyr_cd = prfl.srvc_prvdr_id_qlfyr_cd
         AND pg.srvc_prvdr_id = prfl.srvc_prvdr_id
         AND pg.srvc_dt = f.srvc_dt
         AND hld.finl_actn_id = 21 
         AND f.bene_id = fb.key
         AND hld.finl_actn_id = f.finl_actn_id   
         AND st_d.pde_id IS NULL;


      l_tot_rows := SQL%ROWCOUNT;
      g_tot_rows := g_tot_rows + l_tot_rows;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updated_claims - InsPtD (new stus-TAB) finished: ' ||
                                                l_tot_rows ||
                                                ' rows inserted');

      COMMIT;
      
     END IF; -- If P_run_ptd THEN
    
    COMMIT;
    
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'updated_claims - finished.');

  END updated_claims;
  
  --------------------------------------------------------------------------------------

  PROCEDURE transfer_clm_bene_id_updates(p_run_pta IN BOOLEAN,
                                         p_run_ptb IN BOOLEAN,
                                         p_run_ptd IN BOOLEAN) IS

    l_max_creat_ts DATE;
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'transfer_clm_bene_id_updates - started');

    dbms_application_info.set_client_info('transfer_clm_bene_id_updates');

    IF p_run_pta OR p_run_ptb THEN

      SELECT /*+ parallel (16) */
       nvl(MAX(creat_ts), '01-JAN-1000')
        INTO l_max_creat_ts
        FROM ccw_owner.fhir_clm_bene_updt;

      INSERT /*+ append parallel (16) */
      INTO ccw_owner.fhir_clm_bene_updt
        SELECT /*+ parallel (16) */
         clm_id, nch_clm_type_cd, creat_ts, NULL
          FROM ccw_owner.ccw_clm_bene_updt updt
         WHERE updt.creat_ts > l_max_creat_ts
           AND updt.clm_id NOT IN
               (SELECT /*+ parallel (16) */
                 clm_id
                  FROM ccw_owner.fhir_clm_bene_updt fhir
                 WHERE fhir.clm_id = updt.clm_id);

      COMMIT;
    END IF;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'transfer_clm_bene_id_updates - finished');

  END transfer_clm_bene_id_updates;

  PROCEDURE clm_bene_id_updates(p_strt_dt   DATE,
                                p_end_dt    DATE,
                                p_part_num  VARCHAR2,
                                p_run_pta   BOOLEAN DEFAULT TRUE,
                                p_run_ptb   BOOLEAN DEFAULT TRUE,
                                p_run_ptd   BOOLEAN DEFAULT TRUE,
                                p_100_parts BOOLEAN DEFAULT FALSE) IS

    l_tot_rows NUMBER := 0;
    rc         NUMBER := 0;
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'clm_bene_id_updates - started');

    IF p_run_pta THEN
      dbms_application_info.set_client_info('clm_bene_id_updates  () - INS PtA');
      g_delta_strt_dt :=  delta_file_strt_dt ('PART_A'); 
      
      IF p_100_parts THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_ld_clm_status
          (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status
             , nch_clm_type_cd, clm_thru_dt)     
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id
           , g_version
           ,'CBIU-100-INS'
           ,acp.nch_clm_type_cd       
           ,f.clm_thru_dt             
            FROM ccw_owner.ccw_pta_fact        f,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.meta_prcsng_dtl        pd,
                 ccw_owner.fhir_pta_ld_clm_status pta ,
                 ccw_owner.fhir_pta_clm_grp         pg,
                 ccw_owner.ccw_prvdr_at_time_of_clm pr,
                 ccw_owner.ccw_all_clm_prfl         acp,
                 ccw_owner.fhir_clm_bene_updt upd
           WHERE f.clm_id = upd.clm_id 
             AND upd.process_ts IS NULL
             AND acp.nch_clm_type_cd = upd.nch_clm_type_cd
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id) - 1, 2) =
                 nvl(p_part_num,
                     substr(f.bene_id, length(f.bene_id) - 1, 2))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('10',
                                         '50',
                                         '60',
                                         '61',
                                         '62',
                                         '40',
                                         '41',
                                         '42',
                                         '20',
                                         '30')
             AND f.prvdr_at_time_of_clm_id = pr.prvdr_id 
             AND acp.clm_type_id = f.clm_type_id
             AND pg.prvdr_num(+) = pr.prvdr_num
             AND pg.clm_thru_dt(+) = f.clm_thru_dt
             AND pg.clm_from_dt(+) = f.clm_from_dt
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
             AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
             AND pta.clm_id(+) = f.clm_id
             AND pta.clm_id IS NULL;

        rc := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtA (100) rows: '||rc);

        l_tot_rows := l_tot_rows + rc;
      ELSE
        -- If (NOT) p_100_parts

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_ld_clm_status
          (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status
             , nch_clm_type_cd, clm_thru_dt) 
          SELECT /*+ parallel (16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id
           , g_version
           ,'CBIU-INS'
           ,acp.nch_clm_type_cd    
           ,f.clm_thru_dt 
            FROM ccw_owner.ccw_pta_fact        f,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.meta_prcsng_dtl        pd,
                 ccw_owner.fhir_pta_ld_clm_status pta ,
                 ccw_owner.fhir_pta_clm_grp         pg,
                 ccw_owner.ccw_prvdr_at_time_of_clm pr,
                 ccw_owner.ccw_all_clm_prfl         acp ,
                 ccw_owner.fhir_clm_bene_updt upd
           WHERE f.clm_id = upd.clm_id 
             AND upd.process_ts IS NULL
             AND acp.nch_clm_type_cd = upd.nch_clm_type_cd  
             AND f.bene_id = fb.key
             AND fa.finl_actn_id = f.finl_actn_id
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl(p_part_num, substr(f.bene_id, length(f.bene_id), 1))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt  
             AND acp.nch_clm_type_cd IN ('10',
                                         '50',
                                         '60',
                                         '61',
                                         '62',
                                         '40',
                                         '41',
                                         '42',
                                         '20',
                                         '30')
             AND f.prvdr_at_time_of_clm_id = pr.prvdr_id
             AND acp.clm_type_id = f.clm_type_id
             AND pg.prvdr_num(+) = pr.prvdr_num
             AND pg.clm_thru_dt(+) = f.clm_thru_dt
             AND pg.clm_from_dt(+) = f.clm_from_dt
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
             AND pta.clm_id(+) = f.clm_id
             AND pta.clm_id IS NULL;

        rc := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtA rows: '||rc);

        l_tot_rows := l_tot_rows + rc;
      END IF;

      COMMIT;

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_clm_bene_updt upd
         SET process_ts = SYSDATE
       WHERE (upd.clm_id, upd.nch_clm_type_cd)
          IN
             (SELECT /*+ parallel (16) */
               clm_id, nch_clm_type_cd
                FROM ccw_owner.fhir_pta_ld_clm_status)
         AND process_ts IS NULL;

      rc := SQL%ROWCOUNT;
      COMMIT;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - part A rows marked processed in updt table: '||rc);


    END IF; -- if p_run_pta
    --------------------------------------------------------------
    --------------------------------------------------------------

    IF p_run_ptb THEN
      dbms_application_info.set_client_info('clm_bene_id_updates  () - INS PtB');
      g_delta_strt_dt :=  delta_file_strt_dt ('PART_B'); 
      
      IF p_100_parts THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptb_ld_clm_status
          (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status
             , nch_clm_type_cd, clm_thru_dt) 
          SELECT /*+ parallel(16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id
           , g_version
           ,'CBIU-100-INS'
           ,acp.nch_clm_type_cd    
           ,f.clm_thru_dt      
            FROM ccw_owner.ccw_ptb_fact        f,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.fhir_ptb_ld_clm_status ptb,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.fhir_ptb_clm_grp pg,
                 ccw_owner.ccw_all_clm_prfl acp ,
                 ccw_owner.meta_prcsng_dtl    pd,
                 ccw_owner.fhir_clm_bene_updt upd
           WHERE f.clm_id = upd.clm_id 
           AND upd.process_ts IS NULL
             AND acp.nch_clm_type_cd = upd.nch_clm_type_cd 
             AND f.bene_id = fb.key
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id) - 1, 2) =
                 nvl(p_part_num,
                     substr(f.bene_id, length(f.bene_id) - 1, 2))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
             AND acp.clm_type_id = f.clm_type_id
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
             AND ptb.clm_id(+) = f.clm_id
             AND ptb.clm_id IS NULL;

        rc := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtB (100) rows: '||rc);

        l_tot_rows := l_tot_rows + rc;
      ELSE
        -- If (not) p_100_parts

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptb_ld_clm_status
          (clm_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status
             , nch_clm_type_cd, clm_thru_dt) 
          SELECT /*+ parallel(16) */
           f.clm_id,
           'INSERT',
           f.finl_actn_id,
           f.ccw_ld_desc,
           f.bene_id,
           pg.clm_grp_id
           , g_version
           ,'CBIU-INS'
           ,acp.nch_clm_type_cd   
           ,f.clm_thru_dt 
            FROM ccw_owner.ccw_ptb_fact        f,
                 ccw_owner.ccw_finl_actn_prfl     fa,
                 ccw_owner.fhir_ptb_ld_clm_status ptb,
                 ccw_owner.fhir_bene_ld_status    fb,
                 ccw_owner.fhir_ptb_clm_grp pg,
                 ccw_owner.ccw_all_clm_prfl acp,
                 ccw_owner.meta_prcsng_dtl    pd,
                 ccw_owner.fhir_clm_bene_updt upd
           WHERE f.clm_id = upd.clm_id 
             AND upd.process_ts IS NULL
             AND acp.nch_clm_type_cd = upd.nch_clm_type_cd
             AND f.bene_id = fb.key
             AND fa.finl_actn_cd = 'Y'
             AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                 nvl(p_end_dt, f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl(p_part_num, substr(f.bene_id, length(f.bene_id), 1))
             AND f.ccw_ld_desc = pd.prd_name
             AND pd.prd_type = 'CLAIMS'
             AND f.finl_actn_id = 21
             AND f.bene_id <> -1
             AND f.clm_thru_dt >= g_delta_strt_dt
             AND acp.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
             AND acp.clm_type_id = f.clm_type_id
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
             AND ptb.clm_id(+) = f.clm_id
             AND ptb.clm_id IS NULL; 

        rc := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtB rows: '||rc);

        l_tot_rows := l_tot_rows + rc;

      END IF;

      COMMIT;

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_clm_bene_updt upd
         SET process_ts = SYSDATE
       WHERE (upd.clm_id, upd.nch_clm_type_cd ) 
          IN
             (SELECT /*+ parallel (16) */
               clm_id, nch_clm_type_cd 
                FROM ccw_owner.fhir_ptb_ld_clm_status)
         AND process_ts IS NULL;  

      rc := SQL%ROWCOUNT;
      COMMIT;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - part B rows marked processed in updt table: '||rc);



    END IF; 
    --------------------------------------------------------------
    --------------------------------------------------------------

 -------------------------------------------------------------------------
-------------------------------------------------------------------------
        
    
    IF p_run_ptd THEN
      dbms_application_info.set_client_info('clm_bene_id_updates  () - INS PtD');
      g_delta_strt_dt := delta_file_strt_dt ('PART_D'); 

    
      IF p_100_parts THEN
         INSERT /*+ append parallel (16) */
          INTO ccw_owner.fhir_ptd_ld_clm_status
            (pde_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status, srvc_dt)
            SELECT /*+ parallel (16) */
             f.pde_id, 'INSERT', f.finl_actn_id, f.ccw_load_desc, f.bene_id, pg.clm_grp_id
               , g_version, 'CBIUD-100-INS', f.srvc_dt
              FROM ccw_owner.ccw_pde_fact f
                , ccw_owner.fhir_bene_ld_status        fb
                , ccw_owner.ccw_finl_actn_prfl fa
                , ccw_owner.meta_prcsng_dtl  pd
                , ccw_Owner.fhir_ptd_ld_clm_status ptd
                , ccw_owner.fhir_ptd_clm_grp  pg
                , ccw_owner.ccw_pde_srvc_prvdr_prfl prfl
                , ccw_owner.fhir_pde_bene_updt   upd        
             WHERE f.pde_id  = upd.pde_id
                   AND upd.process_ts IS NULL
                   AND f.bene_id = fb.key
                   AND fa.finl_actn_id = f.finl_actn_id
                   AND fa.finl_actn_cd = 'Y'
                   AND f.srvc_dt
                          BETWEEN NVL(p_strt_dt, f.srvc_dt)  AND NVL (p_end_dt, f.srvc_dt)
                   AND substr(f.bene_id, length(f.bene_id)-1, 2) =
                       nvl(p_part_num, substr(f.bene_id, length(f.bene_id)-1, 2))
                   AND f.ccw_load_desc = pd.prd_name
                   AND pd.prd_type = 'PDE'
                   AND f.finl_actn_id = 21
                   AND f.bene_id <> -1
                   AND f.srvc_dt >= g_delta_strt_dt
                   AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID
                   AND pg.rx_srvc_rfrnc_num 
                       = f.rx_srvc_rfrnc_num
                   AND pg.srvc_prvdr_id_qlfyr_cd 
                       = prfl.srvc_prvdr_id_qlfyr_cd
                   AND pg.srvc_prvdr_id
                       = prfl.srvc_prvdr_id
                   AND pg.srvc_dt 
                       = f.srvc_dt
                   AND ptd.pde_id (+) = f.pde_id
                   AND ptd.pde_id IS NULL;

        rc := SQL%ROWCOUNT;
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtD (100) rows: '||rc);

        l_tot_rows := l_tot_rows + rc;

    ELSE

      -- If (NOT) p_100_parts
      INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_ld_clm_status
             (pde_id, dml_ind, finl_actn_id, ccw_ld_desc, bene_id, clm_grp_id, version, dml_status, srvc_dt)
      SELECT /*+ parallel (16) */
             f.pde_id, 'INSERT', f.finl_actn_id, f.ccw_load_desc, f.bene_id, pg.clm_grp_id
               , g_version, 'CBIUD-INS', f.srvc_dt
              FROM ccw_owner.ccw_pde_fact f
                , ccw_owner.fhir_bene_ld_status        fb
                , ccw_owner.ccw_finl_actn_prfl fa
                , ccw_owner.meta_prcsng_dtl  pd
                , ccw_Owner.fhir_ptd_ld_clm_status ptd
                , ccw_owner.fhir_ptd_clm_grp  pg
                , ccw_owner.ccw_pde_srvc_prvdr_prfl prfl
                , ccw_owner.fhir_pde_bene_updt   upd 
             WHERE f.pde_id  = upd.pde_id    
                   AND upd.process_ts IS NULL
                   AND f.bene_id = fb.key
                   AND fa.finl_actn_id = f.finl_actn_id
                   AND fa.finl_actn_cd = 'Y'
                   AND f.srvc_dt BETWEEN NVL(p_strt_dt, f.srvc_dt)  AND NVL (p_end_dt, f.srvc_dt)
                   AND substr(f.bene_id, length(f.bene_id) , 1) =
                       nvl(p_part_num, substr(f.bene_id, length(f.bene_id) , 1))
                    AND f.ccw_load_desc = pd.prd_name
                   AND pd.prd_type = 'PDE'
                   AND f.finl_actn_id = 21
                   AND f.bene_id <> -1
                   AND f.srvc_dt >= g_delta_strt_dt
                   AND PRFL.PDE_SRVC_PRVDR_PRFL_ID = f.PDE_SRVC_PRVDR_PRFL_ID
                   AND pg.rx_srvc_rfrnc_num 
                     = f.rx_srvc_rfrnc_num 
                   AND pg.srvc_prvdr_id_qlfyr_cd 
                     = prfl.srvc_prvdr_id_qlfyr_cd 
                   AND pg.srvc_prvdr_id 
                     = prfl.srvc_prvdr_id 
                   AND pg.srvc_dt 
                     = f.srvc_dt 
                   AND ptd.pde_id (+) = f.pde_id
                   AND ptd.pde_id IS NULL;     

      rc := SQL%ROWCOUNT;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - INS PtD rows: '||rc);

      l_tot_rows := l_tot_rows + rc;
    END IF;

    COMMIT;

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_pde_bene_updt upd
         SET process_ts = SYSDATE
       WHERE upd.pde_id IN
             (SELECT /*+ parallel (16) */
               pde_id
                FROM ccw_owner.fhir_ptd_ld_clm_status)
         AND process_ts IS NULL;  

      rc := SQL%ROWCOUNT;
      COMMIT;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'clm_bene_id_updates  () - part D rows marked processed in updt table: '||rc);

    END IF;   -- If p_run_ptd


    g_tot_rows := g_tot_rows + l_tot_rows;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'clm_bene_id_updates - finished');

    COMMIT;
    --------------------------------------------------------------------------------------------------
  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'updated_claims () Error: ');


      RAISE;

  END clm_bene_id_updates;


  FUNCTION manifest_date(p_prd_run_type IN VARCHAR2,
                         p_grp_typ_nm   IN ccw_sprt.sprt_grp.grp_name%TYPE DEFAULT 'FHIR')
    RETURN VARCHAR2 IS
    l_prd_name   ccw_sprt.sprt_prd.prd_name%TYPE := NULL;
    l_grp_nm     ccw_sprt.sprt_grp.grp_name%TYPE;
    l_grp_typ_nm ccw_sprt.sprt_grp_type.grp_type_name%TYPE;
  BEGIN

    l_prd_name   := NULL;
    l_grp_typ_nm := p_grp_typ_nm;

    CASE p_prd_run_type
      WHEN 'INITIAL (100)' THEN
        l_grp_nm := 'FHIR LOAD INITIAL (100)';
      WHEN 'INITIAL (10)' THEN
        l_grp_nm := 'FHIR LOAD INITIAL (10)';
      WHEN 'INITIAL' THEN
        l_grp_nm := 'FHIR LOAD INITIAL';
      WHEN 'DELTA (100)' THEN
        l_grp_nm := 'FHIR LOAD CHANGES (100)';
      WHEN 'DELTA (10)' THEN
        l_grp_nm := 'FHIR LOAD CHANGES (10)';
      WHEN 'DELTA' THEN
        l_grp_nm := 'FHIR LOAD CHANGES';
      ELSE
        RAISE manifest_creat_err;
    END CASE;

    dbms_output.put_line('Calling latest_load_Desc: ' || l_grp_nm || ':' ||
                         l_grp_typ_nm);

    get_latest_load_desc(l_grp_typ_nm, l_grp_nm, l_prd_name);

    -- Converting from char to Date to char to make sure we have a date.
    l_prd_name := TO_CHAR(TO_DATE(SUBSTR(l_prd_name, 2), 'RRRRMMDD'),
                          'RRRR-MM-DD') || 'T12:00:00Z';

    RETURN l_prd_name;

  END manifest_date;

  PROCEDURE get_latest_load_desc(p_grp_type_nm    IN VARCHAR2,
                                 p_grp_nm         IN VARCHAR2,
                                 p_latest_ld_desc OUT VARCHAR2) IS
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    SELECT /*+ parallel (16) */
     prd_desc
      INTO p_latest_ld_desc
      FROM ccw_sprt.sprt_grp_prd gp, ccw_sprt.sprt_prd sp
     WHERE grp_id IN
           (SELECT /*+ parallel (16) */
             grp_id
              FROM ccw_sprt.sprt_grp g
             WHERE g.grp_name = p_grp_nm 
               AND grp_type_id =
                   (SELECT /*+ parallel (16) */
                     grp_type_id
                      FROM ccw_sprt.sprt_grp_type gt
                     WHERE gt.grp_type_name = p_grp_type_nm)) 
       AND gp.prd_id = sp.prd_id
       AND gp.crnt_sw = 'Y';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'Latest_Load_Desc found: ' ||
                                              p_latest_ld_desc ||
                                              ' in GrpType: ' ||
                                              p_grp_type_nm || ' - Group: ' ||
                                              p_grp_nm);

  END get_latest_load_desc;

  -- Create new clm_grp_id(s) as needed
  PROCEDURE create_clm_grp_id(p_strt_dt      IN DATE,
                              p_end_dt       IN DATE,
                              p_part_num     IN VARCHAR2,
                              pb_run_pta     IN VARCHAR2 DEFAULT 'FALSE', 
                              pb_run_ptb     IN VARCHAR2 DEFAULT 'FALSE',
                              pb_run_ptd     IN VARCHAR2 DEFAULT 'FALSE',
                              pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE',
                              pb_init_ld     IN VARCHAR2 DEFAULT 'TRUE') IS

    p_run_pta BOOLEAN;
    p_run_ptb BOOLEAN;
    p_run_ptd BOOLEAN;
    p_init_ld BOOLEAN;

    l_tot_rows NUMBER;

  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.CREATE_CLM_GRP_ID',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'create_clm_grp_id - (INIT LD: '||pb_init_ld||' started: ' ||
                                                pb_run_pta || ' ' ||
                                                pb_run_ptb || ' ' ||
                                                pb_run_ptd);

    END IF;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'create_clm_grp_id - (INIT LD: '||pb_init_ld||' started: ' ||
                                              pb_run_pta || ' ' ||
                                              pb_run_ptb || ' ' ||
                                              pb_run_ptd);

    l_tot_rows := 0;

    p_run_pta := truefalsetoboolean(pb_run_pta);
    p_run_ptb := truefalsetoboolean(pb_run_ptb);
    p_run_ptd := truefalsetoboolean(pb_run_ptd);
    p_init_ld := truefalsetoboolean(pb_init_ld);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';


    IF p_init_ld THEN

      IF p_run_pta THEN
        dbms_application_info.set_client_info('create_clm_grp_id - A');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part A (init) - started');

        truncate_table(NULL, 'fhir_pta_clm_grp'); 
        truncate_table(NULL, 'fhir_pta_ld_clm_status'); 

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_clm_grp
          (clm_grp_id,
           prvdr_num,
           clm_from_dt,
           clm_thru_dt,
           bene_clm_acnt_num,
           eqtbl_bic_cd,
           nch_clm_type_cd)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           g.prvdr_num,
           g.clm_from_dt,
           g.clm_thru_dt,
           g.bene_clm_acnt_num,
           g.eqtbl_bic_cd,
           g.nch_clm_type_cd
            FROM (SELECT /*+ parallel (16) */
                    pr.prvdr_num,
                    f.clm_from_dt,
                    f.clm_thru_dt,
                    f.bene_clm_acnt_num,
                    acp.eqtbl_bic_cd,
                    acp.nch_clm_type_cd
                     FROM ccw_owner.temp_fhir_pta_fact f,
                          ccw_owner.fhir_pta_clm_grp         pg,
                          ccw_owner.ccw_prvdr_at_time_of_clm pr,
                          ccw_owner.ccw_all_clm_prfl         acp,
                          ccw_owner.fhir_pta_ld_clm_status pta
                    WHERE f.prvdr_at_time_of_clm_id = pr.prvdr_id
                 AND acp.clm_type_id = f.clm_type_id
                 AND f.clm_id = pta.clm_id(+)
                 AND (pta.clm_id IS NULL 
                    OR pta.clm_grp_id IS NULL  )
                 AND pg.prvdr_num(+) = pr.prvdr_num
                 AND pg.clm_thru_dt(+) = f.clm_thru_dt
                 AND pg.clm_from_dt(+) = f.clm_from_dt
                 AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
                 AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
                 AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
                 AND pg.clm_grp_id IS NULL
                    GROUP BY pr.prvdr_num,
                             f.clm_from_dt,
                             f.clm_thru_dt,
                             f.bene_clm_acnt_num,
                             acp.eqtbl_bic_cd,
                             acp.nch_clm_type_cd) g;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

        COMMIT;
      END IF; -- if init pta

      IF p_run_ptb THEN

        dbms_application_info.set_client_info('create_clm_grp_id - B');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part B (init) - started');

        truncate_table(NULL, 'fhir_ptb_clm_grp'); -- start fresh on initial load
        truncate_table(NULL, 'fhir_ptb_ld_clm_status'); -- start fresh on initial load

        -- PtB
        INSERT /*+ append parallel (16)*/
        INTO ccw_owner.fhir_ptb_clm_grp
          (clm_grp_id, bene_clm_acnt_num, eqtbl_bic_cd, carr_clm_cntl_num)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           b.bene_clm_acnt_num,
           b.eqtbl_bic_cd,
           b.carr_clm_cntl_num
            FROM (SELECT /*+ parallel (16) */
                   t.bene_clm_acnt_num,
                   acp.eqtbl_bic_cd,
                   t.carr_clm_cntl_num
                    FROM ccw_owner.temp_fhir_ptb_fact     t,
                         ccw_owner.ccw_all_clm_prfl       acp,
                         ccw_owner.fhir_ptb_ld_clm_status ptb,
                         ccw_owner.fhir_ptb_clm_grp pg
                   WHERE t.clm_type_id = acp.clm_type_id
                     AND t.clm_id = ptb.clm_id(+)
                     AND (ptb.clm_id IS NULL
                         OR ptb.clm_grp_id IS NULL )
                     AND pg.bene_clm_acnt_num(+) = t.bene_clm_acnt_num
                     AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
                     AND pg.carr_clm_cntl_num(+) = t.carr_clm_cntl_num
                     AND pg.clm_grp_id IS NULL 
                     AND ptb.job_ld_dt IS NULL 
                     AND ptb.clm_grp_id IS NULL
                   GROUP BY t.bene_clm_acnt_num,
                            acp.eqtbl_bic_cd,
                            t.carr_clm_cntl_num) b;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

        COMMIT;
      END IF; -- if init ptb

      IF p_run_ptd THEN

        -- PtD  ---

        dbms_application_info.set_client_info('create_clm_grp_id - D');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part D (init) - started');

        truncate_table(NULL, 'fhir_ptd_clm_grp'); 
        truncate_table(NULL, 'fhir_ptd_ld_clm_status'); 

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_clm_grp
          (clm_grp_id,
           rx_srvc_rfrnc_num,
           srvc_prvdr_id_qlfyr_cd,
           srvc_prvdr_id,
           srvc_dt)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           d.rx_srvc_rfrnc_num,
           d.srvc_prvdr_id_qlfyr_cd,
           d.srvc_prvdr_id,
           d.srvc_dt
            FROM (SELECT /*+ parallel (16) */
                   t.rx_srvc_rfrnc_num,
                   prfl.srvc_prvdr_id_qlfyr_cd,
                   prfl.srvc_prvdr_id,
                   t.srvc_dt
                    FROM ccw_owner.ccw_pde_fact            t,
                         ccw_owner.ccw_pde_srvc_prvdr_prfl prfl,
                         ccw_owner.fhir_ptd_ld_clm_status  ptd,
                         ccw_owner.meta_prcsng_dtl         pd,
                         ccw_owner.fhir_ptd_clm_grp        pg
                   WHERE t.pde_srvc_prvdr_prfl_id =
                         prfl.pde_srvc_prvdr_prfl_id
                     AND t.pde_id = ptd.pde_id(+)
                     AND t.ccw_load_desc = pd.prd_name
                     AND pd.prd_type = 'PDE'
                     AND pd.prd_prcsng_ind = 'N'
                     AND t.finl_actn_id = 21
                     AND t.bene_id <> -1
                     AND t.srvc_dt > g_3_yr_dt
                     AND (ptd.pde_id IS NULL OR ptd.clm_grp_id IS NULL)
                     AND pg.rx_srvc_rfrnc_num(+) = t.rx_srvc_rfrnc_num
                     AND pg.srvc_prvdr_id_qlfyr_cd(+) =
                         prfl.srvc_prvdr_id_qlfyr_cd
                     AND pg.srvc_prvdr_id(+) = prfl.srvc_prvdr_id
                     AND pg.srvc_dt(+) = t.srvc_dt
                     AND pg.clm_grp_id IS NULL
                     AND ptd.job_ld_dt IS NULL 
                     AND ptd.clm_grp_id IS NULL
                   GROUP BY t.rx_srvc_rfrnc_num,
                            prfl.srvc_prvdr_id_qlfyr_cd,
                            prfl.srvc_prvdr_id,
                            t.srvc_dt) d;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;
        COMMIT;

      END IF; -- if init ptd

    ELSE
      -- Delta run

      IF p_run_pta THEN
        dbms_application_info.set_client_info('create_clm_grp_id - A');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part A (delta) - started');
        g_delta_strt_dt :=  delta_file_strt_dt ('PART_A'); 

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_pta_clm_grp
          (clm_grp_id,
           prvdr_num,
           clm_from_dt,
           clm_thru_dt,
           bene_clm_acnt_num,
           eqtbl_bic_cd,
           nch_clm_type_cd)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           g.prvdr_num,
           g.clm_from_dt,
           g.clm_thru_dt,
           g.bene_clm_acnt_num,
           g.eqtbl_bic_cd,
           g.nch_clm_type_cd
            FROM (SELECT /*+ parallel (16) */
                   pr.prvdr_num,
                   f.clm_from_dt,
                   f.clm_thru_dt,
                   f.bene_clm_acnt_num,
                   acp.eqtbl_bic_cd,
                   acp.nch_clm_type_cd
                    FROM ccw_owner.ccw_pta_fact          f,
                         ccw_owner.fhir_pta_clm_grp         pg,
                         ccw_owner.ccw_prvdr_at_time_of_clm pr,
                         ccw_owner.ccw_all_clm_prfl         acp,
                         ccw_owner.meta_prcsng_dtl          pd,
                         ccw_owner.fhir_pta_ld_clm_status   pta
                   WHERE f.ccw_ld_desc = pd.prd_name
                     AND f.clm_thru_dt BETWEEN nvl(p_strt_dt, f.clm_thru_dt) AND
                         nvl(p_end_dt, f.clm_thru_dt)
                     AND substr(f.bene_id, length(f.bene_id), 1) =
                         nvl(p_part_num,
                             substr(f.bene_id, length(f.bene_id), 1))
                     AND f.ccw_ld_desc = pd.prd_name
                     AND pd.prd_type = 'CLAIMS'
                     AND f.bene_id <> -1
                     AND f.prvdr_at_time_of_clm_id = pr.prvdr_id
                     AND acp.clm_type_id = f.clm_type_id
                     AND f.clm_id = pta.clm_id(+)
                     AND (pta.clm_id IS NULL 
                         OR 
                         pta.clm_grp_id IS NULL 
                         )
                     AND pg.prvdr_num(+) = pr.prvdr_num
                     AND pg.clm_thru_dt(+) = f.clm_thru_dt
                     AND pg.clm_from_dt(+) = f.clm_from_dt
                     AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
                     AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
                     AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
                     AND pg.clm_grp_id IS NULL
                   GROUP BY pr.prvdr_num,
                            f.clm_from_dt,
                            f.clm_thru_dt,
                            f.bene_clm_acnt_num ,
                            acp.eqtbl_bic_cd ,
                            acp.nch_clm_type_cd) g;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

        COMMIT;
      END IF; -- if delta pta

      IF p_run_ptb THEN

        dbms_application_info.set_client_info('create_clm_grp_id - B');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part B (delta) - started');

        g_delta_strt_dt := delta_file_strt_dt ('PART_B'); 
        -- PtB
        INSERT /*+ append parallel (16)*/
        INTO ccw_owner.fhir_ptb_clm_grp
          (clm_grp_id, bene_clm_acnt_num, eqtbl_bic_cd, carr_clm_cntl_num)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           b.bene_clm_acnt_num,
           b.eqtbl_bic_cd,
           b.carr_clm_cntl_num
            FROM (SELECT /*+ parallel (16) */
                   t.bene_clm_acnt_num,
                   acp.eqtbl_bic_cd,
                   t.carr_clm_cntl_num
                    FROM ccw_owner.ccw_ptb_fact        t,
                         ccw_owner.ccw_all_clm_prfl       acp,
                         ccw_owner.fhir_ptb_ld_clm_status ptb,
                         ccw_owner.fhir_ptb_clm_grp       pg,
                         ccw_owner.meta_prcsng_dtl        pd
                   WHERE t.ccw_ld_desc = pd.prd_name
                     AND t.clm_type_id = acp.clm_type_id
                     AND t.clm_id = ptb.clm_id(+)
                     AND (ptb.clm_id IS NULL -- Records not in PTB OR ...
                         OR 
                         ptb.clm_grp_id IS NULL )
                     AND t.ccw_ld_desc = pd.prd_name
                     AND pd.prd_type = 'CLAIMS'
                     AND t.bene_id <> -1
                     AND pg.bene_clm_acnt_num(+) = t.bene_clm_acnt_num
                     AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
                     AND pg.carr_clm_cntl_num(+) = t.carr_clm_cntl_num
                     AND pg.clm_grp_id IS NULL
                     AND ptb.job_ld_dt IS NULL 
                     AND ptb.clm_grp_id IS NULL 
                   GROUP BY t.bene_clm_acnt_num,
                            acp.eqtbl_bic_cd,
                            t.carr_clm_cntl_num) b;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;

        COMMIT;
      END IF; -- if delta ptb

      IF p_run_ptd THEN

        -- PtD  ---

        dbms_application_info.set_client_info('create_clm_grp_id - D');
        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'part D (delta) - started');
        g_delta_strt_dt :=  delta_file_strt_dt ('PART_D');
         
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_ptd_clm_grp
          (clm_grp_id,
           rx_srvc_rfrnc_num,
           srvc_prvdr_id_qlfyr_cd,
           srvc_prvdr_id,
           srvc_dt)
          SELECT /*+ parallel (16) */
           ccw_owner.fhir_clm_grp_seq_pta.nextval,
           d.rx_srvc_rfrnc_num,
           d.srvc_prvdr_id_qlfyr_cd,
           d.srvc_prvdr_id,
           d.srvc_dt
            FROM (SELECT /*+ parallel (16) */
                   t.rx_srvc_rfrnc_num,
                   prfl.srvc_prvdr_id_qlfyr_cd,
                   prfl.srvc_prvdr_id,
                   t.srvc_dt
                    FROM ccw_owner.ccw_pde_fact            t,
                         ccw_owner.ccw_pde_srvc_prvdr_prfl prfl,
                         ccw_owner.fhir_ptd_ld_clm_status  ptd,
                         ccw_owner.fhir_ptd_clm_grp        pg,
                         ccw_owner.meta_prcsng_dtl         pd
                   WHERE t.pde_srvc_prvdr_prfl_id =
                         prfl.pde_srvc_prvdr_prfl_id
                     AND t.pde_id = ptd.pde_id(+)
                     AND t.ccw_load_desc = pd.prd_name
                     AND pd.prd_type = 'PDE'
                     AND t.bene_id <> -1
                     AND t.ccw_load_desc = pd.prd_name
                     AND (ptd.pde_id IS NULL OR ptd.clm_grp_id IS NULL)
                     AND pg.rx_srvc_rfrnc_num(+) = t.rx_srvc_rfrnc_num
                     AND pg.srvc_prvdr_id_qlfyr_cd(+) =
                         prfl.srvc_prvdr_id_qlfyr_cd
                     AND pg.srvc_prvdr_id(+) = prfl.srvc_prvdr_id
                     AND pg.srvc_dt(+) = t.srvc_dt
                     AND pg.clm_grp_id IS NULL
                     AND ptd.job_ld_dt IS NULL 
                     AND ptd.clm_grp_id IS NULL
                   GROUP BY t.rx_srvc_rfrnc_num,
                            prfl.srvc_prvdr_id_qlfyr_cd,
                            prfl.srvc_prvdr_id,
                            t.srvc_dt) d;

        l_tot_rows := l_tot_rows + SQL%ROWCOUNT;
        COMMIT;

      END IF; -- if delta ptd
    END IF; -- else delta load;

    COMMIT;

    dbms_application_info.set_client_info('create_clm_grp_id - end');

    g_tot_rows := g_tot_rows + l_tot_rows;

    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => l_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'create_clm_grp_id - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Create_Clm_grp_id Error: ');
      RAISE;
  END create_clm_grp_id;


  PROCEDURE extract_bene(p_part_num     VARCHAR2 DEFAULT NULL,
                         pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                         pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                         pb_bene_fltr   VARCHAR2 DEFAULT 'FALSE', 
                         pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                         pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                        ,pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_bene_fltr   BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_BENE',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bene - started');

    END IF;

    g_tot_rows := 0;

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_bene_fltr   := truefalsetoboolean(pb_bene_fltr);
    p_output_data := truefalsetoboolean(pb_output_data);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('extract_bene ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'bene' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      --Passing null because bene table is not currently partitioned
      truncate_table(p_part_num, 'temp_fhir_bene');
      -- must reset the bene_hold table as well on INIT
      truncate_table(p_part_num, 'fhir_bene_ld_status');

      -- 3.9 - populate: g_max_bene_enrlmt_rfrnc_yr
      SELECT /*+ parallel (16) */
       MAX(y.bene_enrlmt_rfrnc_yr)
        INTO g_max_bene_enrlmt_rfrnc_yr
        FROM ccw_owner.ccw_bene_data_smry y;

      --If we are taking a subset of the benes we will use the benes provided in the filter file
      --to limit what is being extracted to fhir.
      IF p_bene_fltr THEN

        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'extract_bene - IF fltr');

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_fhir_bene
          SELECT /*+ parallel (16) */
           orig_bene_id key,
           bene_id,
           NULL AS combo_field, -- 3.7
           version,
           dml_ind,
           REPLACE(REPLACE(REPLACE(bene_state_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_cnty_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_mlg_cntct_zip_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_birth_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_sex_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_race_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(orgnl_rsn_for_entlmt_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(crnt_rsn_for_entlmt_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(esrd_ind, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(mdcr_stus_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(pta_trmntn_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptb_trmntn_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_crnt_hic_num, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_srnm_name, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_gvn_name, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_mdl_name, '^'), '~'), '01-JAN-1000'),
           bene_part_num
            FROM (SELECT /*+ parallel (16) */
                   g_version version,
                   'INSERT' dml_ind,
                   t.bene_id,
                   t.bene_state_cd, -- 3.11
                   t.bene_cnty_cd, -- 3.11
                   bene_mlg_cntct_zip_cd,
                   bene_birth_dt,
                   bene_sex_ident_cd,
                   bene_race_cd,
                   s.orgnl_rsn_for_entlmt_cd,
                   s.crnt_rsn_for_entlmt_cd,
                   s.esrd_ind,
                   s.mdcr_stus_cd,
                   s.pta_trmntn_cd,
                   s.ptb_trmntn_cd,
                   t.bene_crnt_hic_num,
                   bene_srnm_name,
                   bene_gvn_name,
                   t.bene_mdl_name,
                   t.bene_id                 orig_bene_id,
                   substr(t.bene_id, length(t.bene_id), 1) bene_part_num
                    FROM ccw_owner.hdn_bene_crnt t
                   INNER JOIN ccw_owner.temp_fhir_bene_fltr fltr
                      ON t.bene_crnt_hic_num = fltr.bene_crnt_hic_num
                    LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                                     f.bene_id,
                                     m.pta_trmntn_cd,
                                     m.ptb_trmntn_cd,
                                     m.mdcr_stus_cd,
                                     m.esrd_ind,
                                     c.crnt_rsn_for_entlmt_cd,
                                     c.orgnl_rsn_for_entlmt_cd
                                      FROM ccw_owner.ccw_bene_data_smry f,
                                           ccw_owner.meta_mdcr_cvrg     m,
                                           ccw_owner.meta_cvrg_and_srvc c
                                     WHERE m.meta_mdcr_cvrg_id =
                                           f.meta_mdcr_cvrg_id
                                       AND c.meta_cvrg_and_srvc_id =
                                           f.meta_cvrg_and_srvc_id
                                       AND f.bene_enrlmt_rfrnc_yr =
                                           g_max_bene_enrlmt_rfrnc_yr 
                                    ) s
                      ON (t.bene_id = s.bene_id)
                   WHERE bene_death_dt >= '01-jan-2016'
                      OR bene_death_dt = '01-jan-0001')
           WHERE substr(bene_id, length(bene_id), 1) =
                 nvl(p_part_num, substr(bene_id, length(bene_id), 1));

        g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      ELSE
        IF p_100_parts THEN

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'extract_bene - IF 100pts');

          INSERT /*+ append parallel (16) */
          INTO ccw_owner.temp_fhir_bene
            SELECT /*+ parallel (16) */
             orig_bene_id key,
             bene_id,
             NULL AS combo_field, 
             version,
             dml_ind,
             REPLACE(REPLACE(REPLACE(bene_state_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_cnty_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_mlg_cntct_zip_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_birth_dt, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_sex_ident_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_race_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(orgnl_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(crnt_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(esrd_ind, '^'), '~'), '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(mdcr_stus_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(pta_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(ptb_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_crnt_hic_num, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_srnm_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_gvn_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_mdl_name, '^'), '~'),
                     '01-JAN-1000'),
             bene_part_num
              FROM (SELECT /*+ parallel (16) */
                     g_version version,
                     'INSERT' dml_ind,
                     t.bene_id,
                     t.bene_state_cd,
                     t.bene_cnty_cd,
                     bene_mlg_cntct_zip_cd,
                     bene_birth_dt,
                     bene_sex_ident_cd,
                     bene_race_cd,
                     s.orgnl_rsn_for_entlmt_cd,
                     s.crnt_rsn_for_entlmt_cd,
                     s.esrd_ind,
                     s.mdcr_stus_cd,
                     s.pta_trmntn_cd,
                     s.ptb_trmntn_cd,
                     bene_crnt_hic_num,
                     bene_srnm_name,
                     bene_gvn_name,
                     t.bene_mdl_name,
                     t.bene_id                 orig_bene_id,
                     substr(t.bene_id, length(t.bene_id) - 1, 2) bene_part_num
                      FROM ccw_owner.hdn_bene_crnt t
                      LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                                       f.bene_id,
                                       m.pta_trmntn_cd,
                                       m.ptb_trmntn_cd,
                                       m.mdcr_stus_cd,
                                       m.esrd_ind,
                                       c.crnt_rsn_for_entlmt_cd,
                                       c.orgnl_rsn_for_entlmt_cd
                                        FROM ccw_owner.ccw_bene_data_smry f,
                                             ccw_owner.meta_mdcr_cvrg     m,
                                             ccw_owner.meta_cvrg_and_srvc c
                                       WHERE m.meta_mdcr_cvrg_id =
                                             f.meta_mdcr_cvrg_id
                                         AND c.meta_cvrg_and_srvc_id =
                                             f.meta_cvrg_and_srvc_id
                                         AND f.bene_enrlmt_rfrnc_yr =
                                             g_max_bene_enrlmt_rfrnc_yr
                                      ) s
                        ON (t.bene_id = s.bene_id)
                     WHERE bene_death_dt >= '01-jan-2016'  
                        OR bene_death_dt = '01-jan-0001')
             WHERE substr(bene_id, length(bene_id) - 1, 2) =
                   nvl(p_part_num, substr(bene_id, length(bene_id) - 1, 2));

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

        ELSE

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'extract_bene - IF ELSE (NOT 100pts)');

          INSERT /*+ append parallel (16) */
          INTO ccw_owner.temp_fhir_bene
            SELECT /*+ parallel (16) */
             orig_bene_id key,
             bene_id,
             NULL AS combo_field, 
             version,
             dml_ind,
             REPLACE(REPLACE(REPLACE(bene_state_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_cnty_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_mlg_cntct_zip_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_birth_dt, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_sex_ident_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_race_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(orgnl_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(crnt_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(esrd_ind, '^'), '~'), '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(mdcr_stus_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(pta_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(ptb_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_crnt_hic_num, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_srnm_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_gvn_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(bene_mdl_name, '^'), '~'),
                     '01-JAN-1000'),
             bene_part_num
              FROM (SELECT /*+ parallel (16) */
                     g_version version,
                     'INSERT' dml_ind,
                     t.bene_id,
                     t.bene_state_cd, 
                     t.bene_cnty_cd, 
                     bene_mlg_cntct_zip_cd,
                     bene_birth_dt,
                     bene_sex_ident_cd,
                     bene_race_cd,
                     s.orgnl_rsn_for_entlmt_cd,
                     s.crnt_rsn_for_entlmt_cd,
                     s.esrd_ind,
                     s.mdcr_stus_cd,
                     s.pta_trmntn_cd,
                     s.ptb_trmntn_cd,
                     bene_crnt_hic_num,
                     bene_srnm_name,
                     bene_gvn_name,
                     t.bene_mdl_name,
                     t.bene_id                 orig_bene_id,
                     substr(t.bene_id, length(t.bene_id), 1) bene_part_num
                      FROM ccw_owner.hdn_bene_crnt t
                      LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                                       f.bene_id,
                                       m.pta_trmntn_cd,
                                       m.ptb_trmntn_cd,
                                       m.mdcr_stus_cd,
                                       m.esrd_ind,
                                       c.crnt_rsn_for_entlmt_cd,
                                       c.orgnl_rsn_for_entlmt_cd
                                        FROM ccw_owner.ccw_bene_data_smry f,
                                             ccw_owner.meta_mdcr_cvrg     m,
                                             ccw_owner.meta_cvrg_and_srvc c
                                       WHERE m.meta_mdcr_cvrg_id =
                                             f.meta_mdcr_cvrg_id
                                         AND c.meta_cvrg_and_srvc_id =
                                             f.meta_cvrg_and_srvc_id
                                         AND f.bene_enrlmt_rfrnc_yr =
                                             g_max_bene_enrlmt_rfrnc_yr
                                      ) s
                        ON (t.bene_id = s.bene_id)
                     WHERE bene_death_dt >= '01-jan-2016' 
                        OR bene_death_dt = '01-jan-0001')
             WHERE substr(bene_id, length(bene_id), 1) =
                   nvl(p_part_num, substr(bene_id, length(bene_id), 1));

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

        END IF;
      END IF;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_BENE',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_FHIR_BENE',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'extract_bene_changes - analyze error');
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'partition ' ||
                                                    p_part_num || ': ' ||
                                                    g_errm);

          RAISE cannot_annlz_tbl;
        END IF;
      END IF;

    END IF;

    COMMIT;

    IF p_output_data THEN

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'opening bene file for "' ||
                                                p_part_num ||
                                                '" p_part_name');

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'BENEFICIARY'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5  ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      FOR bene_rec IN (SELECT /*+ parallel(16) */
                        dml_ind || '|' ||  
                        bene_id || '|' ||
                        bene_state_cd || '|' || bene_cnty_cd || '|' ||
                        bene_mlg_cntct_zip_cd || '|' || bene_birth_dt || '|' ||
                        bene_sex_ident_cd || '|' || bene_race_cd || '|' ||
                        orgnl_rsn_for_entlmt_cd || '|' ||
                        crnt_rsn_for_entlmt_cd || '|' || esrd_ind || '|' ||
                        mdcr_stus_cd || '|' || pta_trmntn_cd || '|' ||
                        ptb_trmntn_cd || '|' || bene_crnt_hic_num || '|' ||
                        bene_srnm_name || '|' || bene_gvn_name || '|' ||
                        bene_mdl_name AS COMBO_FIELD
                         FROM ccw_owner.temp_fhir_bene f
                        WHERE bene_part_num = nvl(p_part_num, bene_part_num)
                        ORDER BY f.version, bene_id) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_bene_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for bene file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; -- 3.10
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

    update_file_version(p_new_version);

    --Add file to manifest list

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'BENE');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bene - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Bene Error: ');
      RAISE;

  END extract_bene;

  PROCEDURE extract_bene_changes(p_strt_dt      DATE,
                                 p_end_dt       DATE,
                                 p_prcsg_dt     DATE,
                                 p_part_num     VARCHAR2,
                                 p_load_data    BOOLEAN DEFAULT FALSE,
                                 p_bene_fltr    BOOLEAN DEFAULT TRUE,
                                 p_100_parts    BOOLEAN DEFAULT FALSE,
                                 p_new_version  BOOLEAN DEFAULT FALSE,
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_extrct_only       BOOLEAN;
    l_tot_rows          NUMBER;
    l_old_bene_info_cnt NUMBER := 0;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_BENE_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bene_changes - started');
    END IF;

    l_tot_rows := 0;

    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    dbms_application_info.set_client_info('extract_bene_changes ()');

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'bene_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN

      -- (3.9) If there is no count on ccw_owner.fhir_bene_ld_status, then the temp_fhir_bene_data should be saved to
      -- ccw_owner.fhir_bene_ld_status for comparison with the new delta data being inserted below.
      SELECT /*+ PARALLEL (16) */
       COUNT(*)
        INTO l_old_bene_info_cnt
        FROM ccw_owner.fhir_bene_ld_status;

      IF l_old_bene_info_cnt = 0 THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.fhir_bene_ld_status
          SELECT /*+ parallel (16) */
           key,
           bene_id,
           combo_field,
           version,
           dml_ind,
           bene_state_cd,
           bene_cnty_cd,
           bene_mlg_cntct_zip_cd,
           bene_birth_dt,
           bene_sex_ident_cd,
           bene_race_cd,
           orgnl_rsn_for_entlmt_cd,
           crnt_rsn_for_entlmt_cd,
           esrd_ind,
           mdcr_stus_cd,
           pta_trmntn_cd,
           ptb_trmntn_cd,
           bene_crnt_hic_num,
           bene_srnm_name,
           bene_gvn_name,
           bene_mdl_name
            FROM ccw_owner.temp_fhir_bene;

        COMMIT;
      END IF;

      --Truncates appropriate subpartitions for the table
      --Passing null because bene table is not currently partitioned
      truncate_table(p_part_num, 'temp_fhir_bene');

      -- 3.9 - populate: g_max_bene_enrlmt_rfrnc_yr
      SELECT /*+ parallel (16) */
       MAX(y.bene_enrlmt_rfrnc_yr)
        INTO g_max_bene_enrlmt_rfrnc_yr
        FROM ccw_owner.ccw_bene_data_smry y;

      --If we are taking a subset of the benes we will use the benes provided in the filter file
      --to limit what is being extracted to fhir.
      IF p_bene_fltr THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_fhir_bene
          SELECT /*+ parallel (16) */
           orig_bene_id key,
           x.bene_id,
           NULL AS combo_field, 
           x.version,
           x.true_dml_ind,  
           REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                   '01-JAN-1000'),
           bene_part_num
            FROM
         ( SELECT DECODE (o.bene_id, '', 'INSERT', 'UPDATE') true_dml_ind, x.* FROM  
            (SELECT /*+ parallel (16) */
                   g_version version,
                   'INSERT' dml_ind,
                   t.bene_id,
                   t.bene_state_cd, 
                   t.bene_cnty_cd,
                   bene_mlg_cntct_zip_cd,
                   bene_birth_dt,
                   bene_sex_ident_cd,
                   bene_race_cd,
                   s.orgnl_rsn_for_entlmt_cd,
                   s.crnt_rsn_for_entlmt_cd,
                   s.esrd_ind,
                   s.mdcr_stus_cd,
                   s.pta_trmntn_cd,
                   s.ptb_trmntn_cd,
                   t.bene_crnt_hic_num,
                   bene_srnm_name,
                   bene_gvn_name,
                   t.bene_mdl_name,
                   t.bene_id                 orig_bene_id,
                   substr(t.bene_id, length(t.bene_id), 1) bene_part_num
                   , FHIR.BENE_ID fhir_bene_id  
                    FROM ccw_owner.hdn_bene_crnt t
                     LEFT OUTER JOIN 
                       (SELECT /*+ parallel (16) */ bene_id FROM ccw_owner.fhir_bene_ld_status ) fhir 
                     ON (t.bene_id = fhir.bene_id)                   
                   INNER JOIN ccw_owner.temp_fhir_bene_fltr fltr 
                      ON t.bene_crnt_hic_num = fltr.bene_crnt_hic_num
                        LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                        f.bene_id,
                        m.pta_trmntn_cd,
                        m.ptb_trmntn_cd,
                        m.mdcr_stus_cd,
                        m.esrd_ind,
                        c.crnt_rsn_for_entlmt_cd,
                        c.orgnl_rsn_for_entlmt_cd
                        FROM ccw_owner.ccw_bene_data_smry f,
                        ccw_owner.meta_mdcr_cvrg m,
                        ccw_owner.meta_cvrg_and_srvc c,
                        (SELECT /*+ parallel (16) */ bene_id, MAX(y.bene_enrlmt_rfrnc_yr) bene_enrlmt_rfrnc_yr 
                        FROM ccw_owner.ccw_bene_data_smry y
                        WHERE y.bene_enrlmt_rfrnc_yr <= g_max_bene_enrlmt_rfrnc_yr
                        group by bene_id) yy
                        WHERE f.bene_id = yy.bene_id
                        AND f.bene_enrlmt_rfrnc_yr = yy.bene_enrlmt_rfrnc_yr
                        AND m.meta_mdcr_cvrg_id =
                        f.meta_mdcr_cvrg_id
                        AND c.meta_cvrg_and_srvc_id =
                        f.meta_cvrg_and_srvc_id
                        ) s
	                      ON (t.bene_id = s.bene_id)
                   WHERE (  
                        (bene_death_dt >= g_min_act_death_dt OR
                           bene_death_dt = g_no_act_death_dt)
                        OR fhir.bene_id IS NOT NULL 
                         )
                  ) x
            LEFT OUTER JOIN ccw_owner.fhir_bene_ld_status o
              ON (x.bene_id = o.bene_id)
           WHERE substr(x.bene_id, length(x.bene_id), 1) =
                 nvl(p_part_num, substr(x.bene_id, length(x.bene_id), 1))
             AND ( nvl(REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_state_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_cnty_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_mlg_cntct_zip_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                              '01-JAN-1000'),
                      '01-JAN-1000') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_birth_dt, '^'), '~'),
                              '01-JAN-1000'),
                      '01-JAN-1000') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_sex_ident_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_race_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd,
                                              '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.orgnl_rsn_for_entlmt_cd,
                                                           '^'),
                                                   '~'),
                                           '01-JAN-1000'),
                                   'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.crnt_rsn_for_entlmt_cd, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.esrd_ind, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.mdcr_stus_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.pta_trmntn_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.ptb_trmntn_cd, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_crnt_hic_num, '^'),
                                      '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_srnm_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_gvn_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') OR
                  nvl(REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA') <>
                  nvl(REPLACE(REPLACE(REPLACE(o.bene_mdl_name, '^'), '~'),
                              '01-JAN-1000'),
                      'NA'))
                   ) x ;    

        l_tot_rows := SQL%ROWCOUNT;

        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'INSERT INTO temp_fhir_bene(1), rc: ' ||
                                                  l_tot_rows);

        g_tot_rows := g_tot_rows + l_tot_rows;

      ELSE
        IF p_100_parts THEN
          INSERT /*+ append parallel (16) */
          INTO ccw_owner.temp_fhir_bene
            SELECT /*+ parallel (16) */
             orig_bene_id key,
             x.bene_id,
             NULL AS combo_field, 
             x.version,
             x.true_dml_ind,  
             REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'), '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                     '01-JAN-1000'),
             bene_part_num
              FROM
          ( SELECT DECODE (o.bene_id, '', 'INSERT', 'UPDATE') true_dml_ind, x.* FROM 
               (SELECT /*+ parallel (16) */
                     g_version version,
                     'INSERT' dml_ind,
                     t.bene_id,
                     t.bene_state_cd, 
                     t.bene_cnty_cd, 
                     bene_mlg_cntct_zip_cd,
                     bene_birth_dt,
                     bene_sex_ident_cd,
                     bene_race_cd,
                     s.orgnl_rsn_for_entlmt_cd,
                     s.crnt_rsn_for_entlmt_cd,
                     s.esrd_ind,
                     s.mdcr_stus_cd,
                     s.pta_trmntn_cd,
                     s.ptb_trmntn_cd,
                     t.bene_crnt_hic_num,
                     bene_srnm_name,
                     bene_gvn_name,
                     t.bene_mdl_name,
                     t.bene_id                 orig_bene_id,
                     substr(t.bene_id, length(t.bene_id) - 1, 2) bene_part_num
                   , FHIR.BENE_ID fhir_bene_id  
                      FROM ccw_owner.hdn_bene_crnt t
                     LEFT OUTER JOIN 
                       (SELECT /*+ parallel (16) */ bene_id FROM ccw_owner.fhir_bene_ld_status ) fhir 
                     ON (t.bene_id = fhir.bene_id)                   
                              LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                              f.bene_id,
                              m.pta_trmntn_cd,
                              m.ptb_trmntn_cd,
                              m.mdcr_stus_cd,
                              m.esrd_ind,
                              c.crnt_rsn_for_entlmt_cd,
                              c.orgnl_rsn_for_entlmt_cd
                              FROM ccw_owner.ccw_bene_data_smry f,
                              ccw_owner.meta_mdcr_cvrg m,
                              ccw_owner.meta_cvrg_and_srvc c,
                              (SELECT /*+ parallel (16) */ bene_id, MAX(y.bene_enrlmt_rfrnc_yr) bene_enrlmt_rfrnc_yr-- 3.9
                              FROM ccw_owner.ccw_bene_data_smry y
                              WHERE y.bene_enrlmt_rfrnc_yr <= g_max_bene_enrlmt_rfrnc_yr
                              group by bene_id) yy
                              WHERE f.bene_id = yy.bene_id
                              AND f.bene_enrlmt_rfrnc_yr = yy.bene_enrlmt_rfrnc_yr
                              AND m.meta_mdcr_cvrg_id =
                              f.meta_mdcr_cvrg_id
                              AND c.meta_cvrg_and_srvc_id =
                              f.meta_cvrg_and_srvc_id
                              ) s
                        ON (t.bene_id = s.bene_id)
                     WHERE (   
                        (bene_death_dt >= g_min_act_death_dt OR
                           bene_death_dt = g_no_act_death_dt)
                        OR fhir.bene_id IS NOT NULL   )
                    ) x
              LEFT OUTER JOIN ccw_owner.fhir_bene_ld_status o
                ON (x.bene_id = o.bene_id)
             WHERE substr(x.bene_id, length(x.bene_id) - 1, 2) =
                   nvl(p_part_num,
                       substr(x.bene_id, length(x.bene_id) - 1, 2))
               AND (nvl(REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_state_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_cnty_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.bene_mlg_cntct_zip_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                                '01-JAN-1000'),
                        '01-JAN-1000') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_birth_dt, '^'), '~'),
                                '01-JAN-1000'),
                        '01-JAN-1000') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_sex_ident_cd, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_race_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.orgnl_rsn_for_entlmt_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.crnt_rsn_for_entlmt_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.esrd_ind, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.mdcr_stus_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.pta_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.ptb_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_crnt_hic_num, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_srnm_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_gvn_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_mdl_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA'))
                    ) x ;     

          l_tot_rows := SQL%ROWCOUNT;

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'INSERT INTO temp_fhir_bene(2), rc: ' ||
                                                    l_tot_rows);

          g_tot_rows := g_tot_rows + l_tot_rows;

        ELSE

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'INSERT INTO temp_fhir_bene(3) '); 

          INSERT /*+ append parallel (16) */
          INTO ccw_owner.temp_fhir_bene
            SELECT /*+ parallel (16) */
             orig_bene_id key,
             x.bene_id,
             NULL AS combo_field, 
             x.version,
             x.true_dml_ind,   
             REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'), '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                     '01-JAN-1000'),
             REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                     '01-JAN-1000'),
             bene_part_num
              FROM
         ( SELECT DECODE (o.bene_id, '', 'INSERT', 'UPDATE') true_dml_ind, x.* FROM  
              (SELECT /*+ parallel (16) */
                     g_version version,
                     'INSERT' dml_ind,
                     t.bene_id,
                     t.bene_state_cd, 
                     t.bene_cnty_cd, 
                     bene_mlg_cntct_zip_cd,
                     bene_birth_dt,
                     bene_sex_ident_cd,
                     bene_race_cd,
                     s.orgnl_rsn_for_entlmt_cd,
                     s.crnt_rsn_for_entlmt_cd,
                     s.esrd_ind,
                     s.mdcr_stus_cd,
                     s.pta_trmntn_cd,
                     s.ptb_trmntn_cd,
                     t.bene_crnt_hic_num,
                     bene_srnm_name,
                     bene_gvn_name,
                     t.bene_mdl_name,
                     t.bene_id                 orig_bene_id,
                     substr(t.bene_id, length(t.bene_id), 1) bene_part_num
                   , FHIR.BENE_ID fhir_bene_id  
                      FROM ccw_owner.hdn_bene_crnt t
                     LEFT OUTER JOIN 
                       (SELECT /*+ parallel (16) */ bene_id FROM ccw_owner.fhir_bene_ld_status ) fhir 
                     ON (t.bene_id = fhir.bene_id)                   
                              LEFT OUTER JOIN (SELECT /*+ parallel (16) */
                              f.bene_id,
                              m.pta_trmntn_cd,
                              m.ptb_trmntn_cd,
                              m.mdcr_stus_cd,
                              m.esrd_ind,
                              c.crnt_rsn_for_entlmt_cd,
                              c.orgnl_rsn_for_entlmt_cd
                              FROM ccw_owner.ccw_bene_data_smry f,
                              ccw_owner.meta_mdcr_cvrg m,
                              ccw_owner.meta_cvrg_and_srvc c,
                              (SELECT /*+ parallel (16) */ bene_id, MAX(y.bene_enrlmt_rfrnc_yr) bene_enrlmt_rfrnc_yr -- 3.9
                              FROM ccw_owner.ccw_bene_data_smry y
                              WHERE y.bene_enrlmt_rfrnc_yr <= g_max_bene_enrlmt_rfrnc_yr
                              group by bene_id) yy
                              WHERE f.bene_id = yy.bene_id
                              AND f.bene_enrlmt_rfrnc_yr = yy.bene_enrlmt_rfrnc_yr
                              AND m.meta_mdcr_cvrg_id =
                              f.meta_mdcr_cvrg_id
                              AND c.meta_cvrg_and_srvc_id =
                              f.meta_cvrg_and_srvc_id
                              ) s
                        ON (t.bene_id = s.bene_id)
                     WHERE (  
                        (bene_death_dt >= g_min_act_death_dt OR
                           bene_death_dt = g_no_act_death_dt)
                         
                        OR fhir.bene_id IS NOT NULL )
                    ) x
              LEFT OUTER JOIN ccw_owner.fhir_bene_ld_status o
                ON (x.bene_id = o.bene_id)
             WHERE substr(x.bene_id, length(x.bene_id), 1) =
                   nvl(p_part_num, substr(x.bene_id, length(x.bene_id), 1))
               AND ( nvl(REPLACE(REPLACE(REPLACE(x.bene_state_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_state_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_cnty_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_cnty_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_mlg_cntct_zip_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.bene_mlg_cntct_zip_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_birth_dt, '^'), '~'),
                                '01-JAN-1000'),
                        '01-JAN-1000') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_birth_dt, '^'), '~'),
                                '01-JAN-1000'),
                        '01-JAN-1000') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_sex_ident_cd, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_sex_ident_cd, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_race_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_race_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.orgnl_rsn_for_entlmt_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.orgnl_rsn_for_entlmt_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.crnt_rsn_for_entlmt_cd,
                                                '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <> nvl(REPLACE(REPLACE(REPLACE(o.crnt_rsn_for_entlmt_cd,
                                                             '^'),
                                                     '~'),
                                             '01-JAN-1000'),
                                     'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.esrd_ind, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.esrd_ind, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.mdcr_stus_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.mdcr_stus_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.pta_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.pta_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.ptb_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.ptb_trmntn_cd, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_crnt_hic_num, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_crnt_hic_num, '^'),
                                        '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_srnm_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_srnm_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_gvn_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_gvn_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') OR
                    nvl(REPLACE(REPLACE(REPLACE(x.bene_mdl_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA') <>
                    nvl(REPLACE(REPLACE(REPLACE(o.bene_mdl_name, '^'), '~'),
                                '01-JAN-1000'),
                        'NA'))
                        ) x ;  

          l_tot_rows := SQL%ROWCOUNT;

          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'INSERT INTO temp_fhir_bene(3), rc: ' ||
                                                    l_tot_rows);

          g_tot_rows := g_tot_rows + l_tot_rows;

        END IF;  
      END IF; 


    END IF;  

    COMMIT;

    -- ccw_owner.temp_fhir_bene has been populated with records that have changed from existing
    -- bene records in ccw_owner.fhir_bene_ld_status, update ccw_owner.fhir_bene_ld_status with
    -- with changed record data from temp_table.

    UPDATE /*+ parallel (16) */ ccw_owner.fhir_bene_ld_status
       SET dml_ind = '' 
     WHERE dml_ind IS NOT NULL;

    COMMIT;

    l_tot_rows := SQL%ROWCOUNT;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'UPDATing fhir_bene_LD_status with changes, rc: ' ||
                                              l_tot_rows);

    g_tot_rows := g_tot_rows + l_tot_rows;


    DELETE /*+ PARALLEL (16) */ FROM ccw_owner.fhir_bene_ld_status bene_perm
     WHERE bene_perm.bene_id IN ( SELECT /*+ PARALLEL (16) */ bene_id
                                    FROM ccw_owner.temp_fhir_bene new_bene
                                   WHERE new_bene.dml_ind = 'UPDATE' );
    l_tot_rows := SQL%ROWCOUNT;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'updating(delete old) fhir_bene_LD_status with changes, rc: ' ||
                                              l_tot_rows);

    g_tot_rows := g_tot_rows + l_tot_rows;


    COMMIT;

    -- Insert the "new" records into the status table.
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_bene_ld_status o
      SELECT /*+ parallel (16) */
       n.key,
       n.bene_id,
       n.combo_field,
       n.version,
       n.dml_ind,
       n.bene_state_cd,
       n.bene_cnty_cd,
       n.bene_mlg_cntct_zip_cd,
       n.bene_birth_dt,
       n.bene_sex_ident_cd,
       n.bene_race_cd,
       n.orgnl_rsn_for_entlmt_cd,
       n.crnt_rsn_for_entlmt_cd,
       n.esrd_ind,
       n.mdcr_stus_cd,
       n.pta_trmntn_cd,
       n.ptb_trmntn_cd,
       n.bene_crnt_hic_num,
       n.bene_srnm_name,
       n.bene_gvn_name,
       n.bene_mdl_name
        FROM ccw_owner.temp_fhir_bene n
      -- 3.12 - dont insert rows that are already in ccw_owner.fhir_bene_ld_status
       WHERE NOT EXISTS (SELECT /*+ parallel (16) */
               z.bene_id
                FROM ccw_owner.fhir_bene_ld_status z
               WHERE z.bene_id = n.bene_id);


    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'INSERT INTO fhir_bene_LD_status, rc: ' ||
                                              SQL%ROWCOUNT);

    COMMIT;


    IF g_output_data THEN
      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'BENEFICIARY'
                         AND column_name NOT IN ( SELECT 'VERSION' FROM DUAL
                                                   WHERE g_version > 5 ) -- 3.17
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;


      FOR bene_rec IN (SELECT /*+ parallel(16) */
                         dml_ind || '|' ||  
                         bene_id || '|' ||
                         bene_state_cd || '|' || bene_cnty_cd || '|' ||
                         bene_mlg_cntct_zip_cd || '|' || bene_birth_dt || '|' ||
                         bene_sex_ident_cd || '|' || bene_race_cd || '|' ||
                         orgnl_rsn_for_entlmt_cd || '|' ||
                         crnt_rsn_for_entlmt_cd || '|' || esrd_ind || '|' ||
                         mdcr_stus_cd || '|' || pta_trmntn_cd || '|' ||
                         ptb_trmntn_cd || '|' || bene_crnt_hic_num || '|' ||
                         bene_srnm_name || '|' || bene_gvn_name || '|' ||
                         bene_mdl_name 
                         AS combo_field
                         FROM ccw_owner.fhir_bene_ld_status f
                        WHERE f.dml_ind IS NOT NULL
                        ORDER BY f.version, bene_id) LOOP
        -- 3.10 check pipe_cnt
        IF REGEXP_COUNT(bene_rec.combo_field, '\|') = g_bene_pipe_cnt THEN
          utl_file.put_line(g_file, bene_rec.combo_field);
        ELSE
          -- log record info - not being sent to output file.
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Invalid pipe_count for bene file (' ||
                                                    p_part_num || ') ' || ' ' ||
                                                    SUBSTR(bene_rec.combo_field,
                                                           1,
                                                           4000));
        END IF; 
      END LOOP;

      utl_file.fclose(g_file);
    END IF; 

    update_file_version(p_new_version);

    --Create manifest file
    create_manifest_file('DELTA', p_part_num, 'BENE');

    --Add file to manifest list
    update_manifest_file(g_utl_file);

    --Add closing tag to the manifest file
    utl_file.put_line(g_manifest_file, '</dataSetManifest>');
    --Close the manifest file
    utl_file.fclose(g_manifest_file);

    --Create .done file to indicate to the file transfer script on the server
    --that the current file is ready to transfer
    create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

    IF p_extrct_only THEN

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bene_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Bene_Changes Error: ');
      RAISE;
  END extract_bene_changes;

  PROCEDURE insert_temp_bcarrier_by_part(pi_part_name     VARCHAR2,
                                         pi_bene_part_num NUMBER) IS
  BEGIN

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_bc_by_part: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num);

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_bcarrier partition (' ||
                      pi_part_name || ')
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_entry_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_disp_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_pmt_dnl_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_rfrng_pin_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, ''^''), ''~''),
                   ''01-JAN-1000''), --***** Line Level Values
           REPLACE(REPLACE(REPLACE(l.line_num, ''^''), ''~''), ''01-JAN-1000''), --l.clm_thru_dt ,
           REPLACE(REPLACE(REPLACE(l.carr_prfrng_pin_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prf_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prf_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.carr_line_prvdr_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.tax_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prvdr_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prvdr_zip, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prvdr_spclty, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prtcptng_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_rdcd_pmt_phys_astn_c, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_srvc_cnt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_cms_type_srvc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_place_of_srvc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_prcng_lclty_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_1st_expns_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_last_expns_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(betos_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_nch_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_ptb_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_coinsrnc_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_sbmtd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_alowd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_prcsg_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_pmt_80_100_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_service_deductible, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_mtus_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_mtus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hpsa_scrcty_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_rx_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_rslt_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_ndc_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_clia_lab_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_line_ansthsa_unit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                   ccw_ptb_fact.bene_id,
                   ccw_ptb_fact.clm_id,
                   pcg.clm_grp_id,
                   ccw_ptb_fact.run_dt,
                   ccw_ptb_fact.nch_near_line_rec_ident_cd,
                   ccw_ptb_fact.nch_clm_type_cd,
                   ccw_ptb_fact.clm_from_dt,
                   ccw_ptb_fact.clm_thru_dt,
                   ccw_ptb_fact.nch_wkly_prcsg_dt AS nch_wkly_proc_dt,
                   ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                   ccw_carr_dme_clm_prfl.clm_disp_cd,
                   ccw_ptb_fact.carr_num,
                   ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                   ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                   ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                   ccw_phys_at_time_of_clm.physn_upin AS rfr_physn_upin,
                   ccw_phys_at_time_of_clm.physn_npi AS rfr_physn_npi,
                   ccw_ptb_fact.carr_clm_rfrg_pin_num AS carr_clm_rfrng_pin_num,
                   ccw_ptb_fact.clm_pymt_amt AS clm_pmt_amt,
                   ccw_ptb_fact.clm_prmry_pyr_pd_amt AS carr_clm_prmry_pyr_pd_amt,
                   ccw_ptb_fact.clm_prvdr_pymt_amt AS nch_clm_prvdr_pmt_amt,
                   ccw_ptb_fact.clm_bene_pymt_amt AS nch_clm_bene_pmt_amt,
                   ccw_ptb_fact.clm_sbmtd_chrg_amt AS nch_carr_clm_sbmtd_chrg_amt,
                   ccw_ptb_fact.clm_alowd_amt AS nch_carr_clm_alowd_amt,
                   ccw_ptb_fact.clm_cash_ddctbl_apld_amt AS carr_clm_cash_ddctbl_apld_amt,
                   ccw_ptb_fact.prncpal_dgns_cd prncpal_dgns_cd,
                   ccw_ptb_fact.prncpal_dgns_vrsn_cd prncpal_dgns_vrsn_cd,
                   ccw_ptb_fact.dgns_1_cd AS icd_dgns_cd1,
                   ccw_ptb_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                   ccw_ptb_fact.dgns_2_cd AS icd_dgns_cd2,
                   ccw_ptb_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                   ccw_ptb_fact.dgns_3_cd AS icd_dgns_cd3,
                   ccw_ptb_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                   ccw_ptb_fact.dgns_4_cd AS icd_dgns_cd4,
                   ccw_ptb_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                   ccw_ptb_fact.dgns_5_cd AS icd_dgns_cd5,
                   ccw_ptb_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                   ccw_ptb_fact.dgns_6_cd AS icd_dgns_cd6,
                   ccw_ptb_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                   ccw_ptb_fact.dgns_7_cd AS icd_dgns_cd7,
                   ccw_ptb_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                   ccw_ptb_fact.dgns_8_cd AS icd_dgns_cd8,
                   ccw_ptb_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                   ccw_ptb_fact.dgns_9_cd AS icd_dgns_cd9,
                   ccw_ptb_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                   ccw_ptb_fact.dgns_10_cd AS icd_dgns_cd10,
                   ccw_ptb_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                   ccw_ptb_fact.dgns_11_cd AS icd_dgns_cd11,
                   ccw_ptb_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                   ccw_ptb_fact.dgns_12_cd AS icd_dgns_cd12,
                   ccw_ptb_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                   ccw_ptb_fact.clm_clncl_tril_num,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                   ccw_geo_prfl.bene_cnty_cd,
                   ccw_geo_prfl.bene_state_cd,
                   ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                   ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                   ccw_ptb_fact.bene_part_num
                   ,ccw_ptb_fact.finl_actn_id
                    FROM ccw_owner.temp_fhir_ptb_fact ccw_ptb_fact,
                            ccw_owner.ccw_all_clm_prfl,
                         ccw_owner.ccw_carr_dme_clm_prfl,
                         ccw_owner.ccw_phys_at_time_of_clm,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.ccw_geo_prfl
                        ,ccw_owner.fhir_ptb_clm_grp pcg
                   WHERE ccw_ptb_fact.othr_flds_clm_id =
                   ccw_carr_dme_clm_prfl.othr_flds_clm_id
                   AND ccw_ptb_fact.rfrg_ordrg_physn_id =
                   ccw_phys_at_time_of_clm.physn_id
                   AND ccw_ptb_fact.all_clm_dmgrphc_id =
                   ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                   AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                   AND ccw_ptb_fact.nch_clm_type_cd IN (''71'', ''72'', ''73'')
                     AND pcg.bene_clm_acnt_num  = ccw_ptb_fact.bene_clm_acnt_num
                     AND ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                     AND pcg.eqtbl_bic_cd  = ccw_all_clm_prfl.eqtbl_bic_cd
                     AND pcg.carr_clm_cntl_num  = ccw_ptb_fact.carr_clm_cntl_num
                   AND ccw_ptb_fact.bene_part_num =
                   nvl(' || pi_bene_part_num ||
                      ', ccw_ptb_fact.bene_part_num)
                  ) b,
                 (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                   ccw_ptb_line_fact.bene_id,
                   ccw_ptb_line_fact.clm_id,
                   ccw_ptb_line_fact.line_num,
                   ccw_ptb_line_fact.nch_clm_type_cd,
                   ccw_ptb_line_fact.clm_thru_dt,
                   ccw_ptb_line_fact.nch_wkly_proc_dt,
                   ccw_ptb_line_fact.carr_prfrng_pin_num,
                   ccw_phys_at_time_of_clm.physn_upin AS prf_physn_upin,
                   ccw_phys_at_time_of_clm.physn_npi AS prf_physn_npi,
                   ccw_phys_at_time_of_clm.prfmng_grp_npi_num AS org_npi_num,
                   ccw_carr_prfl.carr_line_prvdr_type_cd,
                   ccw_prvdr_at_time_of_clm.tax_num,
                   ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                   ccw_prvdr_at_time_of_clm.prvdr_zip,
                   ccw_prvdr_at_time_of_clm.prvdr_spclty,
                   ccw_prvdr_at_time_of_clm.prtcptng_ind_cd,
                   ccw_carr_prfl.carr_line_rdcd_pmt_phys_astn_c,
                   ccw_ptb_line_fact.line_srvc_cnt,
                   ccw_carr_dme_prfl.line_cms_type_srvc_cd,
                   ccw_carr_dme_prfl.line_place_of_srvc_cd,
                   ccw_carr_prfl.carr_line_prcng_lclty_cd,
                   ccw_ptb_line_fact.line_1st_expns_dt line_1st_expns_dt,
                   ccw_ptb_line_fact.line_last_expns_dt line_last_expns_dt,
                   ccw_hcpcs_cd.hcpcs_cd hcpcs_cd,
                   ccw_mdfr_prfl.hcpcs_1st_mdfr_cd hcpcs_1st_mdfr_cd,
                   ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd hcpcs_2nd_mdfr_cd,
                   ccw_hcpcs_cd.betos_cd betos_cd,
                   ccw_ptb_line_fact.line_nch_pmt_amt line_nch_pmt_amt,
                   ccw_ptb_line_fact.line_bene_pmt_amt line_bene_pmt_amt,
                   ccw_ptb_line_fact.line_prvdr_pmt_amt line_prvdr_pmt_amt,
                   ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt line_bene_ptb_ddctbl_amt,
                   ccw_carr_dme_prfl.line_bene_prmry_pyr_cd line_bene_prmry_pyr_cd,
                   ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt line_bene_prmry_pyr_pd_amt,
                   ccw_ptb_line_fact.line_coinsrnc_amt line_coinsrnc_amt,
                   ccw_ptb_line_fact.line_sbmtd_chrg_amt line_sbmtd_chrg_amt,
                   ccw_ptb_line_fact.line_alowd_chrg_amt line_alowd_chrg_amt,
                   ccw_carr_dme_prfl.line_prcsg_ind_cd line_prcsg_ind_cd,
                   ccw_carr_dme_prfl.line_pmt_80_100_cd line_pmt_80_100_cd,
                   ccw_carr_dme_prfl.line_service_deductible_ AS line_service_deductible,
                   ccw_ptb_line_fact.carr_line_mtus_cnt carr_line_mtus_cnt,
                   ccw_carr_prfl.carr_line_mtus_cd carr_line_mtus_cd,
                   ccw_carr_prfl.carr_line_hpsa_scrcty_ind_cd AS hpsa_scrcty_ind_cd,
                   ccw_ptb_line_fact.carr_line_rx_num carr_line_rx_num,
                   ccw_ptb_line_fact.line_dgns_cd AS line_icd_dgns_cd,
                   ccw_ptb_line_fact.line_dgns_vrsn_cd AS line_icd_dgns_vrsn_cd,
                   ccw_ptb_line_fact.line_hct_hgb_rslt_num line_hct_hgb_rslt_num,
                   ccw_ptb_line_fact.line_hct_hgb_type_cd line_hct_hgb_type_cd,
                   ccw_ptb_line_fact.ndc_cd AS line_ndc_cd,
                   ccw_ptb_line_fact.carr_line_clia_lab_num carr_line_clia_lab_num,
                   ccw_ptb_line_fact.carr_line_ansthsa_unit_cnt carr_line_ansthsa_unit_cnt,
                   ccw_ptb_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                    FROM ccw_owner.temp_fhir_ptb_line_fact ccw_ptb_line_fact,
                         ccw_owner.ccw_carr_dme_prfl,
                         ccw_owner.ccw_carr_prfl,
                         ccw_owner.ccw_hcpcs_cd,
                         ccw_owner.ccw_mdfr_prfl,
                         ccw_owner.ccw_phys_at_time_of_clm,
                         ccw_owner.ccw_prvdr_at_time_of_clm
                   WHERE ccw_ptb_line_fact.othr_fld_clms_dtl_id =
                   ccw_carr_dme_prfl.othr_fld_clms_dtl_id
                   AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
                   AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                   AND ccw_ptb_line_fact.mdfr_prfl_id =
                   ccw_mdfr_prfl.mdfr_prfl_id
                   AND ccw_ptb_line_fact.carr_line_prfrmng =
                   ccw_phys_at_time_of_clm.physn_id
                   AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
                   ccw_prvdr_at_time_of_clm.prvdr_id
                   AND
                   ccw_ptb_line_fact.nch_clm_type_cd IN (''71'', ''72'', ''73'')
                   AND ccw_ptb_line_fact.bene_part_num =
                   nvl(' || pi_bene_part_num ||
                      ', ccw_ptb_line_fact.bene_part_num)
                  ) l
           WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_bcarrier_by_part;

  PROCEDURE extract_bcarrier(p_part_num     VARCHAR2,
                             pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                             pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                             pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                             pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                             pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                           , pb_output_data VARCHAR2 DEFAULT 'TRUE') AS
    PRAGMA AUTONOMOUS_TRANSACTION;

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_BCARRIER',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bcarrier - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    dbms_application_info.set_client_info('extract_bcarrier ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'bcarrier' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_bcarrier');

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_BCARRIER',
                                   pi_value      => p_part_num);
      --insert by partition
      insert_temp_bcarrier_by_part(pi_part_name     => g_part_name,
                                   pi_bene_part_num => p_part_num);

      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_BCARRIER',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_BCARRIER',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
    END IF;

    -- Moving output file writing to a common procedure, so delta bcarrier can use as well.
    output_bcarrier_file(p_part_num, pb_output_data);

    COMMIT;

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'BCARRIER');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bcarrier - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_BCarrier Error: ');
      RAISE;

  END extract_bcarrier;

  PROCEDURE insert_bcarrier_delta_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_bcarrier PARTITION (' ||
                      pi_part_name || ')
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         b.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_entry_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_disp_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_pmt_dnl_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rfr_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rfr_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_rfrng_pin_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, ''^''), ''~''),
                 ''01-JAN-1000''), --***** Line Level Values
         REPLACE(REPLACE(REPLACE(l.line_num, ''^''), ''~''), ''01-JAN-1000''), --l.clm_thru_dt ,
         REPLACE(REPLACE(REPLACE(l.carr_prfrng_pin_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prf_physn_upin, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prf_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.carr_line_prvdr_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.tax_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prvdr_state_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prvdr_zip, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prvdr_spclty, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prtcptng_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_rdcd_pmt_phys_astn_c, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_srvc_cnt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_cms_type_srvc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_place_of_srvc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_prcng_lclty_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_1st_expns_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_last_expns_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(betos_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_nch_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_prvdr_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_ptb_ddctbl_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_coinsrnc_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_sbmtd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_alowd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_prcsg_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_pmt_80_100_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_service_deductible, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_mtus_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_mtus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_icd_dgns_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_icd_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hpsa_scrcty_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_rx_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_hct_hgb_rslt_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_hct_hgb_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_ndc_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_clia_lab_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_line_ansthsa_unit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         b.bene_part_num
         ,b.finl_actn_id
          FROM (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                  ptb.dml_ind,   
                  ccw_ptb_fact.bene_id,
                  ccw_ptb_fact.clm_id,
                  ccw_ptb_fact.run_dt,
                  -- ccw_ptb_fact.nch_near_line_rec_ident_cd,
                  ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                  -- ccw_ptb_fact.nch_clm_type_cd,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_ptb_fact.clm_from_dt,
                  ccw_ptb_fact.clm_thru_dt,
                  ccw_ptb_fact.nch_wkly_prcsg_dt                 AS nch_wkly_proc_dt,
                  ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                  ccw_carr_dme_clm_prfl.clm_disp_cd,
                  ccw_ptb_fact.carr_num,
                  ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                  ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                  ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                  ccw_phys_at_time_of_clm.physn_upin             AS rfr_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi              AS rfr_physn_npi,
                  ccw_ptb_fact.carr_clm_rfrg_pin_num             AS carr_clm_rfrng_pin_num,
                  ccw_ptb_fact.clm_pymt_amt                      AS clm_pmt_amt,
                  ccw_ptb_fact.clm_prmry_pyr_pd_amt              AS carr_clm_prmry_pyr_pd_amt,
                  ccw_ptb_fact.clm_prvdr_pymt_amt                AS nch_clm_prvdr_pmt_amt,
                  ccw_ptb_fact.clm_bene_pymt_amt                 AS nch_clm_bene_pmt_amt,
                  ccw_ptb_fact.clm_sbmtd_chrg_amt                AS nch_carr_clm_sbmtd_chrg_amt,
                  ccw_ptb_fact.clm_alowd_amt                     AS nch_carr_clm_alowd_amt,
                  ccw_ptb_fact.clm_cash_ddctbl_apld_amt          AS carr_clm_cash_ddctbl_apld_amt,
                  ccw_ptb_fact.prncpal_dgns_cd                   prncpal_dgns_cd,
                  ccw_ptb_fact.prncpal_dgns_vrsn_cd              prncpal_dgns_vrsn_cd,
                  ccw_ptb_fact.dgns_1_cd                         AS icd_dgns_cd1,
                  ccw_ptb_fact.dgns_1_vrsn_cd                    AS icd_dgns_vrsn_cd1,
                  ccw_ptb_fact.dgns_2_cd                         AS icd_dgns_cd2,
                  ccw_ptb_fact.dgns_2_vrsn_cd                    AS icd_dgns_vrsn_cd2,
                  ccw_ptb_fact.dgns_3_cd                         AS icd_dgns_cd3,
                  ccw_ptb_fact.dgns_3_vrsn_cd                    AS icd_dgns_vrsn_cd3,
                  ccw_ptb_fact.dgns_4_cd                         AS icd_dgns_cd4,
                  ccw_ptb_fact.dgns_4_vrsn_cd                    AS icd_dgns_vrsn_cd4,
                  ccw_ptb_fact.dgns_5_cd                         AS icd_dgns_cd5,
                  ccw_ptb_fact.dgns_5_vrsn_cd                    AS icd_dgns_vrsn_cd5,
                  ccw_ptb_fact.dgns_6_cd                         AS icd_dgns_cd6,
                  ccw_ptb_fact.dgns_6_vrsn_cd                    AS icd_dgns_vrsn_cd6,
                  ccw_ptb_fact.dgns_7_cd                         AS icd_dgns_cd7,
                  ccw_ptb_fact.dgns_7_vrsn_cd                    AS icd_dgns_vrsn_cd7,
                  ccw_ptb_fact.dgns_8_cd                         AS icd_dgns_cd8,
                  ccw_ptb_fact.dgns_8_vrsn_cd                    AS icd_dgns_vrsn_cd8,
                  ccw_ptb_fact.dgns_9_cd                         AS icd_dgns_cd9,
                  ccw_ptb_fact.dgns_9_vrsn_cd                    AS icd_dgns_vrsn_cd9,
                  ccw_ptb_fact.dgns_10_cd                        AS icd_dgns_cd10,
                  ccw_ptb_fact.dgns_10_vrsn_cd                   AS icd_dgns_vrsn_cd10,
                  ccw_ptb_fact.dgns_11_cd                        AS icd_dgns_cd11,
                  ccw_ptb_fact.dgns_11_vrsn_cd                   AS icd_dgns_vrsn_cd11,
                  ccw_ptb_fact.dgns_12_cd                        AS icd_dgns_cd12,
                  ccw_ptb_fact.dgns_12_vrsn_cd                   AS icd_dgns_vrsn_cd12,
                  ccw_ptb_fact.clm_clncl_tril_num,
                  ccw_all_clm_dmgrphc_prfl.dob_dt,
                  ccw_all_clm_dmgrphc_prfl.gndr_cd,
                  ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                  ccw_geo_prfl.bene_cnty_cd,
                  ccw_geo_prfl.bene_state_cd,
                  ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                  ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                  substr(ccw_ptb_fact.bene_id,
                         length(ccw_ptb_fact.bene_id) - 1,
                         2) bene_part_num,
                  ptb.clm_grp_id 
                  , ptb.finl_actn_id 
                   FROM ccw_owner.ccw_ptb_fact ccw_ptb_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_carr_dme_clm_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm,
                        ccw_owner.ccw_all_clm_dmgrphc_prfl,
                        ccw_owner.ccw_geo_prfl,
                        ccw_owner.fhir_ptb_ld_clm_status ptb
                  WHERE ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
               AND ccw_ptb_fact.othr_flds_clm_id =
                  ccw_carr_dme_clm_prfl.othr_flds_clm_id
               AND ccw_ptb_fact.rfrg_ordrg_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_ptb_fact.all_clm_dmgrphc_id =
                  ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
               AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
               AND substr(ptb.bene_id,
                         length(ptb.bene_id) -1 ,
                         2) = nvl(' ||
                      pi_bene_part_num || ' ,
                                  substr(ptb.bene_id,
                                         length(ptb.bene_id) - 1,
                                         2))
               AND ccw_ptb_fact.clm_id = ptb.clm_id
               AND ptb.job_ld_dt IS NULL
               AND ptb.clm_grp_id IS NOT NULL
               AND ccw_ptb_fact.clm_thru_dt = ptb.clm_thru_dt
               AND ccw_ptb_fact.ccw_ld_desc = ptb.ccw_ld_desc
               AND ptb.nch_clm_type_cd IN (''71'', ''72'', ''73'')
                 ) b,
               (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                  ptbl.dml_ind,
                  ccw_ptb_line_fact.bene_id,
                  ccw_ptb_line_fact.clm_id,
                  ccw_ptb_line_fact.line_num,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_ptb_line_fact.clm_thru_dt,
                  ccw_ptb_line_fact.nch_wkly_proc_dt,
                  ccw_ptb_line_fact.carr_prfrng_pin_num,
                  ccw_phys_at_time_of_clm.physn_upin               AS prf_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi                AS prf_physn_npi,
                  ccw_phys_at_time_of_clm.prfmng_grp_npi_num       AS org_npi_num,
                  ccw_carr_prfl.carr_line_prvdr_type_cd,
                  ccw_prvdr_at_time_of_clm.tax_num,
                  ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                  ccw_prvdr_at_time_of_clm.prvdr_zip,
                  ccw_prvdr_at_time_of_clm.prvdr_spclty,
                  ccw_prvdr_at_time_of_clm.prtcptng_ind_cd,
                  ccw_carr_prfl.carr_line_rdcd_pmt_phys_astn_c,
                  ccw_ptb_line_fact.line_srvc_cnt,
                  ccw_carr_dme_prfl.line_cms_type_srvc_cd,
                  ccw_carr_dme_prfl.line_place_of_srvc_cd,
                  ccw_carr_prfl.carr_line_prcng_lclty_cd,
                  ccw_ptb_line_fact.line_1st_expns_dt              line_1st_expns_dt,
                  ccw_ptb_line_fact.line_last_expns_dt             line_last_expns_dt,
                  ccw_hcpcs_cd.hcpcs_cd                            hcpcs_cd,
                  ccw_mdfr_prfl.hcpcs_1st_mdfr_cd                  hcpcs_1st_mdfr_cd,
                  ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd                  hcpcs_2nd_mdfr_cd,
                  ccw_hcpcs_cd.betos_cd                            betos_cd,
                  ccw_ptb_line_fact.line_nch_pmt_amt               line_nch_pmt_amt,
                  ccw_ptb_line_fact.line_bene_pmt_amt              line_bene_pmt_amt,
                  ccw_ptb_line_fact.line_prvdr_pmt_amt             line_prvdr_pmt_amt,
                  ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt       line_bene_ptb_ddctbl_amt,
                  ccw_carr_dme_prfl.line_bene_prmry_pyr_cd         line_bene_prmry_pyr_cd,
                  ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt     line_bene_prmry_pyr_pd_amt,
                  ccw_ptb_line_fact.line_coinsrnc_amt              line_coinsrnc_amt,
                  ccw_ptb_line_fact.line_sbmtd_chrg_amt            line_sbmtd_chrg_amt,
                  ccw_ptb_line_fact.line_alowd_chrg_amt            line_alowd_chrg_amt,
                  ccw_carr_dme_prfl.line_prcsg_ind_cd              line_prcsg_ind_cd,
                  ccw_carr_dme_prfl.line_pmt_80_100_cd             line_pmt_80_100_cd,
                  ccw_carr_dme_prfl.line_service_deductible_       AS line_service_deductible,
                  ccw_ptb_line_fact.carr_line_mtus_cnt             carr_line_mtus_cnt,
                  ccw_carr_prfl.carr_line_mtus_cd                  carr_line_mtus_cd,
                  ccw_carr_prfl.carr_line_hpsa_scrcty_ind_cd       AS hpsa_scrcty_ind_cd,
                  ccw_ptb_line_fact.carr_line_rx_num               carr_line_rx_num,
                  ccw_ptb_line_fact.line_dgns_cd                   AS line_icd_dgns_cd,
                  ccw_ptb_line_fact.line_dgns_vrsn_cd              AS line_icd_dgns_vrsn_cd,
                  ccw_ptb_line_fact.line_hct_hgb_rslt_num          line_hct_hgb_rslt_num,
                  ccw_ptb_line_fact.line_hct_hgb_type_cd           line_hct_hgb_type_cd,
                  ccw_ptb_line_fact.ndc_cd                         AS line_ndc_cd,
                  ccw_ptb_line_fact.carr_line_clia_lab_num         carr_line_clia_lab_num,
                  ccw_ptb_line_fact.carr_line_ansthsa_unit_cnt     carr_line_ansthsa_unit_cnt,
                  ccw_ptb_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                   FROM ccw_owner.ccw_ptb_line_fact ccw_ptb_line_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_carr_dme_prfl,
                        ccw_owner.ccw_carr_prfl,
                        ccw_owner.ccw_hcpcs_cd,
                        ccw_owner.ccw_mdfr_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm,
                        ccw_owner.ccw_prvdr_at_time_of_clm
                      ,ccw_owner.fhir_ptb_ld_clm_status ptbl
                  WHERE 
                  ccw_ptb_line_fact.clm_type_id =
                  ccw_all_clm_prfl.clm_type_id
               AND ccw_ptb_line_fact.othr_fld_clms_dtl_id =
                  ccw_carr_dme_prfl.othr_fld_clms_dtl_id
               AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
               AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
               AND ccw_ptb_line_fact.mdfr_prfl_id = ccw_mdfr_prfl.mdfr_prfl_id
               AND ccw_ptb_line_fact.carr_line_prfrmng =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
                  ccw_prvdr_at_time_of_clm.prvdr_id
               AND ccw_ptb_line_fact.clm_id = ptbl.clm_id
               AND ptbl.job_ld_dt IS NULL
               AND substr(ptbl.bene_id,
                         length(ptbl.bene_id),
                         1) =
                  nvl(' || pi_bene_part_num || ',
                      substr(ptbl.bene_id,
                             length(ptbl.bene_id),
                             1))
                 AND ccw_ptb_line_fact.clm_thru_dt = ptbl.clm_thru_dt
                 AND ccw_ptb_line_fact.ccw_ld_desc = ptbl.ccw_ld_desc
                 AND ptbl.nch_clm_type_cd IN (''71'', ''72'', ''73'')
                 ) l
         WHERE b.clm_id = l.clm_id'); 
  END insert_bcarrier_delta_by_part;

  PROCEDURE insert_bc_delta_by_part_f(pi_part_name     VARCHAR2,
                                      pi_bene_part_num VARCHAR2, 
                                      pi_bene_ss_len   NUMBER ) 
  IS
     l_part_str VARCHAR2(64); 
  BEGIN
    
    --
    -- Set l_part_str var based on pi_part_name
    -- 
    IF pi_part_name IS NOT NULL THEN 
       l_part_str := ' PARTITION ( '||pi_part_name ||' ) '; 
    ELSE
       l_part_str := NULL; 
    END IF; 
                                
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_bc_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);


    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_bcarrier_BASE_T1 '||l_part_str||     
          ' SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_entry_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_disp_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_pmt_dnl_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_rfrng_pin_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, ''^''), ''~''),
                   ''01-JAN-1000''), 
           ---- Covering the line info (45) ----
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null, null, 
           b.bene_part_num,
           b.finl_actn_id
            FROM (SELECT /*+  full (ccw_ptb_fact) parallel (16) */
                   ' || g_version || ' version,
                    ptb.dml_ind, 
                    ccw_ptb_fact.bene_id,
                    ccw_ptb_fact.clm_id,
                    ccw_ptb_fact.run_dt,
                    ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_ptb_fact.clm_from_dt,
                    ccw_ptb_fact.clm_thru_dt,
                    ccw_ptb_fact.nch_wkly_prcsg_dt                 AS nch_wkly_proc_dt,
                    ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                    ccw_carr_dme_clm_prfl.clm_disp_cd,
                    ccw_ptb_fact.carr_num,
                    ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                    ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                    ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                    ccw_phys_at_time_of_clm.physn_upin             AS rfr_physn_upin,
                    ccw_phys_at_time_of_clm.physn_npi              AS rfr_physn_npi,
                    ccw_ptb_fact.carr_clm_rfrg_pin_num             AS carr_clm_rfrng_pin_num,
                    ccw_ptb_fact.clm_pymt_amt                      AS clm_pmt_amt,
                    ccw_ptb_fact.clm_prmry_pyr_pd_amt              AS carr_clm_prmry_pyr_pd_amt,
                    ccw_ptb_fact.clm_prvdr_pymt_amt                AS nch_clm_prvdr_pmt_amt,
                    ccw_ptb_fact.clm_bene_pymt_amt                 AS nch_clm_bene_pmt_amt,
                    ccw_ptb_fact.clm_sbmtd_chrg_amt                AS nch_carr_clm_sbmtd_chrg_amt,
                    ccw_ptb_fact.clm_alowd_amt                     AS nch_carr_clm_alowd_amt,
                    ccw_ptb_fact.clm_cash_ddctbl_apld_amt          AS carr_clm_cash_ddctbl_apld_amt,
                    ccw_ptb_fact.prncpal_dgns_cd                   prncpal_dgns_cd,
                    ccw_ptb_fact.prncpal_dgns_vrsn_cd              prncpal_dgns_vrsn_cd,
                    ccw_ptb_fact.dgns_1_cd                         AS icd_dgns_cd1,
                    ccw_ptb_fact.dgns_1_vrsn_cd                    AS icd_dgns_vrsn_cd1,
                    ccw_ptb_fact.dgns_2_cd                         AS icd_dgns_cd2,
                    ccw_ptb_fact.dgns_2_vrsn_cd                    AS icd_dgns_vrsn_cd2,
                    ccw_ptb_fact.dgns_3_cd                         AS icd_dgns_cd3,
                    ccw_ptb_fact.dgns_3_vrsn_cd                    AS icd_dgns_vrsn_cd3,
                    ccw_ptb_fact.dgns_4_cd                         AS icd_dgns_cd4,
                    ccw_ptb_fact.dgns_4_vrsn_cd                    AS icd_dgns_vrsn_cd4,
                    ccw_ptb_fact.dgns_5_cd                         AS icd_dgns_cd5,
                    ccw_ptb_fact.dgns_5_vrsn_cd                    AS icd_dgns_vrsn_cd5,
                    ccw_ptb_fact.dgns_6_cd                         AS icd_dgns_cd6,
                    ccw_ptb_fact.dgns_6_vrsn_cd                    AS icd_dgns_vrsn_cd6,
                    ccw_ptb_fact.dgns_7_cd                         AS icd_dgns_cd7,
                    ccw_ptb_fact.dgns_7_vrsn_cd                    AS icd_dgns_vrsn_cd7,
                    ccw_ptb_fact.dgns_8_cd                         AS icd_dgns_cd8,
                    ccw_ptb_fact.dgns_8_vrsn_cd                    AS icd_dgns_vrsn_cd8,
                    ccw_ptb_fact.dgns_9_cd                         AS icd_dgns_cd9,
                    ccw_ptb_fact.dgns_9_vrsn_cd                    AS icd_dgns_vrsn_cd9,
                    ccw_ptb_fact.dgns_10_cd                        AS icd_dgns_cd10,
                    ccw_ptb_fact.dgns_10_vrsn_cd                   AS icd_dgns_vrsn_cd10,
                    ccw_ptb_fact.dgns_11_cd                        AS icd_dgns_cd11,
                    ccw_ptb_fact.dgns_11_vrsn_cd                   AS icd_dgns_vrsn_cd11,
                    ccw_ptb_fact.dgns_12_cd                        AS icd_dgns_cd12,
                    ccw_ptb_fact.dgns_12_vrsn_cd                   AS icd_dgns_vrsn_cd12,
                    ccw_ptb_fact.clm_clncl_tril_num,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_ptb_fact.bene_id,
                           length(ccw_ptb_fact.bene_id) - '||pi_bene_ss_len||'  + 1,'||
                           pi_bene_ss_len|| ') bene_part_num
                    , ptb.clm_grp_id          
                    , ccw_ptb_fact.finl_actn_id   
                     FROM (select /*+ parallel (16) */ *
                           from ccw_owner.fhir_ptb_ld_clm_status
                           where job_ld_dt IS NULL
                             and nch_clm_type_cd IN (''71'', ''72'', ''73'')
                             AND clm_grp_id IS NOT NULL   
                             AND substr(bene_id,
                                        length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                        || pi_bene_ss_len|| ') 
                                        = nvl('||CHR(39)||
                                              pi_bene_part_num||CHR(39)||',
                                              substr(bene_id,
                                              length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                              || pi_bene_ss_len ||')))      ptb,
                          ccw_owner.ccw_ptb_fact ccw_ptb_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_carr_dme_clm_prfl,
                          ccw_owner.ccw_phys_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl
                    WHERE ccw_ptb_fact.clm_thru_dt = ptb.clm_thru_dt
                      AND ccw_ptb_fact.clm_id = ptb.clm_id
                      AND ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                      AND ccw_ptb_fact.othr_flds_clm_id = ccw_carr_dme_clm_prfl.othr_flds_clm_id
                      AND ccw_ptb_fact.rfrg_ordrg_physn_id = ccw_phys_at_time_of_clm.physn_id
                      AND ccw_ptb_fact.all_clm_dmgrphc_id = ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                      AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                      ) b');
                      
    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
    
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'FINISHED - insert_bc_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len );
     

    
  END insert_bc_delta_by_part_f; 
  
  PROCEDURE insert_bc_delta_by_part_l(pi_part_name     VARCHAR2,
                                      pi_bene_part_num VARCHAR2, 
                                      pi_bene_ss_len   NUMBER ) 
  IS
     l_part_str VARCHAR2(64); 
  BEGIN
    
    --
    -- Set l_part_str var based on pi_part_name
    -- 
    IF pi_part_name IS NOT NULL THEN 
       l_part_str := ' PARTITION ( '||pi_part_name ||' ) '; 
    ELSE
       l_part_str := NULL; 
    END IF; 
                                
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_bc_delta_by_part_l: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);
                                              
    --
    -- New insert to consolidate staged FACT info with LINE data    
    --
    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_bcarrier '||l_part_str||   
      ' SELECT /*+ parallel (16) */
       NULL AS combo_field,
       b.version,
       b.dml_ind,
       b.bene_id,
       b.clm_id,
       b.clm_grp_id,
       b.nch_near_line_rec_ident_cd,
       b.nch_clm_type_cd,
       b.clm_from_dt,
       b.clm_thru_dt,
       b.nch_wkly_proc_dt,
       b.carr_clm_entry_cd,
       b.clm_disp_cd,
       b.carr_num,
       b.carr_clm_pmt_dnl_cd,
       b.clm_pmt_amt,
       b.carr_clm_prmry_pyr_pd_amt,
       b.rfr_physn_upin,
       b.rfr_physn_npi,
       b.carr_clm_prvdr_asgnmt_ind_sw,
       b.nch_clm_prvdr_pmt_amt,
       b.nch_clm_bene_pmt_amt,
       b.nch_carr_clm_sbmtd_chrg_amt,
       b.nch_carr_clm_alowd_amt,
       b.carr_clm_cash_ddctbl_apld_amt,
       b.carr_clm_hcpcs_yr_cd,
       b.carr_clm_rfrng_pin_num,
       b.prncpal_dgns_cd,
       b.prncpal_dgns_vrsn_cd,
       b.icd_dgns_cd1,
       b.icd_dgns_vrsn_cd1,
       b.icd_dgns_cd2,
       b.icd_dgns_vrsn_cd2,
       b.icd_dgns_cd3,
       b.icd_dgns_vrsn_cd3,
       b.icd_dgns_cd4,
       b.icd_dgns_vrsn_cd4,
       b.icd_dgns_cd5,
       b.icd_dgns_vrsn_cd5,
       b.icd_dgns_cd6,
       b.icd_dgns_vrsn_cd6,
       b.icd_dgns_cd7,
       b.icd_dgns_vrsn_cd7,
       b.icd_dgns_cd8,
       b.icd_dgns_vrsn_cd8,
       b.icd_dgns_cd9,
       b.icd_dgns_vrsn_cd9,
       b.icd_dgns_cd10,
       b.icd_dgns_vrsn_cd10,
       b.icd_dgns_cd11,
       b.icd_dgns_vrsn_cd11,
       b.icd_dgns_cd12,
       b.icd_dgns_vrsn_cd12,
       b.clm_clncl_tril_num,
       --***** Line Level Values
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_num, ''^''), ''~''), ''01-JAN-1000''), 
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.carr_prfrng_pin_num, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_phys_at_time_of_clm.physn_upin, ''^''), ''~''),
               ''01-JAN-1000'') AS prf_physn_upin,
       REPLACE(REPLACE(REPLACE(ccw_phys_at_time_of_clm.physn_npi, ''^''), ''~''),
               ''01-JAN-1000'') AS prf_physn_npi,
       REPLACE(REPLACE(REPLACE(ccw_phys_at_time_of_clm.prfmng_grp_npi_num, ''^''), ''~''), ''01-JAN-1000'') as org_npi_num,
       REPLACE(REPLACE(REPLACE(ccw_carr_prfl.carr_line_prvdr_type_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_prvdr_at_time_of_clm.tax_num, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_prvdr_at_time_of_clm.prvdr_state_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_prvdr_at_time_of_clm.prvdr_zip, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_prvdr_at_time_of_clm.prvdr_spclty, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_prvdr_at_time_of_clm.prtcptng_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_prfl.carr_line_rdcd_pmt_phys_astn_c, ''^''),
                       ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_srvc_cnt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_cms_type_srvc_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_place_of_srvc_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_prfl.carr_line_prcng_lclty_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_1st_expns_dt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_last_expns_dt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_hcpcs_cd.hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_1st_mdfr_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_hcpcs_cd.betos_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_nch_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_bene_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_prvdr_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_bene_prmry_pyr_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_coinsrnc_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_sbmtd_chrg_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_alowd_chrg_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_prcsg_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_pmt_80_100_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_dme_prfl.line_service_deductible_, ''^''), ''~''),
               ''01-JAN-1000'') AS line_service_deductible ,
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.carr_line_mtus_cnt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_prfl.carr_line_mtus_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.line_icd_dgns_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.line_icd_dgns_vrsn_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_carr_prfl.carr_line_hpsa_scrcty_ind_cd, ''^''), ''~''),
               ''01-JAN-1000'') AS hpsa_scrcty_ind_cd,
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.carr_line_rx_num, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_hct_hgb_rslt_num, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.line_hct_hgb_type_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.ndc_cd, ''^''), ''~''), ''01-JAN-1000'') AS line_ndc_cd,
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.carr_line_clia_lab_num, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ccw_ptb_line_fact.carr_line_ansthsa_unit_cnt, ''^''), ''~''),
               ''01-JAN-1000''),
       b.bene_part_num,
       b.finl_actn_id
        FROM (select /*+ parallel (16) */ *
                from ccw_owner.temp_bcarrier_BASE_T1
                where bene_part_num =  nvl('||CHR(39)||pi_bene_part_num||CHR(39)||
                                             ', bene_part_num))    b,
             ccw_owner.ccw_ptb_line_fact ccw_ptb_line_fact,
             ccw_owner.ccw_all_clm_prfl,
             ccw_owner.ccw_carr_dme_prfl,
             ccw_owner.ccw_carr_prfl,
             ccw_owner.ccw_hcpcs_cd,
             ccw_owner.ccw_mdfr_prfl,
             ccw_owner.ccw_phys_at_time_of_clm,
             ccw_owner.ccw_prvdr_at_time_of_clm
        WHERE b.clm_thru_dt = ccw_ptb_line_fact.clm_thru_dt
          and b.clm_id = ccw_ptb_line_fact.clm_id
          AND ccw_ptb_line_fact.clm_type_id =
              ccw_all_clm_prfl.clm_type_id
          AND ccw_ptb_line_fact.othr_fld_clms_dtl_id =
             ccw_carr_dme_prfl.othr_fld_clms_dtl_id
          AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
          AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
          AND ccw_ptb_line_fact.mdfr_prfl_id =
             ccw_mdfr_prfl.mdfr_prfl_id
          AND ccw_ptb_line_fact.carr_line_prfrmng =
              ccw_phys_at_time_of_clm.physn_id
          AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
             ccw_prvdr_at_time_of_clm.prvdr_id');
                   
    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
    
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'FINISHED - insert_bc_delta_by_part_l: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len );
                                              
  END insert_bc_delta_by_part_l; 
  
  PROCEDURE extract_bcarrier_changes(p_strt_dt      DATE,
                                     p_end_dt       DATE,
                                     p_prcsg_dt     DATE,
                                     p_part_num     VARCHAR2,
                                     pb_load_data   VARCHAR2, 
                                     pb_new_version VARCHAR2
                                   , pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;
    l_bene_ss_len NUMBER;    -- 3.22 - use p_part_num(as a #) length to determine
                             -- substr length of bene_id in dynamic sql 
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_CARRIER_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bcarrier_changes - started');
    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    l_bene_ss_len := LENGTH (p_part_num);
    -- 3.22 If l_bene_ss_len Is not 1 or 2 error if NULL set to 1
    IF l_bene_ss_len IS NULL THEN
       l_bene_ss_len := 1; 
    END IF;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len 
                                      || ' From p_part_num: '||p_part_num );

    
    IF l_bene_ss_len > 2 THEN 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len
                                 || ' this IS A PROBLEM' );
    END IF;      
    
    --Added to each individual run in case we run them independently from the load all

    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('extract_bcarrier_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'bcarrier_upd' || g_separator || p_part_num ||
                  g_separator || delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_bcarrier');             -- by partition/table
      truncate_table(p_part_num, 'temp_bcarrier_base_t1');     -- by partition/table

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_BCARRIER_BASE_T1',         -- clm/fact table
                                   pi_value      => p_part_num);

      --insert by partition
      insert_bc_delta_by_part_f(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num, 
                                     pi_bene_ss_len   => l_bene_ss_len);
      
      COMMIT; 

      --dbms_stats.gather_table_stats('CCW_OWNER', 'TEMP_BCARRIER_BASE_T1');
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_BCARRIER_BASE_T1',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_BCARRIER_BASE_T1',
                                         p_ptn_nm      => 'BENE_PART' ||
                                                          to_number(p_part_num),
                                         p_granularity => 'PARTITION',
                                         p_ecode_out   => g_ecode,
                                         p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
      
      COMMIT; 
      --
      -- Consolidate TEMP_BCARRIER_BASE_T1 with Line data into TEMP_BCARRIER 
      -- 
      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_BCARRIER',         -- line table
                                   pi_value      => p_part_num);

      --insert by partition
      insert_bc_delta_by_part_l(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num, 
                                     pi_bene_ss_len   => l_bene_ss_len);
      COMMIT; 
      
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_BCARRIER',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_BCARRIER',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
      
      COMMIT; 
      
    END IF;

    -- Moving output file writing to a common procedure, so delta bcarrier can use as well.
    output_bcarrier_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    -- 3.14 -- Delta processing will create manifest here
    --Create manifest file
    create_manifest_file('DELTA', p_part_num, 'BCARRIER');

    --Add file to manifest list
    update_manifest_file(g_utl_file);

    --Add closing tag to the manifest file
    utl_file.put_line(g_manifest_file, '</dataSetManifest>');
    --Close the manifest file
    utl_file.fclose(g_manifest_file);

    --Create .done file to indicate to the file transfer script on the server
    --that the current file is ready to transfer
    create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

    IF p_extrct_only THEN

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_bcarrier_changes - finished');

    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Bcarrier_Changes Error: ');
      RAISE;
  END extract_bcarrier_changes;

  PROCEDURE insert_temp_dme_by_part(pi_part_name     VARCHAR2,
                                    pi_bene_part_num NUMBER) IS
  BEGIN

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_dme_by_part: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num);

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_dme partition (' ||
                      pi_part_name || ')
           SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id, 
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.carr_clm_entry_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_disp_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.carr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.carr_clm_pmt_dnl_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rfr_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, ''^''), ''~''),
                   ''01-JAN-1000''), --****** Line Level Values
           REPLACE(REPLACE(REPLACE(l.line_num, ''^''), ''~''), ''01-JAN-1000''), 
           REPLACE(REPLACE(REPLACE(l.tax_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prvdr_spclty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.prtcptng_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.line_srvc_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.line_cms_type_srvc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.line_place_of_srvc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.line_1st_expns_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.line_last_expns_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(betos_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_nch_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_ptb_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_coinsrnc_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_prmry_alowd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_sbmtd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_alowd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_prcsg_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_pmt_80_100_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_service_deductible, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_dme_prchs_price_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dmerc_line_prcng_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dmerc_line_supplr_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_3rd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_4th_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dmerc_line_scrn_svgs_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_rslt_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(line_ndc_cd, ''^''), ''~''), ''01-JAN-1000''),
           b.bene_part_num
           , b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_ptb_fact.bene_id,
                    ccw_ptb_fact.clm_id,
                    pcg.clm_grp_id, -- PCG
                    ccw_ptb_fact.run_dt,
                    ccw_ptb_fact.nch_near_line_rec_ident_cd,
                    ccw_ptb_fact.nch_clm_type_cd,
                    ccw_ptb_fact.clm_from_dt,
                    ccw_ptb_fact.clm_thru_dt,
                    ccw_ptb_fact.nch_wkly_prcsg_dt AS nch_wkly_proc_dt,
                    ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                    ccw_carr_dme_clm_prfl.clm_disp_cd,
                    ccw_ptb_fact.carr_num,
                    ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                    ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                    ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                    ccw_phys_at_time_of_clm.physn_upin AS rfr_physn_upin,
                    ccw_phys_at_time_of_clm.physn_npi AS rfr_physn_npi,
                    ccw_ptb_fact.clm_pymt_amt AS clm_pmt_amt,
                    ccw_ptb_fact.clm_prmry_pyr_pd_amt AS carr_clm_prmry_pyr_pd_amt,
                    ccw_ptb_fact.clm_prvdr_pymt_amt AS nch_clm_prvdr_pmt_amt,
                    ccw_ptb_fact.clm_bene_pymt_amt AS nch_clm_bene_pmt_amt,
                    ccw_ptb_fact.clm_sbmtd_chrg_amt AS nch_carr_clm_sbmtd_chrg_amt,
                    ccw_ptb_fact.clm_alowd_amt AS nch_carr_clm_alowd_amt,
                    ccw_ptb_fact.clm_cash_ddctbl_apld_amt AS carr_clm_cash_ddctbl_apld_amt,
                    ccw_ptb_fact.prncpal_dgns_cd,
                    ccw_ptb_fact.prncpal_dgns_vrsn_cd,
                    ccw_ptb_fact.dgns_1_cd AS icd_dgns_cd1,
                    ccw_ptb_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                    ccw_ptb_fact.dgns_2_cd AS icd_dgns_cd2,
                    ccw_ptb_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                    ccw_ptb_fact.dgns_3_cd AS icd_dgns_cd3,
                    ccw_ptb_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                    ccw_ptb_fact.dgns_4_cd AS icd_dgns_cd4,
                    ccw_ptb_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                    ccw_ptb_fact.dgns_5_cd AS icd_dgns_cd5,
                    ccw_ptb_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                    ccw_ptb_fact.dgns_6_cd AS icd_dgns_cd6,
                    ccw_ptb_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                    ccw_ptb_fact.dgns_7_cd AS icd_dgns_cd7,
                    ccw_ptb_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                    ccw_ptb_fact.dgns_8_cd AS icd_dgns_cd8,
                    ccw_ptb_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                    ccw_ptb_fact.dgns_9_cd AS icd_dgns_cd9,
                    ccw_ptb_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                    ccw_ptb_fact.dgns_10_cd AS icd_dgns_cd10,
                    ccw_ptb_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                    ccw_ptb_fact.dgns_11_cd AS icd_dgns_cd11,
                    ccw_ptb_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                    ccw_ptb_fact.dgns_12_cd AS icd_dgns_cd12,
                    ccw_ptb_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                    ccw_ptb_fact.clm_clncl_tril_num,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_ptb_fact.bene_part_num
                    ,ccw_ptb_fact.finl_actn_id
                     FROM ccw_owner.temp_fhir_ptb_fact ccw_ptb_fact,
                          ccw_owner.ccw_all_clm_prfl, 
                          ccw_owner.ccw_carr_dme_clm_prfl,
                          ccw_owner.ccw_phys_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.fhir_ptb_clm_grp
                    WHERE ccw_ptb_fact.othr_flds_clm_id =
                    ccw_carr_dme_clm_prfl.othr_flds_clm_id
                 AND ccw_ptb_fact.rfrg_ordrg_physn_id =
                    ccw_phys_at_time_of_clm.physn_id
                 AND ccw_ptb_fact.all_clm_dmgrphc_id =
                    ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                 AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND ccw_ptb_fact.nch_clm_type_cd IN (''81'', ''82'')
                 AND pcg.bene_clm_acnt_num = ccw_ptb_fact.bene_clm_acnt_num
                 AND ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                 AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                 AND pcg.carr_clm_cntl_num = ccw_ptb_fact.carr_clm_cntl_num
                 AND ccw_ptb_fact.bene_part_num =
                    nvl(' || pi_bene_part_num ||
                      ', ccw_ptb_fact.bene_part_num)
                   ) b,
                 (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_ptb_line_fact.bene_id,
                    ccw_ptb_line_fact.clm_id,
                    ccw_ptb_line_fact.line_num,
                    ccw_ptb_line_fact.nch_clm_type_cd,
                    ccw_ptb_line_fact.clm_thru_dt,
                    ccw_ptb_line_fact.nch_wkly_proc_dt,
                    ccw_prvdr_at_time_of_clm.tax_num,
                    ccw_prvdr_at_time_of_clm.prvdr_spclty,
                    ccw_prvdr_at_time_of_clm.prtcptng_ind_cd,
                    ccw_ptb_line_fact.line_srvc_cnt,
                    ccw_carr_dme_prfl.line_cms_type_srvc_cd,
                    ccw_carr_dme_prfl.line_place_of_srvc_cd,
                    ccw_ptb_line_fact.line_1st_expns_dt,
                    ccw_ptb_line_fact.line_last_expns_dt,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_hcpcs_cd.betos_cd,
                    ccw_ptb_line_fact.line_nch_pmt_amt,
                    ccw_ptb_line_fact.line_bene_pmt_amt,
                    ccw_ptb_line_fact.line_prvdr_pmt_amt,
                    ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt,
                    ccw_carr_dme_prfl.line_bene_prmry_pyr_cd,
                    ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt,
                    ccw_ptb_line_fact.line_coinsrnc_amt,
                    ccw_ptb_line_fact.line_prmry_alowd_chrg_amt,
                    ccw_ptb_line_fact.line_sbmtd_chrg_amt,
                    ccw_ptb_line_fact.line_alowd_chrg_amt,
                    ccw_carr_dme_prfl.line_prcsg_ind_cd,
                    ccw_carr_dme_prfl.line_pmt_80_100_cd,
                    ccw_carr_dme_prfl.line_service_deductible_ AS line_service_deductible,
                    ccw_ptb_line_fact.line_dgns_cd AS line_icd_dgns_cd,
                    ccw_ptb_line_fact.line_dgns_vrsn_cd AS line_icd_dgns_vrsn_cd,
                    ccw_ptb_line_fact.line_dme_prchs_price_amt line_dme_prchs_price_amt,
                    ccw_prvdr_at_time_of_clm.prvdr_num prvdr_num,
                    ccw_prvdr_at_time_of_clm.prvdr_npi prvdr_npi,
                    ccw_carr_prfl.dmerc_line_prcng_state_cd dmerc_line_prcng_state_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd prvdr_state_cd,
                    ccw_carr_prfl.dmerc_line_supplr_type_cd dmerc_line_supplr_type_cd,
                    ccw_mdfr_prfl.hcpcs_3rd_mdfr_cd hcpcs_3rd_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_4th_mdfr_cd hcpcs_4th_mdfr_cd,
                    ccw_ptb_line_fact.dmerc_line_scrn_svgs_amt dmerc_line_scrn_svgs_amt,
                    ccw_ptb_line_fact.dmerc_line_mtus_cnt dmerc_line_mtus_cnt,
                    ccw_carr_prfl.dmerc_line_mtus_cd dmerc_line_mtus_cd,
                    ccw_ptb_line_fact.line_hct_hgb_rslt_num line_hct_hgb_rslt_num,
                    ccw_ptb_line_fact.line_hct_hgb_type_cd line_hct_hgb_type_cd,
                    ccw_ptb_line_fact.ndc_cd AS line_ndc_cd,
                    ccw_ptb_line_fact.clm_sbstnc_abuse_and_mh_ind_id clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.temp_fhir_ptb_line_fact ccw_ptb_line_fact,
                          ccw_owner.ccw_carr_dme_prfl,
                          ccw_owner.ccw_carr_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm
                    WHERE ccw_ptb_line_fact.othr_fld_clms_dtl_id =
                    ccw_carr_dme_prfl.othr_fld_clms_dtl_id
                 AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
                 AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                 AND ccw_ptb_line_fact.mdfr_prfl_id =
                    ccw_mdfr_prfl.mdfr_prfl_id
                 AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
                    ccw_prvdr_at_time_of_clm.prvdr_id
                 AND ccw_ptb_line_fact.nch_clm_type_cd IN (''81'', ''82'')
                 AND ccw_ptb_line_fact.bene_part_num =
                    nvl(' || pi_bene_part_num ||
                      ', ccw_ptb_line_fact.bene_part_num)
                   ) l
           WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_dme_by_part;

  ---------------------------------------------------------------------------------------
  PROCEDURE extract_dme(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                      , pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_DME',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_dme - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    dbms_application_info.set_client_info('temp_dme');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'dme' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_dme');

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_DME',
                                   pi_value      => p_part_num);
      --insert by partition
      insert_temp_dme_by_part(pi_part_name     => g_part_name,
                              pi_bene_part_num => p_part_num);

      COMMIT;

      --dbms_stats.gather_table_stats('CCW_OWNER', 'TEMP_DME');
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_DME',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_DME',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;

    END IF;

    -- Moving output file writing to a common procedure, so delta dme can use as well.
    output_dme_file(p_part_num, pb_output_data);

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'DME');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_dme - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Dme Error: ');
      RAISE;
  END extract_dme;

  PROCEDURE insert_temp_dme_delta_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_dme PARTITION (' ||
                      pi_part_name || ')
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         b.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.carr_clm_entry_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_disp_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.carr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.carr_clm_pmt_dnl_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rfr_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rfr_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, ''^''), ''~''),
                 ''01-JAN-1000''), --****** Line Level Values
         REPLACE(REPLACE(REPLACE(l.line_num, ''^''), ''~''), ''01-JAN-1000''), 
         REPLACE(REPLACE(REPLACE(l.tax_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prvdr_spclty, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.prtcptng_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.line_srvc_cnt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.line_cms_type_srvc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.line_place_of_srvc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.line_1st_expns_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.line_last_expns_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(betos_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_nch_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_prvdr_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_ptb_ddctbl_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_coinsrnc_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_prmry_alowd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_sbmtd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_alowd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_prcsg_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_pmt_80_100_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_service_deductible, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_icd_dgns_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_icd_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_dme_prchs_price_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dmerc_line_prcng_state_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dmerc_line_supplr_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_3rd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_4th_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dmerc_line_scrn_svgs_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_hct_hgb_rslt_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_hct_hgb_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(line_ndc_cd, ''^''), ''~''), ''01-JAN-1000''),
         b.bene_part_num
         ,b.finl_actn_id
          FROM (SELECT /*+ full (ccw_ptb_fact) parallel (16) */  
                  ' || g_version ||
                      ' version,
                  ptb.dml_ind,  
                  ccw_ptb_fact.bene_id,
                  ccw_ptb_fact.clm_id,
                  ccw_ptb_fact.run_dt,
                  ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_ptb_fact.clm_from_dt,
                  ccw_ptb_fact.clm_thru_dt,
                  ccw_ptb_fact.nch_wkly_prcsg_dt                 AS nch_wkly_proc_dt,
                  ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                  ccw_carr_dme_clm_prfl.clm_disp_cd,
                  ccw_ptb_fact.carr_num,
                  ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                  ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                  ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                  ccw_phys_at_time_of_clm.physn_upin             AS rfr_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi              AS rfr_physn_npi,
                  ccw_ptb_fact.clm_pymt_amt                      AS clm_pmt_amt,
                  ccw_ptb_fact.clm_prmry_pyr_pd_amt              AS carr_clm_prmry_pyr_pd_amt,
                  ccw_ptb_fact.clm_prvdr_pymt_amt                AS nch_clm_prvdr_pmt_amt,
                  ccw_ptb_fact.clm_bene_pymt_amt                 AS nch_clm_bene_pmt_amt,
                  ccw_ptb_fact.clm_sbmtd_chrg_amt                AS nch_carr_clm_sbmtd_chrg_amt,
                  ccw_ptb_fact.clm_alowd_amt                     AS nch_carr_clm_alowd_amt,
                  ccw_ptb_fact.clm_cash_ddctbl_apld_amt          AS carr_clm_cash_ddctbl_apld_amt,
                  ccw_ptb_fact.prncpal_dgns_cd,
                  ccw_ptb_fact.prncpal_dgns_vrsn_cd,
                  ccw_ptb_fact.dgns_1_cd                         AS icd_dgns_cd1,
                  ccw_ptb_fact.dgns_1_vrsn_cd                    AS icd_dgns_vrsn_cd1,
                  ccw_ptb_fact.dgns_2_cd                         AS icd_dgns_cd2,
                  ccw_ptb_fact.dgns_2_vrsn_cd                    AS icd_dgns_vrsn_cd2,
                  ccw_ptb_fact.dgns_3_cd                         AS icd_dgns_cd3,
                  ccw_ptb_fact.dgns_3_vrsn_cd                    AS icd_dgns_vrsn_cd3,
                  ccw_ptb_fact.dgns_4_cd                         AS icd_dgns_cd4,
                  ccw_ptb_fact.dgns_4_vrsn_cd                    AS icd_dgns_vrsn_cd4,
                  ccw_ptb_fact.dgns_5_cd                         AS icd_dgns_cd5,
                  ccw_ptb_fact.dgns_5_vrsn_cd                    AS icd_dgns_vrsn_cd5,
                  ccw_ptb_fact.dgns_6_cd                         AS icd_dgns_cd6,
                  ccw_ptb_fact.dgns_6_vrsn_cd                    AS icd_dgns_vrsn_cd6,
                  ccw_ptb_fact.dgns_7_cd                         AS icd_dgns_cd7,
                  ccw_ptb_fact.dgns_7_vrsn_cd                    AS icd_dgns_vrsn_cd7,
                  ccw_ptb_fact.dgns_8_cd                         AS icd_dgns_cd8,
                  ccw_ptb_fact.dgns_8_vrsn_cd                    AS icd_dgns_vrsn_cd8,
                  ccw_ptb_fact.dgns_9_cd                         AS icd_dgns_cd9,
                  ccw_ptb_fact.dgns_9_vrsn_cd                    AS icd_dgns_vrsn_cd9,
                  ccw_ptb_fact.dgns_10_cd                        AS icd_dgns_cd10,
                  ccw_ptb_fact.dgns_10_vrsn_cd                   AS icd_dgns_vrsn_cd10,
                  ccw_ptb_fact.dgns_11_cd                        AS icd_dgns_cd11,
                  ccw_ptb_fact.dgns_11_vrsn_cd                   AS icd_dgns_vrsn_cd11,
                  ccw_ptb_fact.dgns_12_cd                        AS icd_dgns_cd12,
                  ccw_ptb_fact.dgns_12_vrsn_cd                   AS icd_dgns_vrsn_cd12,
                  ccw_ptb_fact.clm_clncl_tril_num,
                  ccw_all_clm_dmgrphc_prfl.dob_dt,
                  ccw_all_clm_dmgrphc_prfl.gndr_cd,
                  ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                  ccw_geo_prfl.bene_cnty_cd,
                  ccw_geo_prfl.bene_state_cd,
                  ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                  ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                  substr(ccw_ptb_fact.bene_id,
                         length(ccw_ptb_fact.bene_id) - 1,
                         2) bene_part_num
                 ,  ptb.clm_grp_id  
                  , ptb.finl_actn_id
                   FROM ccw_owner.ccw_ptb_fact ccw_ptb_fact,
                         ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_carr_dme_clm_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm,
                        ccw_owner.ccw_all_clm_dmgrphc_prfl,
                        ccw_owner.ccw_geo_prfl,
                       ccw_owner.fhir_ptb_ld_clm_status ptb
                  WHERE ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
               AND ccw_ptb_fact.othr_flds_clm_id =
                  ccw_carr_dme_clm_prfl.othr_flds_clm_id
               AND ccw_ptb_fact.rfrg_ordrg_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_ptb_fact.all_clm_dmgrphc_id =
                  ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
               AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                AND substr(ptb.bene_id,
                         length(ptb.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(ptb.bene_id,
                                         length(ptb.bene_id) - 1,
                                         2))
               AND ptb.clm_grp_id IS NOT NULL
               AND ccw_ptb_fact.clm_thru_dt = ptb.clm_thru_dt
               AND ptb.nch_clm_type_cd IN (''81'', ''82'')
               AND ccw_ptb_fact.clm_id = ptb.clm_id
               AND ptb.job_ld_dt IS NULL
                 ) b,
               (SELECT /*+ full (ccw_ptb_line_fact) parallel (16) */      
                  ' || g_version ||
                      ' version,
                  ptbl.dml_ind,    
                  ccw_ptb_line_fact.bene_id,
                  ccw_ptb_line_fact.clm_id,
                  ccw_ptb_line_fact.line_num,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_ptb_line_fact.clm_thru_dt,
                  ccw_ptb_line_fact.nch_wkly_proc_dt,
                  ccw_prvdr_at_time_of_clm.tax_num,
                  ccw_prvdr_at_time_of_clm.prvdr_spclty,
                  ccw_prvdr_at_time_of_clm.prtcptng_ind_cd,
                  ccw_ptb_line_fact.line_srvc_cnt,
                  ccw_carr_dme_prfl.line_cms_type_srvc_cd,
                  ccw_carr_dme_prfl.line_place_of_srvc_cd,
                  ccw_ptb_line_fact.line_1st_expns_dt,
                  ccw_ptb_line_fact.line_last_expns_dt,
                  ccw_hcpcs_cd.hcpcs_cd,
                  ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                  ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                  ccw_hcpcs_cd.betos_cd,
                  ccw_ptb_line_fact.line_nch_pmt_amt,
                  ccw_ptb_line_fact.line_bene_pmt_amt,
                  ccw_ptb_line_fact.line_prvdr_pmt_amt,
                  ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt,
                  ccw_carr_dme_prfl.line_bene_prmry_pyr_cd,
                  ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt,
                  ccw_ptb_line_fact.line_coinsrnc_amt,
                  ccw_ptb_line_fact.line_prmry_alowd_chrg_amt,
                  ccw_ptb_line_fact.line_sbmtd_chrg_amt,
                  ccw_ptb_line_fact.line_alowd_chrg_amt,
                  ccw_carr_dme_prfl.line_prcsg_ind_cd,
                  ccw_carr_dme_prfl.line_pmt_80_100_cd,
                  ccw_carr_dme_prfl.line_service_deductible_       AS line_service_deductible,
                  ccw_ptb_line_fact.line_dgns_cd                   AS line_icd_dgns_cd,
                  ccw_ptb_line_fact.line_dgns_vrsn_cd              AS line_icd_dgns_vrsn_cd,
                  ccw_ptb_line_fact.line_dme_prchs_price_amt       line_dme_prchs_price_amt,
                  ccw_prvdr_at_time_of_clm.prvdr_num               prvdr_num,
                  ccw_prvdr_at_time_of_clm.prvdr_npi               prvdr_npi,
                  ccw_carr_prfl.dmerc_line_prcng_state_cd          dmerc_line_prcng_state_cd,
                  ccw_prvdr_at_time_of_clm.prvdr_state_cd          prvdr_state_cd,
                  ccw_carr_prfl.dmerc_line_supplr_type_cd          dmerc_line_supplr_type_cd,
                  ccw_mdfr_prfl.hcpcs_3rd_mdfr_cd                  hcpcs_3rd_mdfr_cd,
                  ccw_mdfr_prfl.hcpcs_4th_mdfr_cd                  hcpcs_4th_mdfr_cd,
                  ccw_ptb_line_fact.dmerc_line_scrn_svgs_amt       dmerc_line_scrn_svgs_amt,
                  ccw_ptb_line_fact.dmerc_line_mtus_cnt            dmerc_line_mtus_cnt,
                  ccw_carr_prfl.dmerc_line_mtus_cd                 dmerc_line_mtus_cd,
                  ccw_ptb_line_fact.line_hct_hgb_rslt_num          line_hct_hgb_rslt_num,
                  ccw_ptb_line_fact.line_hct_hgb_type_cd           line_hct_hgb_type_cd,
                  ccw_ptb_line_fact.ndc_cd                         AS line_ndc_cd,
                  ccw_ptb_line_fact.clm_sbstnc_abuse_and_mh_ind_id clm_sbstnc_abuse_and_mh_ind_id
                   FROM ccw_owner.ccw_ptb_line_fact ccw_ptb_line_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_carr_dme_prfl,
                        ccw_owner.ccw_carr_prfl,
                        ccw_owner.ccw_hcpcs_cd,
                        ccw_owner.ccw_mdfr_prfl,
                        ccw_owner.ccw_prvdr_at_time_of_clm
                      ,ccw_owner.fhir_ptb_ld_clm_status ptbl
                  WHERE ccw_ptb_line_fact.clm_type_id =
                  ccw_all_clm_prfl.clm_type_id
               AND ccw_ptb_line_fact.othr_fld_clms_dtl_id =
                  ccw_carr_dme_prfl.othr_fld_clms_dtl_id
               AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
               AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
               AND ccw_ptb_line_fact.mdfr_prfl_id = ccw_mdfr_prfl.mdfr_prfl_id
               AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
                  ccw_prvdr_at_time_of_clm.prvdr_id
               AND ccw_ptb_line_fact.clm_id = ptbl.clm_id
               AND ptbl.job_ld_dt IS NULL
               AND substr(ptbl.bene_id,
                         length(ptbl.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(ptbl.bene_id,
                                         length(ptbl.bene_id) - 1,
                                         2))
                 AND ccw_ptb_line_fact.clm_thru_dt = ptbl.clm_thru_dt
                 AND ptbl.nch_clm_type_cd IN (''81'', ''82'')
                 ) l
         WHERE b.clm_id = l.clm_id'); 
         
  END insert_temp_dme_delta_by_part;

  PROCEDURE extract_dme_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2,
                                pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_DME_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    --Added to each individual run in case we run them independently from the load all

    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_dme_changes - started');

    dbms_application_info.set_client_info('extract_dme_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'dme_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_dme');

      IF p_part_num IS NULL THEN
        -- Single digit (single thread (or 10?) compare on bene_id)

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_dme
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.carr_clm_entry_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_disp_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.carr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.carr_clm_pmt_dnl_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(carr_clm_prmry_pyr_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(carr_clm_prvdr_asgnmt_ind_sw, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_clm_prvdr_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_clm_bene_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_sbmtd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_carr_clm_alowd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(carr_clm_cash_ddctbl_apld_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(carr_clm_hcpcs_yr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rfr_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rfr_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_clncl_tril_num, '^'), '~'),
                   '01-JAN-1000'), --****** Line Level Values
           REPLACE(REPLACE(REPLACE(l.line_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.tax_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.prvdr_spclty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.prtcptng_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.line_srvc_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.line_cms_type_srvc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.line_place_of_srvc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.line_1st_expns_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.line_last_expns_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(betos_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_nch_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_bene_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_prvdr_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_bene_ptb_ddctbl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_bene_prmry_pyr_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_coinsrnc_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_prmry_alowd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_sbmtd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_alowd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_prcsg_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_pmt_80_100_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_service_deductible, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_icd_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_dme_prchs_price_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dmerc_line_prcng_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dmerc_line_supplr_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_3rd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_4th_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dmerc_line_scrn_svgs_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dmerc_line_mtus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_rslt_num, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_hct_hgb_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(line_ndc_cd, '^'), '~'), '01-JAN-1000'),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+ full (ccw_ptb_fact) parallel (16) */       
                    g_version version,
                    ptb.dml_ind,
                    ccw_ptb_fact.bene_id,
                    ccw_ptb_fact.clm_id,
                    ccw_ptb_fact.run_dt,
                    ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_ptb_fact.clm_from_dt,
                    ccw_ptb_fact.clm_thru_dt,
                    ccw_ptb_fact.nch_wkly_prcsg_dt                 AS nch_wkly_proc_dt,
                    ccw_carr_dme_clm_prfl.carr_clm_entry_cd,
                    ccw_carr_dme_clm_prfl.clm_disp_cd,
                    ccw_ptb_fact.carr_num,
                    ccw_carr_dme_clm_prfl.carr_clm_pmt_dnl_cd,
                    ccw_carr_dme_clm_prfl.carr_clm_prvdr_asgnmt_sw AS carr_clm_prvdr_asgnmt_ind_sw,
                    ccw_carr_dme_clm_prfl.carr_clm_hcpcs_yr_cd,
                    phy.physn_upin             AS rfr_physn_upin,
                    phy.physn_npi              AS rfr_physn_npi,
                    ccw_ptb_fact.clm_pymt_amt                      AS clm_pmt_amt,
                    ccw_ptb_fact.clm_prmry_pyr_pd_amt              AS carr_clm_prmry_pyr_pd_amt,
                    ccw_ptb_fact.clm_prvdr_pymt_amt                AS nch_clm_prvdr_pmt_amt,
                    ccw_ptb_fact.clm_bene_pymt_amt                 AS nch_clm_bene_pmt_amt,
                    ccw_ptb_fact.clm_sbmtd_chrg_amt                AS nch_carr_clm_sbmtd_chrg_amt,
                    ccw_ptb_fact.clm_alowd_amt                     AS nch_carr_clm_alowd_amt,
                    ccw_ptb_fact.clm_cash_ddctbl_apld_amt          AS carr_clm_cash_ddctbl_apld_amt,
                    ccw_ptb_fact.prncpal_dgns_cd,
                    ccw_ptb_fact.prncpal_dgns_vrsn_cd,
                    ccw_ptb_fact.dgns_1_cd                         AS icd_dgns_cd1,
                    ccw_ptb_fact.dgns_1_vrsn_cd                    AS icd_dgns_vrsn_cd1,
                    ccw_ptb_fact.dgns_2_cd                         AS icd_dgns_cd2,
                    ccw_ptb_fact.dgns_2_vrsn_cd                    AS icd_dgns_vrsn_cd2,
                    ccw_ptb_fact.dgns_3_cd                         AS icd_dgns_cd3,
                    ccw_ptb_fact.dgns_3_vrsn_cd                    AS icd_dgns_vrsn_cd3,
                    ccw_ptb_fact.dgns_4_cd                         AS icd_dgns_cd4,
                    ccw_ptb_fact.dgns_4_vrsn_cd                    AS icd_dgns_vrsn_cd4,
                    ccw_ptb_fact.dgns_5_cd                         AS icd_dgns_cd5,
                    ccw_ptb_fact.dgns_5_vrsn_cd                    AS icd_dgns_vrsn_cd5,
                    ccw_ptb_fact.dgns_6_cd                         AS icd_dgns_cd6,
                    ccw_ptb_fact.dgns_6_vrsn_cd                    AS icd_dgns_vrsn_cd6,
                    ccw_ptb_fact.dgns_7_cd                         AS icd_dgns_cd7,
                    ccw_ptb_fact.dgns_7_vrsn_cd                    AS icd_dgns_vrsn_cd7,
                    ccw_ptb_fact.dgns_8_cd                         AS icd_dgns_cd8,
                    ccw_ptb_fact.dgns_8_vrsn_cd                    AS icd_dgns_vrsn_cd8,
                    ccw_ptb_fact.dgns_9_cd                         AS icd_dgns_cd9,
                    ccw_ptb_fact.dgns_9_vrsn_cd                    AS icd_dgns_vrsn_cd9,
                    ccw_ptb_fact.dgns_10_cd                        AS icd_dgns_cd10,
                    ccw_ptb_fact.dgns_10_vrsn_cd                   AS icd_dgns_vrsn_cd10,
                    ccw_ptb_fact.dgns_11_cd                        AS icd_dgns_cd11,
                    ccw_ptb_fact.dgns_11_vrsn_cd                   AS icd_dgns_vrsn_cd11,
                    ccw_ptb_fact.dgns_12_cd                        AS icd_dgns_cd12,
                    ccw_ptb_fact.dgns_12_vrsn_cd                   AS icd_dgns_vrsn_cd12,
                    ccw_ptb_fact.clm_clncl_tril_num,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ccw_ptb_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_ptb_fact.bene_id,
                           length(ccw_ptb_fact.bene_id),
                           1) bene_part_num ,
                    ptb.clm_grp_id, 
                    ccw_ptb_fact.finl_actn_id    
                     FROM ccw_owner.ccw_ptb_fact ccw_ptb_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_carr_dme_clm_prfl,
                          phy, 
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                         ccw_owner.fhir_ptb_ld_clm_status   ptb
                    WHERE ccw_ptb_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                       AND ccw_ptb_fact.othr_flds_clm_id =
                          ccw_carr_dme_clm_prfl.othr_flds_clm_id
                       AND ccw_ptb_fact.rfrg_ordrg_physn_id =
                           phy.physn_id
                       AND ccw_ptb_fact.all_clm_dmgrphc_id =
                          ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                       AND ccw_ptb_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND substr(ptb.bene_id,
                           length(ptb.bene_id),
                           1) = nvl(p_part_num,
                                    substr(ptb.bene_id,
                                           length(ptb.bene_id),
                                           1))
               AND ptb.clm_grp_id IS NOT NULL
               AND ccw_ptb_fact.clm_thru_dt = ptb.clm_thru_dt
               AND ptb.nch_clm_type_cd IN ('81', '82')
                 AND ccw_ptb_fact.clm_id = ptb.clm_id
                 AND ptb.job_ld_dt IS NULL
                    ) b,
                 (SELECT /*+ full (ccw_ptb_line_fact) parallel (16) */  
                    g_version version,
                    ptbl.dml_ind, 
                    ccw_ptb_line_fact.bene_id,
                    ccw_ptb_line_fact.clm_id,
                    ccw_ptb_line_fact.line_num,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_ptb_line_fact.clm_thru_dt,
                    ccw_ptb_line_fact.nch_wkly_proc_dt,
                    ccw_prvdr_at_time_of_clm.tax_num,
                    ccw_prvdr_at_time_of_clm.prvdr_spclty,
                    ccw_prvdr_at_time_of_clm.prtcptng_ind_cd,
                    ccw_ptb_line_fact.line_srvc_cnt,
                    ccw_carr_dme_prfl.line_cms_type_srvc_cd,
                    ccw_carr_dme_prfl.line_place_of_srvc_cd,
                    ccw_ptb_line_fact.line_1st_expns_dt,
                    ccw_ptb_line_fact.line_last_expns_dt,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_hcpcs_cd.betos_cd,
                    ccw_ptb_line_fact.line_nch_pmt_amt,
                    ccw_ptb_line_fact.line_bene_pmt_amt,
                    ccw_ptb_line_fact.line_prvdr_pmt_amt,
                    ccw_ptb_line_fact.line_bene_ptb_ddctbl_amt,
                    ccw_carr_dme_prfl.line_bene_prmry_pyr_cd,
                    ccw_ptb_line_fact.line_bene_prmry_pyr_pd_amt,
                    ccw_ptb_line_fact.line_coinsrnc_amt,
                    ccw_ptb_line_fact.line_prmry_alowd_chrg_amt,
                    ccw_ptb_line_fact.line_sbmtd_chrg_amt,
                    ccw_ptb_line_fact.line_alowd_chrg_amt,
                    ccw_carr_dme_prfl.line_prcsg_ind_cd,
                    ccw_carr_dme_prfl.line_pmt_80_100_cd,
                    ccw_carr_dme_prfl.line_service_deductible_       AS line_service_deductible,
                    ccw_ptb_line_fact.line_dgns_cd                   AS line_icd_dgns_cd,
                    ccw_ptb_line_fact.line_dgns_vrsn_cd              AS line_icd_dgns_vrsn_cd,
                    ccw_ptb_line_fact.line_dme_prchs_price_amt       line_dme_prchs_price_amt,
                    ccw_prvdr_at_time_of_clm.prvdr_num               prvdr_num,
                    ccw_prvdr_at_time_of_clm.prvdr_npi               prvdr_npi,
                    ccw_carr_prfl.dmerc_line_prcng_state_cd          dmerc_line_prcng_state_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd          prvdr_state_cd,
                    ccw_carr_prfl.dmerc_line_supplr_type_cd          dmerc_line_supplr_type_cd,
                    ccw_mdfr_prfl.hcpcs_3rd_mdfr_cd                  hcpcs_3rd_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_4th_mdfr_cd                  hcpcs_4th_mdfr_cd,
                    ccw_ptb_line_fact.dmerc_line_scrn_svgs_amt       dmerc_line_scrn_svgs_amt,
                    ccw_ptb_line_fact.dmerc_line_mtus_cnt            dmerc_line_mtus_cnt,
                    ccw_carr_prfl.dmerc_line_mtus_cd                 dmerc_line_mtus_cd,
                    ccw_ptb_line_fact.line_hct_hgb_rslt_num          line_hct_hgb_rslt_num,
                    ccw_ptb_line_fact.line_hct_hgb_type_cd           line_hct_hgb_type_cd,
                    ccw_ptb_line_fact.ndc_cd                         AS line_ndc_cd,
                    ccw_ptb_line_fact.clm_sbstnc_abuse_and_mh_ind_id clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.ccw_ptb_line_fact ccw_ptb_line_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_carr_dme_prfl,
                          ccw_owner.ccw_carr_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.fhir_ptb_ld_clm_status   ptbl
                    WHERE ccw_ptb_line_fact.clm_type_id =
                             ccw_all_clm_prfl.clm_type_id
                     AND ccw_ptb_line_fact.othr_fld_clms_dtl_id =
                        ccw_carr_dme_prfl.othr_fld_clms_dtl_id
                     AND ccw_ptb_line_fact.carr_uf_id = ccw_carr_prfl.carr_uf_id
                     AND ccw_ptb_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                     AND ccw_ptb_line_fact.mdfr_prfl_id =
                        ccw_mdfr_prfl.mdfr_prfl_id
                     AND ccw_ptb_line_fact.prvdr_at_time_of_clm_id =
                        ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_ptb_line_fact.clm_id = ptbl.clm_id
                     AND ptbl.job_ld_dt IS NULL
                     AND substr(ptbl.bene_id,
                           length(ptbl.bene_id),
                           1) = nvl(p_part_num,
                                    substr(ptbl.bene_id,
                                           length(ptbl.bene_id),
                                           1))
                 AND ccw_ptb_line_fact.clm_thru_dt = ptbl.clm_thru_dt
                 AND ptbl.nch_clm_type_cd IN ('81', '82')


                   ) l
           WHERE b.clm_id = l.clm_id;

      ELSE
        -- 100 part compare
        --get partition name
        g_part_name := get_part_name(pi_table_name => 'TEMP_DME',
                                     pi_value      => p_part_num);
        --insert data by partition
        insert_temp_dme_delta_by_part(pi_part_name     => g_part_name,
                                      pi_bene_part_num => p_part_num);

      END IF;
      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_DME',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_DME',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
    END IF;

    -- Moving output file writing to a common procedure, so delta dme can use as well.
    output_dme_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN

      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'DME');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_dme_changes - finished');

    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Dme_Changes Error: ');
      RAISE;
  END extract_dme_changes;
  ---------------------------------------------------------------------------------------------
  PROCEDURE insert_temp_hha_by_part(pi_part_name     VARCHAR2,
                                    pi_bene_part_num NUMBER) IS
  BEGIN

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_hha_by_part: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num);

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_hha partition (' ||
                      pi_part_name || ')
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           l.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_hha_lupa_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_hha_rfrl_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_hha_tot_visit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, ''^''), ''~''), ''01-JAN-1000''), --*** Rev Line Values
           REPLACE(REPLACE(REPLACE(l.clm_line_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                   ''01-JAN-1000''),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    pcg.clm_grp_id, 
                    ccw_pta_fact.run_dt,
                    ccw_pta_fact.nch_near_line_rec_ident_cd,
                    ccw_pta_fact.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    ccw_pta_fact.at_physn_upin,
                    ccw_pta_fact.at_physn_npi,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_clm_prfl.clm_pps_ind_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_isohh_prfl.clm_hha_lupa_ind_cd,
                    ccw_isohh_prfl.clm_hha_rfrl_cd,
                    ccw_pta_fact.clm_hha_tot_visit_cnt,
                    ccw_pta_fact.clm_admsn_dt,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                   AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd              AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                   AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd              AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                   AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd              AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                   AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd              AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                   AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd              AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                   AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd              AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                   AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd              AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                   AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd              AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                   AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd              AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                  AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd             AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                  AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd             AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                  AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd             AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                  AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd             AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                  AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd             AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                  AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd             AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                  AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd             AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                  AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd             AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                  AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd             AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                  AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd             AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                  AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd             AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                  AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd             AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                  AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd             AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                  AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd             AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                  AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd             AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                  AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd             AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd       AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd  AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd       AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd  AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd       AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd  AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd       AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd  AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd       AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd  AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd       AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd  AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd       AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd  AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd       AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd  AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd       AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd  AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd      AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd      AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd      AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_fact.bene_part_num
                    ,ccw_pta_fact.finl_actn_id
                     FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl, 
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_isohh_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl ,
                          ccw_owner.fhir_pta_clm_grp         pcg 
                    WHERE  ccw_pta_fact.ip_snf_clm_fields_id =
                    ccw_clm_prfl.ip_snf_clm_field_id
                 AND ccw_pta_fact.isohh_clm_fields_id =
                    ccw_isohh_prfl.isohh_clm_fields_id
                 AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                    ccw_prvdr_at_time_of_clm.prvdr_id
                 AND ccw_pta_fact.all_clm_dmgrphc_id =
                    ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                 AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND ccw_pta_fact.dgns_e_cd_grp_id =
                    ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND ccw_pta_fact.nch_clm_type_cd = ''10''
                 AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
                 AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
                 AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
                 AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
                 AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                 AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                 AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd 
                 AND ccw_pta_fact.bene_part_num =
                    nvl(' || pi_bene_part_num ||
                      ', ccw_pta_fact.bene_part_num)
                   ) b,
                 (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_pta_rev_line_fact.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    ccw_pta_rev_line_fact.rndrng_physn_upin,
                    ccw_pta_rev_line_fact.rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl 
                    WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                    ccw_ansi_prfl.ansi_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                    ccw_apc_hipps_prfl.rev_cntr_apc_id
                 AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                 AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                    ccw_mdfr_prfl.mdfr_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_id =
                    ccw_rev_cntr_prfl.rev_cntr_id
                 AND ccw_pta_rev_line_fact.rev_prfl_id =
                    ccw_rev_prfl.rev_prfl_id
                 AND ccw_pta_rev_line_fact.nch_clm_type_cd = ''10''
                 AND ccw_pta_rev_line_fact.bene_part_num =
                      nvl(' || pi_bene_part_num ||
                      ', ccw_pta_rev_line_fact.bene_part_num)
                   ) l
           WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_hha_by_part;

  ---------------------------------------------------------------------------------------------


  PROCEDURE extract_hha(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE',
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                      , pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_HHA',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hha - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    dbms_application_info.set_client_info('temp_hha');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'hha' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_hha');

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_HHA',
                                   pi_value      => p_part_num);
      --insert by partition
      insert_temp_hha_by_part(pi_part_name     => g_part_name,
                              pi_bene_part_num => p_part_num);

      COMMIT;

      --dbms_stats.gather_table_stats('CCW_OWNER', 'TEMP_HHA');
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_HHA',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_HHA',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
    END IF;

    -- Moving output file writing to a common procedure, so delta hha can use as well.
    output_hha_file(p_part_num, pb_output_data);

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'HHA');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hha - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_HHA Error: ');
      RAISE;
  END extract_hha;

  PROCEDURE insert_temp_hha_delta_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_hha PARTITION (' ||
                      pi_part_name || ')
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         l.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_hha_lupa_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_hha_rfrl_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_hha_tot_visit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_admsn_dt, ''^''), ''~''), ''01-JAN-1000''), --*** Rev Line Values
         REPLACE(REPLACE(REPLACE(l.clm_line_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                 ''01-JAN-1000''),
         b.bene_part_num
         , b.finl_actn_id
          FROM (SELECT /*+ full (ccw_pta_fact) parallel (16) */    
                  ' || g_version ||
                      ' version,
                  pta.dml_ind,    
                  ccw_pta_fact.bene_id,
                  ccw_pta_fact.clm_id,
                  ccw_pta_fact.run_dt,
                  ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_pta_fact.clm_from_dt,
                  ccw_pta_fact.clm_thru_dt,
                  ccw_pta_fact.nch_wkly_proc_dt,
                  ccw_pta_fact.fi_clm_proc_dt,
                  ccw_prvdr_at_time_of_clm.prvdr_num,
                  ccw_isohh_prfl.clm_fac_type_cd,
                  ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                  ccw_isohh_prfl.clm_freq_cd,
                  ccw_pta_fact.fi_num,
                  ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                  ccw_pta_fact.clm_pmt_amt,
                  ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                  ccw_isohh_prfl.nch_prmry_pyr_cd,
                  ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                  ccw_prvdr_at_time_of_clm.org_npi_num,
                  ccw_phys_at_time_of_clm.physn_upin       AS at_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi        AS at_physn_npi,
                  ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                  ccw_clm_prfl.clm_pps_ind_cd,
                  ccw_pta_fact.clm_tot_chrg_amt,
                  ccw_isohh_prfl.clm_hha_lupa_ind_cd,
                  ccw_isohh_prfl.clm_hha_rfrl_cd,
                  ccw_pta_fact.clm_hha_tot_visit_cnt,
                  ccw_pta_fact.clm_admsn_dt,
                  ccw_pta_fact.prncpal_dgns_cd,
                  ccw_pta_fact.prncpal_dgns_vrsn_cd,
                  ccw_pta_fact.dgns_1_cd                   AS icd_dgns_cd1,
                  ccw_pta_fact.dgns_1_vrsn_cd              AS icd_dgns_vrsn_cd1,
                  ccw_pta_fact.dgns_2_cd                   AS icd_dgns_cd2,
                  ccw_pta_fact.dgns_2_vrsn_cd              AS icd_dgns_vrsn_cd2,
                  ccw_pta_fact.dgns_3_cd                   AS icd_dgns_cd3,
                  ccw_pta_fact.dgns_3_vrsn_cd              AS icd_dgns_vrsn_cd3,
                  ccw_pta_fact.dgns_4_cd                   AS icd_dgns_cd4,
                  ccw_pta_fact.dgns_4_vrsn_cd              AS icd_dgns_vrsn_cd4,
                  ccw_pta_fact.dgns_5_cd                   AS icd_dgns_cd5,
                  ccw_pta_fact.dgns_5_vrsn_cd              AS icd_dgns_vrsn_cd5,
                  ccw_pta_fact.dgns_6_cd                   AS icd_dgns_cd6,
                  ccw_pta_fact.dgns_6_vrsn_cd              AS icd_dgns_vrsn_cd6,
                  ccw_pta_fact.dgns_7_cd                   AS icd_dgns_cd7,
                  ccw_pta_fact.dgns_7_vrsn_cd              AS icd_dgns_vrsn_cd7,
                  ccw_pta_fact.dgns_8_cd                   AS icd_dgns_cd8,
                  ccw_pta_fact.dgns_8_vrsn_cd              AS icd_dgns_vrsn_cd8,
                  ccw_pta_fact.dgns_9_cd                   AS icd_dgns_cd9,
                  ccw_pta_fact.dgns_9_vrsn_cd              AS icd_dgns_vrsn_cd9,
                  ccw_pta_fact.dgns_10_cd                  AS icd_dgns_cd10,
                  ccw_pta_fact.dgns_10_vrsn_cd             AS icd_dgns_vrsn_cd10,
                  ccw_pta_fact.dgns_11_cd                  AS icd_dgns_cd11,
                  ccw_pta_fact.dgns_11_vrsn_cd             AS icd_dgns_vrsn_cd11,
                  ccw_pta_fact.dgns_12_cd                  AS icd_dgns_cd12,
                  ccw_pta_fact.dgns_12_vrsn_cd             AS icd_dgns_vrsn_cd12,
                  ccw_pta_fact.dgns_13_cd                  AS icd_dgns_cd13,
                  ccw_pta_fact.dgns_13_vrsn_cd             AS icd_dgns_vrsn_cd13,
                  ccw_pta_fact.dgns_14_cd                  AS icd_dgns_cd14,
                  ccw_pta_fact.dgns_14_vrsn_cd             AS icd_dgns_vrsn_cd14,
                  ccw_pta_fact.dgns_15_cd                  AS icd_dgns_cd15,
                  ccw_pta_fact.dgns_15_vrsn_cd             AS icd_dgns_vrsn_cd15,
                  ccw_pta_fact.dgns_16_cd                  AS icd_dgns_cd16,
                  ccw_pta_fact.dgns_16_vrsn_cd             AS icd_dgns_vrsn_cd16,
                  ccw_pta_fact.dgns_17_cd                  AS icd_dgns_cd17,
                  ccw_pta_fact.dgns_17_vrsn_cd             AS icd_dgns_vrsn_cd17,
                  ccw_pta_fact.dgns_18_cd                  AS icd_dgns_cd18,
                  ccw_pta_fact.dgns_18_vrsn_cd             AS icd_dgns_vrsn_cd18,
                  ccw_pta_fact.dgns_19_cd                  AS icd_dgns_cd19,
                  ccw_pta_fact.dgns_19_vrsn_cd             AS icd_dgns_vrsn_cd19,
                  ccw_pta_fact.dgns_20_cd                  AS icd_dgns_cd20,
                  ccw_pta_fact.dgns_20_vrsn_cd             AS icd_dgns_vrsn_cd20,
                  ccw_pta_fact.dgns_21_cd                  AS icd_dgns_cd21,
                  ccw_pta_fact.dgns_21_vrsn_cd             AS icd_dgns_vrsn_cd21,
                  ccw_pta_fact.dgns_22_cd                  AS icd_dgns_cd22,
                  ccw_pta_fact.dgns_22_vrsn_cd             AS icd_dgns_vrsn_cd22,
                  ccw_pta_fact.dgns_23_cd                  AS icd_dgns_cd23,
                  ccw_pta_fact.dgns_23_vrsn_cd             AS icd_dgns_vrsn_cd23,
                  ccw_pta_fact.dgns_24_cd                  AS icd_dgns_cd24,
                  ccw_pta_fact.dgns_24_vrsn_cd             AS icd_dgns_vrsn_cd24,
                  ccw_pta_fact.dgns_25_cd                  AS icd_dgns_cd25,
                  ccw_pta_fact.dgns_25_vrsn_cd             AS icd_dgns_vrsn_cd25,
                  ccw_pta_fact.fst_dgns_e_cd,
                  ccw_pta_fact.fst_dgns_e_vrsn_cd,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd       AS icd_dgns_e_cd1,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd  AS icd_dgns_e_vrsn_cd1,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd       AS icd_dgns_e_cd2,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd  AS icd_dgns_e_vrsn_cd2,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd       AS icd_dgns_e_cd3,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd  AS icd_dgns_e_vrsn_cd3,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd       AS icd_dgns_e_cd4,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd  AS icd_dgns_e_vrsn_cd4,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd       AS icd_dgns_e_cd5,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd  AS icd_dgns_e_vrsn_cd5,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd       AS icd_dgns_e_cd6,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd  AS icd_dgns_e_vrsn_cd6,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd       AS icd_dgns_e_cd7,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd  AS icd_dgns_e_vrsn_cd7,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd       AS icd_dgns_e_cd8,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd  AS icd_dgns_e_vrsn_cd8,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd       AS icd_dgns_e_cd9,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd  AS icd_dgns_e_vrsn_cd9,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd      AS icd_dgns_e_cd10,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd      AS icd_dgns_e_cd11,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd      AS icd_dgns_e_cd12,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                  ccw_all_clm_dmgrphc_prfl.dob_dt,
                  ccw_all_clm_dmgrphc_prfl.gndr_cd,
                  ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                  ccw_geo_prfl.bene_cnty_cd,
                  ccw_geo_prfl.bene_state_cd,
                  ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                  '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                  ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                  substr(ccw_pta_fact.bene_id,
                         length(ccw_pta_fact.bene_id) - 1,
                         2) bene_part_num,
                  pta.clm_grp_id                 
                  , pta.finl_actn_id   
                   FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_clm_prfl,
                        ccw_owner.ccw_isohh_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm,
                        ccw_owner.ccw_prvdr_at_time_of_clm,
                        ccw_owner.ccw_all_clm_dmgrphc_prfl,
                        ccw_owner.ccw_geo_prfl,
                        ccw_owner.ccw_dgns_e_cd_grp_prfl
                        ,ccw_owner.fhir_pta_ld_clm_status pta
                  WHERE ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
               AND ccw_pta_fact.ip_snf_clm_fields_id =
                  ccw_clm_prfl.ip_snf_clm_field_id
               AND ccw_pta_fact.isohh_clm_fields_id =
                  ccw_isohh_prfl.isohh_clm_fields_id
               AND ccw_pta_fact.atndg_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                  ccw_prvdr_at_time_of_clm.prvdr_id
               AND ccw_pta_fact.all_clm_dmgrphc_id =
                  ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
               AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
               AND ccw_pta_fact.dgns_e_cd_grp_id =
                  ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
               AND ccw_all_clm_prfl.nch_clm_type_cd = ''10''
               AND substr(pta.bene_id,
                         length(pta.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(pta.bene_id,
                                         length(pta.bene_id) - 1,
                                         2))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND pta.nch_clm_type_cd = ''10''
               AND ccw_pta_fact.clm_id = pta.clm_id
               AND pta.job_ld_dt IS NULL
                 ) b,
               (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */           
                  ' || g_version ||
                      ' version,
                  ptal.dml_ind,    
                  ccw_pta_rev_line_fact.bene_id,
                  ccw_pta_rev_line_fact.clm_id,
                  ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                  ccw_pta_rev_line_fact.clm_line_num,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_rev_cntr_prfl.rev_cntr,
                  ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                  ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                  ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                  ccw_hcpcs_cd.hcpcs_cd,
                  ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                  ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                  ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                  ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                  ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                  ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                  ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                  ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                  ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                  ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                  ccw_rev_prfl.rev_cntr_stus_ind_cd,
                  ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                  ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                  ccw_phys_at_time_of_clm.physn_upin AS rndrng_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi AS rndrng_physn_npi,
                  ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                   FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_ansi_prfl,
                        ccw_owner.ccw_apc_hipps_prfl,
                        ccw_owner.ccw_hcpcs_cd,
                        ccw_owner.ccw_mdfr_prfl,
                        ccw_owner.ccw_rev_cntr_prfl,
                        ccw_owner.ccw_rev_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm
                      ,ccw_owner.fhir_pta_ld_clm_status ptal
                  WHERE ccw_pta_rev_line_fact.clm_type_id =
                  ccw_all_clm_prfl.clm_type_id
               AND ccw_pta_rev_line_fact.ansi_prfl_id =
                  ccw_ansi_prfl.ansi_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                  ccw_apc_hipps_prfl.rev_cntr_apc_id
               AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
               AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                  ccw_mdfr_prfl.mdfr_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_id =
                  ccw_rev_cntr_prfl.rev_cntr_id
               AND ccw_pta_rev_line_fact.rev_prfl_id =
                  ccw_rev_prfl.rev_prfl_id
               AND ccw_pta_rev_line_fact.rndrng_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
               AND ptal.job_ld_dt IS NULL
               AND substr(ptal.bene_id,
                         length(ptal.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(ptal.bene_id,
                                         length(ptal.bene_id) - 1,
                                         2))
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ptal.nch_clm_type_cd = ''10''
                 ) l
         WHERE b.clm_id = l.clm_id');


  END insert_temp_hha_delta_by_part;

  PROCEDURE extract_hha_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2 
                             ,  pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_HHA_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_hha_changes - started');

    dbms_application_info.set_client_info('extract_hha_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'hha_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_hha');

      IF p_part_num IS NULL THEN
        -- Single digit (single thread (or 10?) compare on bene_id)

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_hha
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           l.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_hha_lupa_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_hha_rfrl_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_hha_tot_visit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, '^'), '~'), '01-JAN-1000'), --*** Rev Line Values
           REPLACE(REPLACE(REPLACE(l.clm_line_num, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000'),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+  full (ccw_pta_fact) parallel (16) */            
                    g_version version,
                    pta.dml_ind, 
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    ccw_pta_fact.run_dt,
                    ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    phy.physn_upin       AS at_physn_upin,
                    phy.physn_npi        AS at_physn_npi,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_clm_prfl.clm_pps_ind_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_isohh_prfl.clm_hha_lupa_ind_cd,
                    ccw_isohh_prfl.clm_hha_rfrl_cd,
                    ccw_pta_fact.clm_hha_tot_visit_cnt,
                    ccw_pta_fact.clm_admsn_dt,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                   AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd              AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                   AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd              AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                   AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd              AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                   AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd              AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                   AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd              AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                   AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd              AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                   AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd              AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                   AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd              AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                   AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd              AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                  AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd             AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                  AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd             AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                  AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd             AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                  AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd             AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                  AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd             AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                  AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd             AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                  AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd             AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                  AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd             AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                  AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd             AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                  AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd             AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                  AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd             AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                  AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd             AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                  AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd             AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                  AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd             AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                  AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd             AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                  AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd             AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd       AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd  AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd       AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd  AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd       AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd  AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd       AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd  AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd       AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd  AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd       AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd  AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd       AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd  AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd       AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd  AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd       AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd  AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd      AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd      AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd      AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_pta_fact.bene_id,
                           length(ccw_pta_fact.bene_id),
                           1) bene_part_num,
                      pta.clm_grp_id 
                    , ccw_pta_fact.finl_actn_id   
                     FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_isohh_prfl,
                          phy,  
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl,
                         ccw_owner.fhir_pta_ld_clm_status   pta
                    WHERE ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_fact.ip_snf_clm_fields_id =
                        ccw_clm_prfl.ip_snf_clm_field_id
                     AND ccw_pta_fact.isohh_clm_fields_id =
                        ccw_isohh_prfl.isohh_clm_fields_id
                     AND ccw_pta_fact.atndg_physn_id =
                        phy.physn_id
                     AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                        ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_pta_fact.all_clm_dmgrphc_id =
                        ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                     AND ccw_pta_fact.dgns_e_cd_grp_id =
                        ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND substr(pta.bene_id,
                           length(pta.bene_id),
                           1) = nvl(p_part_num,
                                    substr(pta.bene_id,
                                           length(pta.bene_id),
                                           1))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND pta.nch_clm_type_cd = '10'
                 AND ccw_pta_fact.clm_id = pta.clm_id
                 AND pta.job_ld_dt IS NULL
                   ) b,
                 (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */     
                    g_version                                            version,
                    ptal.dml_ind,
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt                    AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt                    AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd                AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd                     AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    phy.physn_upin                   AS rndrng_physn_upin,
                    phy.physn_npi                    AS rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl,
                          phy, 
                          ccw_owner.fhir_pta_ld_clm_status  ptal
                    WHERE ccw_pta_rev_line_fact.clm_type_id =
                        ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_rev_line_fact.ansi_prfl_id =
                        ccw_ansi_prfl.ansi_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                        ccw_apc_hipps_prfl.rev_cntr_apc_id
                     AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                     AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                        ccw_mdfr_prfl.mdfr_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_id =
                        ccw_rev_cntr_prfl.rev_cntr_id
                     AND ccw_pta_rev_line_fact.rev_prfl_id =
                        ccw_rev_prfl.rev_prfl_id
                     AND ccw_pta_rev_line_fact.rndrng_physn_id =
                        phy.physn_id
                     AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
                     AND ptal.job_ld_dt IS NULL
                     AND substr(ptal.bene_id,
                               length(ptal.bene_id),
                               1) = nvl(p_part_num,
                                        substr(ptal.bene_id,
                                               length(ptal.bene_id),
                                               1))
                     AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                     AND ptal.nch_clm_type_cd = '10'
              ) l
           WHERE b.clm_id = l.clm_id; 

      ELSE

        -- 100 part compare

        --get partition name
        g_part_name := get_part_name(pi_table_name => 'TEMP_HHA',
                                     pi_value      => p_part_num);
        --insert data by partition
        insert_temp_hha_delta_by_part(pi_part_name     => g_part_name,
                                      pi_bene_part_num => p_part_num);

      END IF;

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    END IF;

    COMMIT;

    -- Moving output file writing to a common procedure, so delta hha can use as well.
    output_hha_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN
      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'HHA');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hha_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_HHA_Changes Error: ');
      RAISE;
  END extract_hha_changes;

  ---------------------------------------------------------------------------------------------

  PROCEDURE insert_temp_hospice_by_part(pi_part_name     VARCHAR2,
                                        pi_bene_part_num NUMBER) IS
  BEGIN

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_hosp_by_part: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num);

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_hospice partition (' ||
                      pi_part_name || ')
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id, 
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_hospc_start_dt_id, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(bene_hospc_prd_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   l.clm_line_num,
                                   ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(l.rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                   ''01-JAN-1000''),
           b.bene_part_num,
           REPLACE(REPLACE(REPLACE(REV_CNTR_BENE_PMT_AMT, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(REV_CNTR_PRVDR_PMT_AMT, ''^''), ''~''),
                   ''01-JAN-1000'')
            , b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    pcg.clm_grp_id, 
                    ccw_pta_fact.run_dt,
                    ccw_pta_fact.nch_near_line_rec_ident_cd,
                    ccw_pta_fact.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    ccw_pta_fact.at_physn_upin,
                    ccw_pta_fact.at_physn_npi,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_clm_prfl.nch_ptnt_status_ind_cd,
                    ccw_pta_fact.clm_utlztn_day_cnt,
                    ccw_pta_fact.nch_bene_dschrg_dt,
                    ccw_pta_fact.clm_hospc_start_dt_id,
                    ccw_pta_fact.bene_hospc_prd_cnt,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                   AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd              AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                   AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd              AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                   AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd              AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                   AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd              AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                   AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd              AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                   AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd              AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                   AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd              AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                   AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd              AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                   AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd              AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                  AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd             AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                  AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd             AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                  AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd             AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                  AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd             AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                  AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd             AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                  AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd             AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                  AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd             AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                  AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd             AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                  AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd             AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                  AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd             AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                  AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd             AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                  AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd             AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                  AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd             AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                  AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd             AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                  AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd             AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                  AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd             AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd       AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd  AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd       AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd  AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd       AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd  AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd       AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd  AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd       AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd  AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd       AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd  AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd       AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd  AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd       AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd  AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd       AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd  AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd      AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd      AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd      AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_fact.bene_part_num
                    ,ccw_pta_fact.finl_actn_id
                     FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_isohh_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl ,
                          ccw_owner.fhir_pta_clm_grp         pcg 
                    WHERE ccw_pta_fact.ip_snf_clm_fields_id =
                    ccw_clm_prfl.ip_snf_clm_field_id
                 AND ccw_pta_fact.isohh_clm_fields_id =
                    ccw_isohh_prfl.isohh_clm_fields_id
                 AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                    ccw_prvdr_at_time_of_clm.prvdr_id
                 AND ccw_pta_fact.all_clm_dmgrphc_id =
                    ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                 AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND ccw_pta_fact.dgns_e_cd_grp_id =
                    ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND ccw_pta_fact.nch_clm_type_cd = ''50''
                 AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
                 AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
                 AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
                 AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
                 AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                 AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                 AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd 
                 AND ccw_pta_fact.bene_part_num =
                    nvl(' || pi_bene_part_num ||
                      ', ccw_pta_fact.bene_part_num)
                   ) b,
                 (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_pta_rev_line_fact.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    ccw_pta_rev_line_fact.rndrng_physn_upin,
                    ccw_pta_rev_line_fact.rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_rev_line_fact.rev_cntr_bene_pmt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_prvdr_pmt_amt
                     FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl
                    WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                    ccw_ansi_prfl.ansi_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                    ccw_apc_hipps_prfl.rev_cntr_apc_id
                 AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                 AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                    ccw_mdfr_prfl.mdfr_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_id =
                    ccw_rev_cntr_prfl.rev_cntr_id
                 AND ccw_pta_rev_line_fact.rev_prfl_id =
                    ccw_rev_prfl.rev_prfl_id
                 AND ccw_pta_rev_line_fact.nch_clm_type_cd = ''50''
                 AND ccw_pta_rev_line_fact.bene_part_num =
                    nvl(' || pi_bene_part_num ||
                      ', ccw_pta_rev_line_fact.bene_part_num)
                   ) l
           WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_hospice_by_part;

  ---------------------------------------------------------------------------------------------

  PROCEDURE extract_hospice(p_part_num     VARCHAR2,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE',
                            pb_load_data   VARCHAR2 DEFAULT 'FALSE',
                            pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                            pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                            pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                          , pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_HOSPICE',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hospice - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    dbms_application_info.set_client_info('temp_hospice');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'hospice' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_hospice');

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_HOSPICE',
                                   pi_value      => p_part_num);
      --insert by partition
      insert_temp_hospice_by_part(pi_part_name     => g_part_name,
                                  pi_bene_part_num => p_part_num);

      COMMIT;

      --dbms_stats.gather_table_stats('CCW_OWNER', 'TEMP_HOSPICE');
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_HOSPICE',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_HOSPICE',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
    END IF;

    -- Moving output file writing to a common procedure, so delta hha can use as well.
    output_hospice_file(p_part_num, pb_output_data);

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'HOSPICE');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hospice - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_hospice Error: ');
      RAISE;
  END extract_hospice;

  PROCEDURE insert_hospice_delta_by_part(pi_part_name     VARCHAR2,
                                         pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_hospice PARTITION (' ||
                      pi_part_name || ')
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         b.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_hospc_start_dt_id, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(bene_hospc_prd_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE( --Rev Line Values
                                 l.clm_line_num,
                                 ''^''),
                         ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(l.rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                 ''01-JAN-1000''),
         b.bene_part_num,
         REPLACE(REPLACE(REPLACE(rev_cntr_bene_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_prvdr_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000'')
          ,b.finl_actn_id
          FROM (SELECT /*+ full (ccw_pta_fact) parallel (16) */         
                            ' || g_version ||
                      ' version,
                        pta.dml_ind,    -- 3.16 -- ''INSERT'' dml_ind,
                        ccw_pta_fact.bene_id,
                        ccw_pta_fact.clm_id,
                        ccw_pta_fact.run_dt,
                        ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                        ccw_all_clm_prfl.nch_clm_type_cd,
                        ccw_pta_fact.clm_from_dt,
                        ccw_pta_fact.clm_thru_dt,
                        ccw_pta_fact.nch_wkly_proc_dt,
                        ccw_pta_fact.fi_clm_proc_dt,
                        ccw_prvdr_at_time_of_clm.prvdr_num,
                        ccw_isohh_prfl.clm_fac_type_cd,
                        ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                        ccw_isohh_prfl.clm_freq_cd,
                        ccw_pta_fact.fi_num,
                        ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                        ccw_pta_fact.clm_pmt_amt,
                        ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                        ccw_isohh_prfl.nch_prmry_pyr_cd,
                        ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                        ccw_prvdr_at_time_of_clm.org_npi_num,
                        ccw_phys_at_time_of_clm.physn_upin AS at_physn_upin,
                        ccw_phys_at_time_of_clm.physn_npi AS at_physn_npi,
                        ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                        ccw_pta_fact.clm_tot_chrg_amt,
                        ccw_clm_prfl.nch_ptnt_status_ind_cd,
                        ccw_pta_fact.clm_utlztn_day_cnt,
                        ccw_pta_fact.nch_bene_dschrg_dt,
                        ccw_pta_fact.clm_hospc_start_dt_id,
                        ccw_pta_fact.bene_hospc_prd_cnt,
                        ccw_pta_fact.prncpal_dgns_cd,
                        ccw_pta_fact.prncpal_dgns_vrsn_cd,
                        ccw_pta_fact.dgns_1_cd AS icd_dgns_cd1,
                        ccw_pta_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                        ccw_pta_fact.dgns_2_cd AS icd_dgns_cd2,
                        ccw_pta_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                        ccw_pta_fact.dgns_3_cd AS icd_dgns_cd3,
                        ccw_pta_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                        ccw_pta_fact.dgns_4_cd AS icd_dgns_cd4,
                        ccw_pta_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                        ccw_pta_fact.dgns_5_cd AS icd_dgns_cd5,
                        ccw_pta_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                        ccw_pta_fact.dgns_6_cd AS icd_dgns_cd6,
                        ccw_pta_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                        ccw_pta_fact.dgns_7_cd AS icd_dgns_cd7,
                        ccw_pta_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                        ccw_pta_fact.dgns_8_cd AS icd_dgns_cd8,
                        ccw_pta_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                        ccw_pta_fact.dgns_9_cd AS icd_dgns_cd9,
                        ccw_pta_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                        ccw_pta_fact.dgns_10_cd AS icd_dgns_cd10,
                        ccw_pta_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                        ccw_pta_fact.dgns_11_cd AS icd_dgns_cd11,
                        ccw_pta_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                        ccw_pta_fact.dgns_12_cd AS icd_dgns_cd12,
                        ccw_pta_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                        ccw_pta_fact.dgns_13_cd AS icd_dgns_cd13,
                        ccw_pta_fact.dgns_13_vrsn_cd AS icd_dgns_vrsn_cd13,
                        ccw_pta_fact.dgns_14_cd AS icd_dgns_cd14,
                        ccw_pta_fact.dgns_14_vrsn_cd AS icd_dgns_vrsn_cd14,
                        ccw_pta_fact.dgns_15_cd AS icd_dgns_cd15,
                        ccw_pta_fact.dgns_15_vrsn_cd AS icd_dgns_vrsn_cd15,
                        ccw_pta_fact.dgns_16_cd AS icd_dgns_cd16,
                        ccw_pta_fact.dgns_16_vrsn_cd AS icd_dgns_vrsn_cd16,
                        ccw_pta_fact.dgns_17_cd AS icd_dgns_cd17,
                        ccw_pta_fact.dgns_17_vrsn_cd AS icd_dgns_vrsn_cd17,
                        ccw_pta_fact.dgns_18_cd AS icd_dgns_cd18,
                        ccw_pta_fact.dgns_18_vrsn_cd AS icd_dgns_vrsn_cd18,
                        ccw_pta_fact.dgns_19_cd AS icd_dgns_cd19,
                        ccw_pta_fact.dgns_19_vrsn_cd AS icd_dgns_vrsn_cd19,
                        ccw_pta_fact.dgns_20_cd AS icd_dgns_cd20,
                        ccw_pta_fact.dgns_20_vrsn_cd AS icd_dgns_vrsn_cd20,
                        ccw_pta_fact.dgns_21_cd AS icd_dgns_cd21,
                        ccw_pta_fact.dgns_21_vrsn_cd AS icd_dgns_vrsn_cd21,
                        ccw_pta_fact.dgns_22_cd AS icd_dgns_cd22,
                        ccw_pta_fact.dgns_22_vrsn_cd AS icd_dgns_vrsn_cd22,
                        ccw_pta_fact.dgns_23_cd AS icd_dgns_cd23,
                        ccw_pta_fact.dgns_23_vrsn_cd AS icd_dgns_vrsn_cd23,
                        ccw_pta_fact.dgns_24_cd AS icd_dgns_cd24,
                        ccw_pta_fact.dgns_24_vrsn_cd AS icd_dgns_vrsn_cd24,
                        ccw_pta_fact.dgns_25_cd AS icd_dgns_cd25,
                        ccw_pta_fact.dgns_25_vrsn_cd AS icd_dgns_vrsn_cd25,
                        ccw_pta_fact.fst_dgns_e_cd,
                        ccw_pta_fact.fst_dgns_e_vrsn_cd,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd AS icd_dgns_e_cd1,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd AS icd_dgns_e_vrsn_cd1,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd AS icd_dgns_e_cd2,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd AS icd_dgns_e_vrsn_cd2,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd AS icd_dgns_e_cd3,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd AS icd_dgns_e_vrsn_cd3,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd AS icd_dgns_e_cd4,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd AS icd_dgns_e_vrsn_cd4,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd AS icd_dgns_e_cd5,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd AS icd_dgns_e_vrsn_cd5,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd AS icd_dgns_e_cd6,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd AS icd_dgns_e_vrsn_cd6,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd AS icd_dgns_e_cd7,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd AS icd_dgns_e_vrsn_cd7,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd AS icd_dgns_e_cd8,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd AS icd_dgns_e_vrsn_cd8,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd AS icd_dgns_e_cd9,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd AS icd_dgns_e_vrsn_cd9,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd AS icd_dgns_e_cd10,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd AS icd_dgns_e_cd11,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd AS icd_dgns_e_cd12,
                        ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                        ccw_all_clm_dmgrphc_prfl.dob_dt,
                        ccw_all_clm_dmgrphc_prfl.gndr_cd,
                        ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                        ccw_geo_prfl.bene_cnty_cd,
                        ccw_geo_prfl.bene_state_cd,
                        ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                        '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                        ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                        substr(ccw_pta_fact.bene_id,
                               length(ccw_pta_fact.bene_id) - 1,
                               2) bene_part_num
                           ,pta.clm_grp_id  
                        , pta.finl_actn_id
                   FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_clm_prfl,
                        ccw_owner.ccw_isohh_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm,
                        ccw_owner.ccw_prvdr_at_time_of_clm,
                        ccw_owner.ccw_all_clm_dmgrphc_prfl,
                        ccw_owner.ccw_geo_prfl,
                        ccw_owner.ccw_dgns_e_cd_grp_prfl
                        ,ccw_owner.fhir_pta_ld_clm_status pta
                  WHERE ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
               AND ccw_pta_fact.ip_snf_clm_fields_id =
                  ccw_clm_prfl.ip_snf_clm_field_id
               AND ccw_pta_fact.isohh_clm_fields_id =
                  ccw_isohh_prfl.isohh_clm_fields_id
               AND ccw_pta_fact.atndg_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                  ccw_prvdr_at_time_of_clm.prvdr_id
               AND ccw_pta_fact.all_clm_dmgrphc_id =
                  ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
               AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
               AND ccw_pta_fact.dgns_e_cd_grp_id =
                  ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
               AND substr(pta.bene_id,
                         length(pta.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(pta.bene_id,
                                         length(pta.bene_id) - 1,
                                         2))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND pta.nch_clm_type_cd = ''50''
               AND ccw_pta_fact.clm_id = pta.clm_id
               AND pta.job_ld_dt IS NULL
                 ) b,
               (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */   
                  ' || g_version ||
                      ' version,
                  ptal.dml_ind,    
                  ccw_pta_rev_line_fact.bene_id,
                  ccw_pta_rev_line_fact.clm_id,
                  ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                  ccw_pta_rev_line_fact.clm_line_num,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_rev_cntr_prfl.rev_cntr,
                  ccw_pta_rev_line_fact.rev_cntr_dt                    AS rev_cntr_dt,
                  ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                  ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                  ccw_hcpcs_cd.hcpcs_cd,
                  ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                  ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                  ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd                AS rev_cntr_pmt_mthd_ind_cd_old,
                  ccw_rev_prfl.rev_cntr_pmt_ind_cd                     AS rev_cntr_pmt_mthd_ind_cd,
                  ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                  ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                  ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                  ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                  ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                  ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                  ccw_rev_prfl.rev_cntr_stus_ind_cd,
                  ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                  ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                  ccw_phys_at_time_of_clm.physn_upin                   AS rndrng_physn_upin,
                  ccw_phys_at_time_of_clm.physn_npi                    AS rndrng_physn_npi,
                  ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id,
                  ccw_pta_rev_line_fact.rev_cntr_bene_pmt_amt,
                  ccw_pta_rev_line_fact.rev_cntr_prvdr_pmt_amt
                   FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_ansi_prfl,
                        ccw_owner.ccw_apc_hipps_prfl,
                        ccw_owner.ccw_hcpcs_cd,
                        ccw_owner.ccw_mdfr_prfl,
                        ccw_owner.ccw_rev_cntr_prfl,
                        ccw_owner.ccw_rev_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm
                      ,ccw_owner.fhir_pta_ld_clm_status ptal
                  WHERE ccw_pta_rev_line_fact.clm_type_id =
                  ccw_all_clm_prfl.clm_type_id
               AND ccw_pta_rev_line_fact.ansi_prfl_id =
                  ccw_ansi_prfl.ansi_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                  ccw_apc_hipps_prfl.rev_cntr_apc_id
               AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
               AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                  ccw_mdfr_prfl.mdfr_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_id =
                  ccw_rev_cntr_prfl.rev_cntr_id
               AND ccw_pta_rev_line_fact.rev_prfl_id =
                  ccw_rev_prfl.rev_prfl_id
               AND ccw_pta_rev_line_fact.rndrng_physn_id =
                  ccw_phys_at_time_of_clm.physn_id
               AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
               AND ptal.job_ld_dt IS NULL
               AND substr(ptal.bene_id,
                         length(ptal.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(ptal.bene_id,
                                         length(ptal.bene_id) - 1,
                                         2))
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ptal.nch_clm_type_cd = ''50''
                 ) l
         WHERE b.clm_id = l.clm_id'); 

  END insert_hospice_delta_by_part;

  PROCEDURE extract_hospice_changes(p_strt_dt      DATE,
                                    p_end_dt       DATE,
                                    p_prcsg_dt     DATE,
                                    p_part_num     VARCHAR2,
                                    pb_load_data   VARCHAR2, 
                                    pb_new_version VARCHAR2 
                                  , pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_HOSPICE_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_hospice_changes - started');

    dbms_application_info.set_client_info('extract_hospice_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'hospice_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_hospice');

      IF p_part_num IS NULL THEN
        -- Single digit (single thread (or 10?) compare on bene_id)

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_hospice
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_hospc_start_dt_id, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_hospc_prd_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   l.clm_line_num,
                                   '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(l.rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000'),
           b.bene_part_num,
           REPLACE(REPLACE(REPLACE(rev_cntr_bene_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_prvdr_pmt_amt, '^'), '~'),
                   '01-JAN-1000') --
            , b.finl_actn_id
            FROM (SELECT /*+ full (ccw_pta_fact) parallel (16) */      
                    g_version                                   version,
                    pta.dml_ind, 
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    ccw_pta_fact.run_dt,
                    ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    phy.physn_upin          AS at_physn_upin,
                    phy.physn_npi           AS at_physn_npi,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_clm_prfl.nch_ptnt_status_ind_cd,
                    ccw_pta_fact.clm_utlztn_day_cnt,
                    ccw_pta_fact.nch_bene_dschrg_dt,
                    ccw_pta_fact.clm_hospc_start_dt_id,
                    ccw_pta_fact.bene_hospc_prd_cnt,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_pta_fact.bene_id,
                           length(ccw_pta_fact.bene_id),
                           1) bene_part_num
                   ,  pta.clm_grp_id                
                    , ccw_pta_fact.finl_actn_id   
                     FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_isohh_prfl,
                          phy,  
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl,
                          ccw_owner.fhir_pta_ld_clm_status   pta
                    WHERE ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_fact.ip_snf_clm_fields_id =
                        ccw_clm_prfl.ip_snf_clm_field_id
                     AND ccw_pta_fact.isohh_clm_fields_id =
                        ccw_isohh_prfl.isohh_clm_fields_id
                     AND ccw_pta_fact.atndg_physn_id =
                        phy.physn_id
                     AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                        ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_pta_fact.all_clm_dmgrphc_id =
                        ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                     AND ccw_pta_fact.dgns_e_cd_grp_id =
                        ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND substr(pta.bene_id,
                           length(pta.bene_id),
                           1) = nvl(p_part_num,
                                    substr(pta.bene_id,
                                           length(pta.bene_id),
                                           1))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND pta.nch_clm_type_cd = '50'
                 AND ccw_pta_fact.clm_id = pta.clm_id
                 AND pta.job_ld_dt IS NULL
                   ) b,
                 (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */   
                    g_version                          version,
                    ptal.dml_ind, 
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt  AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt                    AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd                AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd                     AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    phy.physn_upin                   AS rndrng_physn_upin,
                    phy.physn_npi                    AS rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_rev_line_fact.rev_cntr_bene_pmt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_prvdr_pmt_amt
                     FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl,
                          phy,
                          ccw_owner.fhir_pta_ld_clm_status  ptal
                    WHERE ccw_pta_rev_line_fact.clm_type_id =
                        ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_rev_line_fact.ansi_prfl_id =
                        ccw_ansi_prfl.ansi_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                        ccw_apc_hipps_prfl.rev_cntr_apc_id
                     AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                     AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                        ccw_mdfr_prfl.mdfr_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_id =
                        ccw_rev_cntr_prfl.rev_cntr_id
                     AND ccw_pta_rev_line_fact.rev_prfl_id =
                        ccw_rev_prfl.rev_prfl_id
                     AND ccw_pta_rev_line_fact.rndrng_physn_id =
                        phy.physn_id
                     AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
                     AND ptal.job_ld_dt IS NULL
                 AND substr(ptal.bene_id,
                           length(ptal.bene_id),
                           1) = nvl(p_part_num,
                                    substr(ptal.bene_id,
                                           length(ptal.bene_id),
                                           1))
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ptal.nch_clm_type_cd = '50'
                    ) l
           WHERE b.clm_id = l.clm_id;
      ELSE
        -- 100 part compare
        --get partition name
        g_part_name := get_part_name(pi_table_name => 'TEMP_HOSPICE',
                                     pi_value      => p_part_num);
        --insert data by partition
        insert_hospice_delta_by_part(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num);

      END IF;

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

    END IF;

    -- Moving output file writing to a common procedure, so delta hospice can use as well.
    output_hospice_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN
      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'HOSPICE');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_hospice_changes - finished');

    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_hospice_changes Error: ');
      RAISE;
  END extract_hospice_changes;

  PROCEDURE insert_temp_inpatient_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
    v_date_char VARCHAR2(8);
  BEGIN
    v_date_char := to_char(g_3_yr_dt, 'MMDDYYYY');
    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_inpatient partition(' ||
                      pi_part_name || ')
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(claim_query_code, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(op_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(op_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pass_thru_per_diem_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_profnl_cmpnt_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_tot_pps_cptl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_drg_wt_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(bene_lrd_used_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_drg_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_drg_outlier_stay_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_drg_outlier_aprvd_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(admtg_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ime_op_clm_val_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(dsh_op_clm_val_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   l.clm_line_num,
                                   ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                   ''01-JAN-1000''),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                   ccw_pta_fact.bene_id,
                   ccw_pta_fact.clm_id,
                   pcg.clm_grp_id,
                   ccw_pta_fact.run_dt,
                   ccw_pta_fact.nch_near_line_rec_ident_cd,
                   ccw_pta_fact.nch_clm_type_cd,
                   ccw_pta_fact.clm_from_dt,
                   ccw_pta_fact.clm_thru_dt,
                   ccw_pta_fact.nch_wkly_proc_dt,
                   ccw_pta_fact.fi_clm_proc_dt,
                   ccw_isohh_prfl.claim_query_code,
                   ccw_prvdr_at_time_of_clm.prvdr_num,
                   ccw_isohh_prfl.clm_fac_type_cd,
                   ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                   ccw_isohh_prfl.clm_freq_cd,
                   ccw_pta_fact.fi_num,
                   ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                   ccw_pta_fact.clm_pmt_amt,
                   ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                   ccw_isohh_prfl.nch_prmry_pyr_cd,
                   ccw_clm_prfl.fi_clm_actn_cd,
                   ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                   ccw_prvdr_at_time_of_clm.org_npi_num,
                   ccw_pta_fact.at_physn_upin, --added ty
                   ccw_pta_fact.at_physn_npi, --added ty
                   ccw_pta_fact.op_physn_upin, --added ty
                   ccw_pta_fact.op_physn_npi, --added ty
                   ccw_pta_fact.ot_physn_upin, --added ty
                   ccw_pta_fact.ot_physn_npi, --added ty
                   ccw_clm_prfl.clm_mco_pd_sw,
                   ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                   ccw_clm_prfl.clm_pps_ind_cd,
                   ccw_pta_fact.clm_tot_chrg_amt,
                   ccw_pta_fact.clm_admsn_dt,
                   ccw_clm_prfl.clm_ip_admsn_type_cd,
                   ccw_clm_prfl.clm_src_ip_admsn_cd,
                   ccw_clm_prfl.nch_ptnt_status_ind_cd,
                   ccw_pta_fact.clm_pass_thru_per_diem_amt,
                   ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                   ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                   ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                   ccw_pta_fact.nch_profnl_cmpnt_chrg_amt,
                   ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                   ccw_pta_fact.nch_ip_tot_ddctn_amt,
                   ccw_pta_fact.clm_tot_pps_cptl_amt,
                   ccw_pta_fact.clm_pps_cptl_fsp_amt,
                   ccw_pta_fact.clm_pps_cptl_outlier_amt,
                   ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                   ccw_pta_fact.clm_pps_cptl_ime_amt,
                   ccw_pta_fact.clm_pps_cptl_excptn_amt,
                   ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                   ccw_pta_fact.clm_pps_cptl_drg_wt_num,
                   ccw_pta_fact.clm_utlztn_day_cnt,
                   ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                   ccw_pta_fact.bene_lrd_used_cnt,
                   ccw_pta_fact.clm_non_utlztn_days_cnt,
                   ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                   ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                   ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                   ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                   ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                   ccw_pta_fact.nch_bene_dschrg_dt,
                   ccw_drg.clm_drg_cd,
                   ccw_drg.clm_drg_outlier_stay_cd,
                   ccw_pta_fact.nch_drg_outlier_aprvd_pmt_amt,
                   v.dsh_op_clm_val_amt,
                   v2.ime_op_clm_val_amt,
                   ccw_pta_fact.admtg_dgns_cd,
                   ccw_pta_fact.admtg_dgns_vrsn_cd,
                   ccw_pta_fact.prncpal_dgns_cd,
                   ccw_pta_fact.prncpal_dgns_vrsn_cd,
                   ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                   ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                   ccw_pta_fact.dgns_1_poa_ind_cd              AS clm_poa_ind_sw1,
                   ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                   ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                   ccw_pta_fact.dgns_2_poa_ind_cd              AS clm_poa_ind_sw2,
                   ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                   ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                   ccw_pta_fact.dgns_3_poa_ind_cd              AS clm_poa_ind_sw3,
                   ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                   ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                   ccw_pta_fact.dgns_4_poa_ind_cd              AS clm_poa_ind_sw4,
                   ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                   ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                   ccw_pta_fact.dgns_5_poa_ind_cd              AS clm_poa_ind_sw5,
                   ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                   ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                   ccw_pta_fact.dgns_6_poa_ind_cd              AS clm_poa_ind_sw6,
                   ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                   ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                   ccw_pta_fact.dgns_7_poa_ind_cd              AS clm_poa_ind_sw7,
                   ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                   ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                   ccw_pta_fact.dgns_8_poa_ind_cd              AS clm_poa_ind_sw8,
                   ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                   ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                   ccw_pta_fact.dgns_9_poa_ind_cd              AS clm_poa_ind_sw9,
                   ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                   ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                   ccw_pta_fact.dgns_10_poa_ind_cd             AS clm_poa_ind_sw10,
                   ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                   ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                   ccw_pta_fact.dgns_11_poa_ind_cd             AS clm_poa_ind_sw11,
                   ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                   ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                   ccw_pta_fact.dgns_12_poa_ind_cd             AS clm_poa_ind_sw12,
                   ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                   ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                   ccw_pta_fact.dgns_13_poa_ind_cd             AS clm_poa_ind_sw13,
                   ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                   ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                   ccw_pta_fact.dgns_14_poa_ind_cd             AS clm_poa_ind_sw14,
                   ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                   ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                   ccw_pta_fact.dgns_15_poa_ind_cd             AS clm_poa_ind_sw15,
                   ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                   ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                   ccw_pta_fact.dgns_16_poa_ind_cd             AS clm_poa_ind_sw16,
                   ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                   ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                   ccw_pta_fact.dgns_17_poa_ind_cd             AS clm_poa_ind_sw17,
                   ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                   ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                   ccw_pta_fact.dgns_18_poa_ind_cd             AS clm_poa_ind_sw18,
                   ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                   ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                   ccw_pta_fact.dgns_19_poa_ind_cd             AS clm_poa_ind_sw19,
                   ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                   ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                   ccw_pta_fact.dgns_20_poa_ind_cd             AS clm_poa_ind_sw20,
                   ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                   ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                   ccw_pta_fact.dgns_21_poa_ind_cd             AS clm_poa_ind_sw21,
                   ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                   ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                   ccw_pta_fact.dgns_22_poa_ind_cd             AS clm_poa_ind_sw22,
                   ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                   ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                   ccw_pta_fact.dgns_23_poa_ind_cd             AS clm_poa_ind_sw23,
                   ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                   ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                   ccw_pta_fact.dgns_24_poa_ind_cd             AS clm_poa_ind_sw24,
                   ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                   ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                   ccw_pta_fact.dgns_25_poa_ind_cd             AS clm_poa_ind_sw25,
                   ccw_pta_fact.fst_dgns_e_cd,
                   ccw_pta_fact.fst_dgns_e_vrsn_cd,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_poa_ind_cd  AS clm_e_poa_ind_sw1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_poa_ind_cd  AS clm_e_poa_ind_sw2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_poa_ind_cd  AS clm_e_poa_ind_sw3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_poa_ind_cd  AS clm_e_poa_ind_sw4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_poa_ind_cd  AS clm_e_poa_ind_sw5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_poa_ind_cd  AS clm_e_poa_ind_sw6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_poa_ind_cd  AS clm_e_poa_ind_sw7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_poa_ind_cd  AS clm_e_poa_ind_sw8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_poa_ind_cd  AS clm_e_poa_ind_sw9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_poa_ind_cd AS clm_e_poa_ind_sw10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_poa_ind_cd AS clm_e_poa_ind_sw11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_poa_ind_cd AS clm_e_poa_ind_sw12,
                   ccw_pta_fact.prcdr_1_cd                     AS icd_prcdr_cd1,
                   ccw_pta_fact.prcdr_1_vrsn_cd                AS icd_prcdr_vrsn_cd1,
                   ccw_pta_fact.prcdr_2_cd                     AS icd_prcdr_cd2,
                   ccw_pta_fact.prcdr_2_vrsn_cd                AS icd_prcdr_vrsn_cd2,
                   ccw_pta_fact.prcdr_3_cd                     AS icd_prcdr_cd3,
                   ccw_pta_fact.prcdr_3_vrsn_cd                AS icd_prcdr_vrsn_cd3,
                   ccw_pta_fact.prcdr_4_cd                     AS icd_prcdr_cd4,
                   ccw_pta_fact.prcdr_4_vrsn_cd                AS icd_prcdr_vrsn_cd4,
                   ccw_pta_fact.prcdr_5_cd                     AS icd_prcdr_cd5,
                   ccw_pta_fact.prcdr_5_vrsn_cd                AS icd_prcdr_vrsn_cd5,
                   ccw_pta_fact.prcdr_6_cd                     AS icd_prcdr_cd6,
                   ccw_pta_fact.prcdr_6_vrsn_cd                AS icd_prcdr_vrsn_cd6,
                   ccw_pta_fact.prcdr_7_cd                     AS icd_prcdr_cd7,
                   ccw_pta_fact.prcdr_7_vrsn_cd                AS icd_prcdr_vrsn_cd7,
                   ccw_pta_fact.prcdr_8_cd                     AS icd_prcdr_cd8,
                   ccw_pta_fact.prcdr_8_vrsn_cd                AS icd_prcdr_vrsn_cd8,
                   ccw_pta_fact.prcdr_9_cd                     AS icd_prcdr_cd9,
                   ccw_pta_fact.prcdr_9_vrsn_cd                AS icd_prcdr_vrsn_cd9,
                   ccw_pta_fact.prcdr_10_cd                    AS icd_prcdr_cd10,
                   ccw_pta_fact.prcdr_10_vrsn_cd               AS icd_prcdr_vrsn_cd10,
                   ccw_pta_fact.prcdr_11_cd                    AS icd_prcdr_cd11,
                   ccw_pta_fact.prcdr_11_vrsn_cd               AS icd_prcdr_vrsn_cd11,
                   ccw_pta_fact.prcdr_12_cd                    AS icd_prcdr_cd12,
                   ccw_pta_fact.prcdr_12_vrsn_cd               AS icd_prcdr_vrsn_cd12,
                   ccw_pta_fact.prcdr_13_cd                    AS icd_prcdr_cd13,
                   ccw_pta_fact.prcdr_13_vrsn_cd               AS icd_prcdr_vrsn_cd13,
                   ccw_pta_fact.prcdr_14_cd                    AS icd_prcdr_cd14,
                   ccw_pta_fact.prcdr_14_vrsn_cd               AS icd_prcdr_vrsn_cd14,
                   ccw_pta_fact.prcdr_15_cd                    AS icd_prcdr_cd15,
                   ccw_pta_fact.prcdr_15_vrsn_cd               AS icd_prcdr_vrsn_cd15,
                   ccw_pta_fact.prcdr_16_cd                    AS icd_prcdr_cd16,
                   ccw_pta_fact.prcdr_16_vrsn_cd               AS icd_prcdr_vrsn_cd16,
                   ccw_pta_fact.prcdr_17_cd                    AS icd_prcdr_cd17,
                   ccw_pta_fact.prcdr_17_vrsn_cd               AS icd_prcdr_vrsn_cd17,
                   ccw_pta_fact.prcdr_18_cd                    AS icd_prcdr_cd18,
                   ccw_pta_fact.prcdr_18_vrsn_cd               AS icd_prcdr_vrsn_cd18,
                   ccw_pta_fact.prcdr_19_cd                    AS icd_prcdr_cd19,
                   ccw_pta_fact.prcdr_19_vrsn_cd               AS icd_prcdr_vrsn_cd19,
                   ccw_pta_fact.prcdr_20_cd                    AS icd_prcdr_cd20,
                   ccw_pta_fact.prcdr_20_vrsn_cd               AS icd_prcdr_vrsn_cd20,
                   ccw_pta_fact.prcdr_21_cd                    AS icd_prcdr_cd21,
                   ccw_pta_fact.prcdr_21_vrsn_cd               AS icd_prcdr_vrsn_cd21,
                   ccw_pta_fact.prcdr_22_cd                    AS icd_prcdr_cd22,
                   ccw_pta_fact.prcdr_22_vrsn_cd               AS icd_prcdr_vrsn_cd22,
                   ccw_pta_fact.prcdr_23_cd                    AS icd_prcdr_cd23,
                   ccw_pta_fact.prcdr_23_vrsn_cd               AS icd_prcdr_vrsn_cd23,
                   ccw_pta_fact.prcdr_24_cd                    AS icd_prcdr_cd24,
                   ccw_pta_fact.prcdr_24_vrsn_cd               AS icd_prcdr_vrsn_cd24,
                   ccw_pta_fact.prcdr_25_cd                    AS icd_prcdr_cd25,
                   ccw_pta_fact.prcdr_25_vrsn_cd               AS icd_prcdr_vrsn_cd25,
                   ccw_pta_fact.prcdr_1_dt                     AS prcdr_dt1,
                   ccw_pta_fact.prcdr_2_dt                     AS prcdr_dt2,
                   ccw_pta_fact.prcdr_3_dt                     AS prcdr_dt3,
                   ccw_pta_fact.prcdr_4_dt                     AS prcdr_dt4,
                   ccw_pta_fact.prcdr_5_dt                     AS prcdr_dt5,
                   ccw_pta_fact.prcdr_6_dt                     AS prcdr_dt6,
                   ccw_pta_fact.prcdr_7_dt                     AS prcdr_dt7,
                   ccw_pta_fact.prcdr_8_dt                     AS prcdr_dt8,
                   ccw_pta_fact.prcdr_9_dt                     AS prcdr_dt9,
                   ccw_pta_fact.prcdr_10_dt                    AS prcdr_dt10,
                   ccw_pta_fact.prcdr_11_dt                    AS prcdr_dt11,
                   ccw_pta_fact.prcdr_12_dt                    AS prcdr_dt12,
                   ccw_pta_fact.prcdr_13_dt                    AS prcdr_dt13,
                   ccw_pta_fact.prcdr_14_dt                    AS prcdr_dt14,
                   ccw_pta_fact.prcdr_15_dt                    AS prcdr_dt15,
                   ccw_pta_fact.prcdr_16_dt                    AS prcdr_dt16,
                   ccw_pta_fact.prcdr_17_dt                    AS prcdr_dt17,
                   ccw_pta_fact.prcdr_18_dt                    AS prcdr_dt18,
                   ccw_pta_fact.prcdr_19_dt                    AS prcdr_dt19,
                   ccw_pta_fact.prcdr_20_dt                    AS prcdr_dt20,
                   ccw_pta_fact.prcdr_21_dt                    AS prcdr_dt21,
                   ccw_pta_fact.prcdr_22_dt                    AS prcdr_dt22,
                   ccw_pta_fact.prcdr_23_dt                    AS prcdr_dt23,
                   ccw_pta_fact.prcdr_24_dt                    AS prcdr_dt24,
                   ccw_pta_fact.prcdr_25_dt                    AS prcdr_dt25,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                   ccw_geo_prfl.bene_cnty_cd,
                   ccw_geo_prfl.bene_state_cd,
                   ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                   '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                   ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                   ccw_pta_fact.bene_part_num
                   ,ccw_pta_fact.finl_actn_id
                    FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                         ccw_owner.ccw_all_clm_prfl,
                         ccw_owner.ccw_clm_prfl,
                         ccw_owner.ccw_drg,
                         ccw_owner.ccw_isohh_prfl,
                         ccw_owner.ccw_prvdr_at_time_of_clm,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.ccw_geo_prfl,
                         ccw_owner.ccw_dgns_e_cd_grp_prfl,
                         ccw_owner.fhir_pta_clm_grp pcg,
                         (SELECT /*+ full(vc) */ SUM(vc.clm_val_amt) dsh_op_clm_val_amt,
                                 vc.bene_id,
                                 vc.clm_id,
                                 vc.clm_thru_dt
                            FROM ccw_owner.ccw_val_cd vc
                           WHERE vc.clm_val_cd = ''18''
                                 AND
                                 vc.clm_thru_dt >= trunc(to_date(''' ||
                      v_date_char ||
                      ''', ''mmddyyyy''), ''YEAR'') --added ty
                           GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v,
                         (SELECT /*+ full(vc) */ SUM(vc.clm_val_amt) ime_op_clm_val_amt,
                                 vc.bene_id,
                                 vc.clm_id,
                                 vc.clm_thru_dt
                            FROM ccw_owner.ccw_val_cd vc
                           WHERE vc.clm_val_cd = ''19''
                                 AND
                                 vc.clm_thru_dt >= trunc(to_date(''' ||
                      v_date_char || ''', ''mmddyyyy''), ''YEAR'') --added ty
                           GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v2
                   WHERE ccw_pta_fact.ip_snf_clm_fields_id =
                   ccw_clm_prfl.ip_snf_clm_field_id
                   AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                   AND ccw_pta_fact.isohh_clm_fields_id =
                   ccw_isohh_prfl.isohh_clm_fields_id
                   AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                   ccw_prvdr_at_time_of_clm.prvdr_id
                   AND ccw_pta_fact.all_clm_dmgrphc_id =
                   ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                   AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                   AND ccw_pta_fact.dgns_e_cd_grp_id =
                   ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                   AND ccw_pta_fact.nch_clm_type_cd IN (''60'', ''61'', ''62'')
                    AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
                    AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
                    AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
                    AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
                    AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                    AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                    AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd
                   AND ccw_pta_fact.bene_part_num =
                   nvl(' || pi_bene_part_num ||
                      ', ccw_pta_fact.bene_part_num)
                   AND v.clm_id(+) = ccw_pta_fact.clm_id
                   AND v.bene_id(+) = ccw_pta_fact.bene_id
                   AND v2.clm_id(+) = ccw_pta_fact.clm_id
                   AND v2.bene_id(+) = ccw_pta_fact.bene_id
                   AND v2.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
                   AND v.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
                  ) b,
                 (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                   ''INSERT'' dml_ind,
                   ccw_pta_rev_line_fact.bene_id,
                   ccw_pta_rev_line_fact.clm_id,
                   ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                   ccw_pta_rev_line_fact.clm_line_num,
                   ccw_pta_rev_line_fact.nch_clm_type_cd,
                   ccw_rev_cntr_prfl.rev_cntr,
                   ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                   ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                   ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                   ccw_hcpcs_cd.hcpcs_cd,
                   ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                   ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                   ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                   ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                   ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                   ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                   ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                   ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                   ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                   ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                   ccw_rev_prfl.rev_cntr_stus_ind_cd,
                   ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                   ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                   ccw_pta_rev_line_fact.rndrng_physn_upin, --added ty
                   ccw_pta_rev_line_fact.rndrng_physn_npi, --added ty
                   ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                    FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                         ccw_owner.ccw_ansi_prfl,
                         ccw_owner.ccw_apc_hipps_prfl,
                         ccw_owner.ccw_hcpcs_cd,
                         ccw_owner.ccw_mdfr_prfl,
                         ccw_owner.ccw_rev_cntr_prfl,
                         ccw_owner.ccw_rev_prfl

                   WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                   ccw_ansi_prfl.ansi_prfl_id
                   AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                   ccw_apc_hipps_prfl.rev_cntr_apc_id
                   AND
                   ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                   AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                   ccw_mdfr_prfl.mdfr_prfl_id
                   AND ccw_pta_rev_line_fact.rev_cntr_id =
                   ccw_rev_cntr_prfl.rev_cntr_id
                   AND ccw_pta_rev_line_fact.rev_prfl_id =
                   ccw_rev_prfl.rev_prfl_id
                   AND ccw_pta_rev_line_fact.nch_clm_type_cd IN
                   (''60'', ''61'', ''62'')
                   AND ccw_pta_rev_line_fact.bene_part_num =
                   nvl(' || pi_bene_part_num ||
                      ', ccw_pta_rev_line_fact.bene_part_num)
                  ) l
           WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_inpatient_by_part;

  PROCEDURE extract_inpatient(p_part_num     VARCHAR2,
                              pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                              pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                              pb_stats       VARCHAR2 DEFAULT 'FALSE',
                              pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                              pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                            , pb_output_data VARCHAR2 DEFAULT 'TRUE') IS
    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_INPATIENT',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_inpatient - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'inpatient' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    dbms_application_info.set_client_info('temp_inpatient');

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_inpatient');
      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_INPATIENT',
                                   pi_value      => p_part_num);
      --insert by partition
      insert_temp_inpatient_by_part(pi_part_name     => g_part_name,
                                    pi_bene_part_num => p_part_num);

      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_INPATIENT',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_INPATIENT',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
    END IF;

    -- Moving output file writing to a common procedure, so delta hha can use as well.
    output_inpatient_file(p_part_num, pb_output_data);

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'INPATIENT');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_inpatient - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Inp Error: ');
      RAISE;
  END extract_inpatient;

  PROCEDURE insert_inp_delta_by_part(pi_part_name     VARCHAR2,
                                     pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_inpatient PARTITION (' ||
                      pi_part_name || ' )
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         b.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(claim_query_code, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(op_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(op_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ot_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ot_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_admsn_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pass_thru_per_diem_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_profnl_cmpnt_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_tot_pps_cptl_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_drg_wt_num, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(bene_lrd_used_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_drg_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_drg_outlier_stay_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_drg_outlier_aprvd_pmt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(admtg_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_poa_ind_sw25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ime_op_clm_val_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(dsh_op_clm_val_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE( --Rev Line Values
                                 l.clm_line_num,
                                 ''^''),
                         ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                 ''01-JAN-1000''),
         bene_part_num
         ,b.finl_actn_id
          FROM (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                  pta.dml_ind,   
                  ccw_pta_fact.bene_id,
                  ccw_pta_fact.clm_id,
                  ccw_pta_fact.run_dt,
                  ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                  ccw_all_clm_prfl.nch_clm_type_cd,
                  ccw_pta_fact.clm_from_dt,
                  ccw_pta_fact.clm_thru_dt,
                  ccw_pta_fact.nch_wkly_proc_dt,
                  ccw_pta_fact.fi_clm_proc_dt,
                  ccw_isohh_prfl.claim_query_code,
                  ccw_prvdr_at_time_of_clm.prvdr_num,
                  ccw_isohh_prfl.clm_fac_type_cd,
                  ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                  ccw_isohh_prfl.clm_freq_cd,
                  ccw_pta_fact.fi_num,
                  ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                  ccw_pta_fact.clm_pmt_amt,
                  ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                  ccw_isohh_prfl.nch_prmry_pyr_cd,
                  ccw_clm_prfl.fi_clm_actn_cd,
                  ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                  ccw_prvdr_at_time_of_clm.org_npi_num,
                  atphi.physn_upin AS at_physn_upin,
                  atphi.physn_npi AS at_physn_npi,
                  opphi.physn_upin AS op_physn_upin,
                  opphi.physn_npi AS op_physn_npi,
                  otphi.physn_upin AS ot_physn_upin,
                  otphi.physn_npi AS ot_physn_npi,
                  ccw_clm_prfl.clm_mco_pd_sw,
                  ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                  ccw_clm_prfl.clm_pps_ind_cd,
                  ccw_pta_fact.clm_tot_chrg_amt,
                  ccw_pta_fact.clm_admsn_dt,
                  ccw_clm_prfl.clm_ip_admsn_type_cd,
                  ccw_clm_prfl.clm_src_ip_admsn_cd,
                  ccw_clm_prfl.nch_ptnt_status_ind_cd,
                  ccw_pta_fact.clm_pass_thru_per_diem_amt,
                  ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                  ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                  ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                  ccw_pta_fact.nch_profnl_cmpnt_chrg_amt,
                  ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                  ccw_pta_fact.nch_ip_tot_ddctn_amt,
                  ccw_pta_fact.clm_tot_pps_cptl_amt,
                  ccw_pta_fact.clm_pps_cptl_fsp_amt,
                  ccw_pta_fact.clm_pps_cptl_outlier_amt,
                  ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                  ccw_pta_fact.clm_pps_cptl_ime_amt,
                  ccw_pta_fact.clm_pps_cptl_excptn_amt,
                  ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                  ccw_pta_fact.clm_pps_cptl_drg_wt_num,
                  ccw_pta_fact.clm_utlztn_day_cnt,
                  ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                  ccw_pta_fact.bene_lrd_used_cnt,
                  ccw_pta_fact.clm_non_utlztn_days_cnt,
                  ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                  ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                  ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                  ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                  ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                  ccw_pta_fact.nch_bene_dschrg_dt,
                  ccw_drg.clm_drg_cd,
                  ccw_drg.clm_drg_outlier_stay_cd,
                  ccw_pta_fact.nch_drg_outlier_aprvd_pmt_amt,
                  v.dsh_op_clm_val_amt,
                  v2.ime_op_clm_val_amt,
                  ccw_pta_fact.admtg_dgns_cd,
                  ccw_pta_fact.admtg_dgns_vrsn_cd,
                  ccw_pta_fact.prncpal_dgns_cd,
                  ccw_pta_fact.prncpal_dgns_vrsn_cd,
                  ccw_pta_fact.dgns_1_cd AS icd_dgns_cd1,
                  ccw_pta_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                  ccw_pta_fact.dgns_1_poa_ind_cd AS clm_poa_ind_sw1,
                  ccw_pta_fact.dgns_2_cd AS icd_dgns_cd2,
                  ccw_pta_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                  ccw_pta_fact.dgns_2_poa_ind_cd AS clm_poa_ind_sw2,
                  ccw_pta_fact.dgns_3_cd AS icd_dgns_cd3,
                  ccw_pta_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                  ccw_pta_fact.dgns_3_poa_ind_cd AS clm_poa_ind_sw3,
                  ccw_pta_fact.dgns_4_cd AS icd_dgns_cd4,
                  ccw_pta_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                  ccw_pta_fact.dgns_4_poa_ind_cd AS clm_poa_ind_sw4,
                  ccw_pta_fact.dgns_5_cd AS icd_dgns_cd5,
                  ccw_pta_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                  ccw_pta_fact.dgns_5_poa_ind_cd AS clm_poa_ind_sw5,
                  ccw_pta_fact.dgns_6_cd AS icd_dgns_cd6,
                  ccw_pta_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                  ccw_pta_fact.dgns_6_poa_ind_cd AS clm_poa_ind_sw6,
                  ccw_pta_fact.dgns_7_cd AS icd_dgns_cd7,
                  ccw_pta_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                  ccw_pta_fact.dgns_7_poa_ind_cd AS clm_poa_ind_sw7,
                  ccw_pta_fact.dgns_8_cd AS icd_dgns_cd8,
                  ccw_pta_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                  ccw_pta_fact.dgns_8_poa_ind_cd AS clm_poa_ind_sw8,
                  ccw_pta_fact.dgns_9_cd AS icd_dgns_cd9,
                  ccw_pta_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                  ccw_pta_fact.dgns_9_poa_ind_cd AS clm_poa_ind_sw9,
                  ccw_pta_fact.dgns_10_cd AS icd_dgns_cd10,
                  ccw_pta_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                  ccw_pta_fact.dgns_10_poa_ind_cd AS clm_poa_ind_sw10,
                  ccw_pta_fact.dgns_11_cd AS icd_dgns_cd11,
                  ccw_pta_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                  ccw_pta_fact.dgns_11_poa_ind_cd AS clm_poa_ind_sw11,
                  ccw_pta_fact.dgns_12_cd AS icd_dgns_cd12,
                  ccw_pta_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                  ccw_pta_fact.dgns_12_poa_ind_cd AS clm_poa_ind_sw12,
                  ccw_pta_fact.dgns_13_cd AS icd_dgns_cd13,
                  ccw_pta_fact.dgns_13_vrsn_cd AS icd_dgns_vrsn_cd13,
                  ccw_pta_fact.dgns_13_poa_ind_cd AS clm_poa_ind_sw13,
                  ccw_pta_fact.dgns_14_cd AS icd_dgns_cd14,
                  ccw_pta_fact.dgns_14_vrsn_cd AS icd_dgns_vrsn_cd14,
                  ccw_pta_fact.dgns_14_poa_ind_cd AS clm_poa_ind_sw14,
                  ccw_pta_fact.dgns_15_cd AS icd_dgns_cd15,
                  ccw_pta_fact.dgns_15_vrsn_cd AS icd_dgns_vrsn_cd15,
                  ccw_pta_fact.dgns_15_poa_ind_cd AS clm_poa_ind_sw15,
                  ccw_pta_fact.dgns_16_cd AS icd_dgns_cd16,
                  ccw_pta_fact.dgns_16_vrsn_cd AS icd_dgns_vrsn_cd16,
                  ccw_pta_fact.dgns_16_poa_ind_cd AS clm_poa_ind_sw16,
                  ccw_pta_fact.dgns_17_cd AS icd_dgns_cd17,
                  ccw_pta_fact.dgns_17_vrsn_cd AS icd_dgns_vrsn_cd17,
                  ccw_pta_fact.dgns_17_poa_ind_cd AS clm_poa_ind_sw17,
                  ccw_pta_fact.dgns_18_cd AS icd_dgns_cd18,
                  ccw_pta_fact.dgns_18_vrsn_cd AS icd_dgns_vrsn_cd18,
                  ccw_pta_fact.dgns_18_poa_ind_cd AS clm_poa_ind_sw18,
                  ccw_pta_fact.dgns_19_cd AS icd_dgns_cd19,
                  ccw_pta_fact.dgns_19_vrsn_cd AS icd_dgns_vrsn_cd19,
                  ccw_pta_fact.dgns_19_poa_ind_cd AS clm_poa_ind_sw19,
                  ccw_pta_fact.dgns_20_cd AS icd_dgns_cd20,
                  ccw_pta_fact.dgns_20_vrsn_cd AS icd_dgns_vrsn_cd20,
                  ccw_pta_fact.dgns_20_poa_ind_cd AS clm_poa_ind_sw20,
                  ccw_pta_fact.dgns_21_cd AS icd_dgns_cd21,
                  ccw_pta_fact.dgns_21_vrsn_cd AS icd_dgns_vrsn_cd21,
                  ccw_pta_fact.dgns_21_poa_ind_cd AS clm_poa_ind_sw21,
                  ccw_pta_fact.dgns_22_cd AS icd_dgns_cd22,
                  ccw_pta_fact.dgns_22_vrsn_cd AS icd_dgns_vrsn_cd22,
                  ccw_pta_fact.dgns_22_poa_ind_cd AS clm_poa_ind_sw22,
                  ccw_pta_fact.dgns_23_cd AS icd_dgns_cd23,
                  ccw_pta_fact.dgns_23_vrsn_cd AS icd_dgns_vrsn_cd23,
                  ccw_pta_fact.dgns_23_poa_ind_cd AS clm_poa_ind_sw23,
                  ccw_pta_fact.dgns_24_cd AS icd_dgns_cd24,
                  ccw_pta_fact.dgns_24_vrsn_cd AS icd_dgns_vrsn_cd24,
                  ccw_pta_fact.dgns_24_poa_ind_cd AS clm_poa_ind_sw24,
                  ccw_pta_fact.dgns_25_cd AS icd_dgns_cd25,
                  ccw_pta_fact.dgns_25_vrsn_cd AS icd_dgns_vrsn_cd25,
                  ccw_pta_fact.dgns_25_poa_ind_cd AS clm_poa_ind_sw25,
                  ccw_pta_fact.fst_dgns_e_cd,
                  ccw_pta_fact.fst_dgns_e_vrsn_cd,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd AS icd_dgns_e_cd1,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd AS icd_dgns_e_vrsn_cd1,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_1_poa_ind_cd AS clm_e_poa_ind_sw1,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd AS icd_dgns_e_cd2,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd AS icd_dgns_e_vrsn_cd2,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_2_poa_ind_cd AS clm_e_poa_ind_sw2,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd AS icd_dgns_e_cd3,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd AS icd_dgns_e_vrsn_cd3,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_3_poa_ind_cd AS clm_e_poa_ind_sw3,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd AS icd_dgns_e_cd4,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd AS icd_dgns_e_vrsn_cd4,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_4_poa_ind_cd AS clm_e_poa_ind_sw4,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd AS icd_dgns_e_cd5,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd AS icd_dgns_e_vrsn_cd5,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_5_poa_ind_cd AS clm_e_poa_ind_sw5,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd AS icd_dgns_e_cd6,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd AS icd_dgns_e_vrsn_cd6,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_6_poa_ind_cd AS clm_e_poa_ind_sw6,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd AS icd_dgns_e_cd7,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd AS icd_dgns_e_vrsn_cd7,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_7_poa_ind_cd AS clm_e_poa_ind_sw7,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd AS icd_dgns_e_cd8,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd AS icd_dgns_e_vrsn_cd8,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_8_poa_ind_cd AS clm_e_poa_ind_sw8,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd AS icd_dgns_e_cd9,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd AS icd_dgns_e_vrsn_cd9,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_9_poa_ind_cd AS clm_e_poa_ind_sw9,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd AS icd_dgns_e_cd10,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_10_poa_ind_cd AS clm_e_poa_ind_sw10,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd AS icd_dgns_e_cd11,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_11_poa_ind_cd AS clm_e_poa_ind_sw11,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd AS icd_dgns_e_cd12,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                  ccw_dgns_e_cd_grp_prfl.dgns_e_12_poa_ind_cd AS clm_e_poa_ind_sw12,
                  ccw_pta_fact.prcdr_1_cd AS icd_prcdr_cd1,
                  ccw_pta_fact.prcdr_1_vrsn_cd AS icd_prcdr_vrsn_cd1,
                  ccw_pta_fact.prcdr_2_cd AS icd_prcdr_cd2,
                  ccw_pta_fact.prcdr_2_vrsn_cd AS icd_prcdr_vrsn_cd2,
                  ccw_pta_fact.prcdr_3_cd AS icd_prcdr_cd3,
                  ccw_pta_fact.prcdr_3_vrsn_cd AS icd_prcdr_vrsn_cd3,
                  ccw_pta_fact.prcdr_4_cd AS icd_prcdr_cd4,
                  ccw_pta_fact.prcdr_4_vrsn_cd AS icd_prcdr_vrsn_cd4,
                  ccw_pta_fact.prcdr_5_cd AS icd_prcdr_cd5,
                  ccw_pta_fact.prcdr_5_vrsn_cd AS icd_prcdr_vrsn_cd5,
                  ccw_pta_fact.prcdr_6_cd AS icd_prcdr_cd6,
                  ccw_pta_fact.prcdr_6_vrsn_cd AS icd_prcdr_vrsn_cd6,
                  ccw_pta_fact.prcdr_7_cd AS icd_prcdr_cd7,
                  ccw_pta_fact.prcdr_7_vrsn_cd AS icd_prcdr_vrsn_cd7,
                  ccw_pta_fact.prcdr_8_cd AS icd_prcdr_cd8,
                  ccw_pta_fact.prcdr_8_vrsn_cd AS icd_prcdr_vrsn_cd8,
                  ccw_pta_fact.prcdr_9_cd AS icd_prcdr_cd9,
                  ccw_pta_fact.prcdr_9_vrsn_cd AS icd_prcdr_vrsn_cd9,
                  ccw_pta_fact.prcdr_10_cd AS icd_prcdr_cd10,
                  ccw_pta_fact.prcdr_10_vrsn_cd AS icd_prcdr_vrsn_cd10,
                  ccw_pta_fact.prcdr_11_cd AS icd_prcdr_cd11,
                  ccw_pta_fact.prcdr_11_vrsn_cd AS icd_prcdr_vrsn_cd11,
                  ccw_pta_fact.prcdr_12_cd AS icd_prcdr_cd12,
                  ccw_pta_fact.prcdr_12_vrsn_cd AS icd_prcdr_vrsn_cd12,
                  ccw_pta_fact.prcdr_13_cd AS icd_prcdr_cd13,
                  ccw_pta_fact.prcdr_13_vrsn_cd AS icd_prcdr_vrsn_cd13,
                  ccw_pta_fact.prcdr_14_cd AS icd_prcdr_cd14,
                  ccw_pta_fact.prcdr_14_vrsn_cd AS icd_prcdr_vrsn_cd14,
                  ccw_pta_fact.prcdr_15_cd AS icd_prcdr_cd15,
                  ccw_pta_fact.prcdr_15_vrsn_cd AS icd_prcdr_vrsn_cd15,
                  ccw_pta_fact.prcdr_16_cd AS icd_prcdr_cd16,
                  ccw_pta_fact.prcdr_16_vrsn_cd AS icd_prcdr_vrsn_cd16,
                  ccw_pta_fact.prcdr_17_cd AS icd_prcdr_cd17,
                  ccw_pta_fact.prcdr_17_vrsn_cd AS icd_prcdr_vrsn_cd17,
                  ccw_pta_fact.prcdr_18_cd AS icd_prcdr_cd18,
                  ccw_pta_fact.prcdr_18_vrsn_cd AS icd_prcdr_vrsn_cd18,
                  ccw_pta_fact.prcdr_19_cd AS icd_prcdr_cd19,
                  ccw_pta_fact.prcdr_19_vrsn_cd AS icd_prcdr_vrsn_cd19,
                  ccw_pta_fact.prcdr_20_cd AS icd_prcdr_cd20,
                  ccw_pta_fact.prcdr_20_vrsn_cd AS icd_prcdr_vrsn_cd20,
                  ccw_pta_fact.prcdr_21_cd AS icd_prcdr_cd21,
                  ccw_pta_fact.prcdr_21_vrsn_cd AS icd_prcdr_vrsn_cd21,
                  ccw_pta_fact.prcdr_22_cd AS icd_prcdr_cd22,
                  ccw_pta_fact.prcdr_22_vrsn_cd AS icd_prcdr_vrsn_cd22,
                  ccw_pta_fact.prcdr_23_cd AS icd_prcdr_cd23,
                  ccw_pta_fact.prcdr_23_vrsn_cd AS icd_prcdr_vrsn_cd23,
                  ccw_pta_fact.prcdr_24_cd AS icd_prcdr_cd24,
                  ccw_pta_fact.prcdr_24_vrsn_cd AS icd_prcdr_vrsn_cd24,
                  ccw_pta_fact.prcdr_25_cd AS icd_prcdr_cd25,
                  ccw_pta_fact.prcdr_25_vrsn_cd AS icd_prcdr_vrsn_cd25,
                  ccw_pta_fact.prcdr_1_dt AS prcdr_dt1,
                  ccw_pta_fact.prcdr_2_dt AS prcdr_dt2,
                  ccw_pta_fact.prcdr_3_dt AS prcdr_dt3,
                  ccw_pta_fact.prcdr_4_dt AS prcdr_dt4,
                  ccw_pta_fact.prcdr_5_dt AS prcdr_dt5,
                  ccw_pta_fact.prcdr_6_dt AS prcdr_dt6,
                  ccw_pta_fact.prcdr_7_dt AS prcdr_dt7,
                  ccw_pta_fact.prcdr_8_dt AS prcdr_dt8,
                  ccw_pta_fact.prcdr_9_dt AS prcdr_dt9,
                  ccw_pta_fact.prcdr_10_dt AS prcdr_dt10,
                  ccw_pta_fact.prcdr_11_dt AS prcdr_dt11,
                  ccw_pta_fact.prcdr_12_dt AS prcdr_dt12,
                  ccw_pta_fact.prcdr_13_dt AS prcdr_dt13,
                  ccw_pta_fact.prcdr_14_dt AS prcdr_dt14,
                  ccw_pta_fact.prcdr_15_dt AS prcdr_dt15,
                  ccw_pta_fact.prcdr_16_dt AS prcdr_dt16,
                  ccw_pta_fact.prcdr_17_dt AS prcdr_dt17,
                  ccw_pta_fact.prcdr_18_dt AS prcdr_dt18,
                  ccw_pta_fact.prcdr_19_dt AS prcdr_dt19,
                  ccw_pta_fact.prcdr_20_dt AS prcdr_dt20,
                  ccw_pta_fact.prcdr_21_dt AS prcdr_dt21,
                  ccw_pta_fact.prcdr_22_dt AS prcdr_dt22,
                  ccw_pta_fact.prcdr_23_dt AS prcdr_dt23,
                  ccw_pta_fact.prcdr_24_dt AS prcdr_dt24,
                  ccw_pta_fact.prcdr_25_dt AS prcdr_dt25,
                  ccw_all_clm_dmgrphc_prfl.dob_dt,
                  ccw_all_clm_dmgrphc_prfl.gndr_cd,
                  ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                  ccw_geo_prfl.bene_cnty_cd,
                  ccw_geo_prfl.bene_state_cd,
                  ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                  '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                  ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                  substr(ccw_pta_fact.bene_id,
                         length(ccw_pta_fact.bene_id) - 1,
                         2) bene_part_num,
                  pta.clm_grp_id                 
                  , pta.finl_actn_id
                   FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_clm_prfl,
                        ccw_owner.ccw_drg,
                        ccw_owner.ccw_isohh_prfl,
                        ccw_owner.ccw_prvdr_at_time_of_clm,
                        ccw_owner.ccw_all_clm_dmgrphc_prfl,
                        ccw_owner.ccw_geo_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm atphi,
                        ccw_owner.ccw_phys_at_time_of_clm opphi,
                        ccw_owner.ccw_phys_at_time_of_clm otphi,
                        ccw_owner.ccw_dgns_e_cd_grp_prfl
                        ,ccw_owner.fhir_pta_ld_clm_status pta,
                        (SELECT /*+ full(vc) */
                          SUM(vc.clm_val_amt) dsh_op_clm_val_amt,
                          vc.bene_id,
                          vc.clm_id,
                          vc.clm_thru_dt
                           FROM ccw_owner.ccw_val_cd vc
                          WHERE vc.clm_val_cd = ''18''
                          GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v,
                        (SELECT /*+ full(vc) */
                          SUM(vc.clm_val_amt) ime_op_clm_val_amt,
                          vc.bene_id,
                          vc.clm_id,
                          vc.clm_thru_dt
                           FROM ccw_owner.ccw_val_cd vc
                          WHERE vc.clm_val_cd = ''19''
                          GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v2
                  WHERE  ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
               AND ccw_pta_fact.ip_snf_clm_fields_id =
                  ccw_clm_prfl.ip_snf_clm_field_id
               AND ccw_pta_fact.drg_id = ccw_drg.drg_id
               AND ccw_pta_fact.isohh_clm_fields_id =
                  ccw_isohh_prfl.isohh_clm_fields_id
               AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                  ccw_prvdr_at_time_of_clm.prvdr_id
               AND ccw_pta_fact.all_clm_dmgrphc_id =
                  ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
               AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
               AND ccw_pta_fact.atndg_physn_id = atphi.physn_id
               AND ccw_pta_fact.clm_oprtg_physn_id = opphi.physn_id
               AND ccw_pta_fact.clm_other_physn_id = otphi.physn_id
               AND ccw_pta_fact.dgns_e_cd_grp_id =
                  ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
               AND ccw_pta_fact.clm_id = pta.clm_id
               AND pta.job_ld_dt IS NULL
               AND substr(pta.bene_id,
                         length(pta.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                       substr(pta.bene_id,
                                              length(pta.bene_id) - 1,
                                              2))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND ccw_pta_fact.ccw_ld_desc = pta.ccw_ld_desc
                 AND pta.nch_clm_type_cd IN (''60'', ''61'', ''62'')
               AND v.clm_id(+) = ccw_pta_fact.clm_id
               AND v.bene_id(+) = ccw_pta_fact.bene_id
               AND v2.clm_id(+) = ccw_pta_fact.clm_id
               AND v2.bene_id(+) = ccw_pta_fact.bene_id
               AND v2.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
               AND v.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
                 ) b,
               (SELECT /*+ parallel (16) */
                  ' || g_version ||
                      ' version,
                    ptal.dml_ind,    
                        ccw_pta_rev_line_fact.bene_id,
                        ccw_pta_rev_line_fact.clm_id,
                        ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                        ccw_pta_rev_line_fact.clm_line_num,
                        ccw_all_clm_prfl.nch_clm_type_cd,
                        ccw_rev_cntr_prfl.rev_cntr,
                        ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                        ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                        ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                        ccw_hcpcs_cd.hcpcs_cd,
                        ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                        ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                        ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                        ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                        ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                        ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                        ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                        ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                        ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                        ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                        ccw_rev_prfl.rev_cntr_stus_ind_cd,
                        ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                        ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                        ccw_phys_at_time_of_clm.physn_upin AS rndrng_physn_upin,
                        ccw_phys_at_time_of_clm.physn_npi AS rndrng_physn_npi,
                        ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                   FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                        ccw_owner.ccw_all_clm_prfl,
                        ccw_owner.ccw_ansi_prfl,
                        ccw_owner.ccw_apc_hipps_prfl,
                        ccw_owner.ccw_hcpcs_cd,
                        ccw_owner.ccw_mdfr_prfl,
                        ccw_owner.ccw_rev_cntr_prfl,
                        ccw_owner.ccw_rev_prfl,
                        ccw_owner.ccw_phys_at_time_of_clm
                        ,ccw_owner.fhir_pta_ld_clm_status ptal
                  WHERE ccw_pta_rev_line_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                    AND ccw_pta_rev_line_fact.ansi_prfl_id = ccw_ansi_prfl.ansi_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_apc_id = ccw_apc_hipps_prfl.rev_cntr_apc_id
               AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
               AND ccw_pta_rev_line_fact.mdfr_prfl_id = ccw_mdfr_prfl.mdfr_prfl_id
               AND ccw_pta_rev_line_fact.rev_cntr_id = ccw_rev_cntr_prfl.rev_cntr_id
               AND ccw_pta_rev_line_fact.rev_prfl_id = ccw_rev_prfl.rev_prfl_id
               AND ccw_pta_rev_line_fact.rndrng_physn_id = ccw_phys_at_time_of_clm.physn_id
               AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
               AND ptal.job_ld_dt IS NULL
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ccw_pta_rev_line_fact.ccw_ld_desc = ptal.ccw_ld_desc
                 AND ptal.nch_clm_type_cd IN (''60'', ''61'', ''62'')
               AND substr(ptal.bene_id,
                         length(ptal.bene_id) - 1,
                         2) = nvl(' ||
                      pi_bene_part_num || ',
                                  substr(ptal.bene_id,
                                         length(ptal.bene_id) - 1,
                                         2))

                 ) l
         WHERE b.clm_id = l.clm_id');


  END insert_inp_delta_by_part;

  PROCEDURE extract_inpatient_changes(p_strt_dt      DATE,
                                      p_end_dt       DATE,
                                      p_prcsg_dt     DATE,
                                      p_part_num     VARCHAR2,
                                      pb_load_data   VARCHAR2, 
                                      pb_new_version VARCHAR2,
                                      pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_INPATIENT_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_inpatient_changes - started');

    dbms_application_info.set_client_info('extract_INP_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'inpatient_upd' || g_separator || p_part_num ||
                  g_separator || delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_inpatient');
      truncate_table(p_part_num, 'temp_inpatient_base_t1');

      IF p_part_num IS NULL THEN
        -- Single digit (single thread (or 10?) compare on bene_id)
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_inpatient_BASE_T1
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(claim_query_code, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pass_thru_per_diem_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_profnl_cmpnt_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_pps_cptl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_drg_wt_num, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_lrd_used_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_drg_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_drg_outlier_stay_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_drg_outlier_aprvd_pmt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_poa_ind_sw25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_e_poa_ind_sw12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ime_op_clm_val_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(dsh_op_clm_val_amt, '^'), '~'),
                   '01-JAN-1000'),
           ---- Covering the line info ----
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           -- Commented out line data --
           bene_part_num
           , b.finl_actn_id
            FROM (SELECT /*+  full (ccw_pta_fact) parallel (16) */
                    g_version                                   version,
                    pta.dml_ind, 
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    ccw_pta_fact.run_dt,
                    ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                    ccw_all_clm_prfl.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_isohh_prfl.claim_query_code,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_clm_prfl.fi_clm_actn_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    atphi.physn_upin                            AS at_physn_upin,
                    atphi.physn_npi                             AS at_physn_npi,
                    opphi.physn_upin                            AS op_physn_upin,
                    opphi.physn_npi                             AS op_physn_npi,
                    otphi.physn_upin                            AS ot_physn_upin,
                    otphi.physn_npi                             AS ot_physn_npi,
                    ccw_clm_prfl.clm_mco_pd_sw,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_clm_prfl.clm_pps_ind_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_pta_fact.clm_admsn_dt,
                    ccw_clm_prfl.clm_ip_admsn_type_cd,
                    ccw_clm_prfl.clm_src_ip_admsn_cd,
                    ccw_clm_prfl.nch_ptnt_status_ind_cd,
                    ccw_pta_fact.clm_pass_thru_per_diem_amt,
                    ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                    ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                    ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                    ccw_pta_fact.nch_profnl_cmpnt_chrg_amt,
                    ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                    ccw_pta_fact.nch_ip_tot_ddctn_amt,
                    ccw_pta_fact.clm_tot_pps_cptl_amt,
                    ccw_pta_fact.clm_pps_cptl_fsp_amt,
                    ccw_pta_fact.clm_pps_cptl_outlier_amt,
                    ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                    ccw_pta_fact.clm_pps_cptl_ime_amt,
                    ccw_pta_fact.clm_pps_cptl_excptn_amt,
                    ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                    ccw_pta_fact.clm_pps_cptl_drg_wt_num,
                    ccw_pta_fact.clm_utlztn_day_cnt,
                    ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                    ccw_pta_fact.bene_lrd_used_cnt,
                    ccw_pta_fact.clm_non_utlztn_days_cnt,
                    ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                    ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                    ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                    ccw_pta_fact.nch_bene_dschrg_dt,
                    ccw_drg.clm_drg_cd,
                    ccw_drg.clm_drg_outlier_stay_cd,
                    ccw_pta_fact.nch_drg_outlier_aprvd_pmt_amt,
                    v.dsh_op_clm_val_amt,
                    v2.ime_op_clm_val_amt,
                    ccw_pta_fact.admtg_dgns_cd,
                    ccw_pta_fact.admtg_dgns_vrsn_cd,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_1_poa_ind_cd              AS clm_poa_ind_sw1,
                    ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_2_poa_ind_cd              AS clm_poa_ind_sw2,
                    ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_3_poa_ind_cd              AS clm_poa_ind_sw3,
                    ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_4_poa_ind_cd              AS clm_poa_ind_sw4,
                    ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_5_poa_ind_cd              AS clm_poa_ind_sw5,
                    ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_6_poa_ind_cd              AS clm_poa_ind_sw6,
                    ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_7_poa_ind_cd              AS clm_poa_ind_sw7,
                    ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_8_poa_ind_cd              AS clm_poa_ind_sw8,
                    ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_9_poa_ind_cd              AS clm_poa_ind_sw9,
                    ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_10_poa_ind_cd             AS clm_poa_ind_sw10,
                    ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_11_poa_ind_cd             AS clm_poa_ind_sw11,
                    ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_12_poa_ind_cd             AS clm_poa_ind_sw12,
                    ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_13_poa_ind_cd             AS clm_poa_ind_sw13,
                    ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_14_poa_ind_cd             AS clm_poa_ind_sw14,
                    ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_15_poa_ind_cd             AS clm_poa_ind_sw15,
                    ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_16_poa_ind_cd             AS clm_poa_ind_sw16,
                    ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_17_poa_ind_cd             AS clm_poa_ind_sw17,
                    ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_18_poa_ind_cd             AS clm_poa_ind_sw18,
                    ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_19_poa_ind_cd             AS clm_poa_ind_sw19,
                    ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_20_poa_ind_cd             AS clm_poa_ind_sw20,
                    ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_21_poa_ind_cd             AS clm_poa_ind_sw21,
                    ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_22_poa_ind_cd             AS clm_poa_ind_sw22,
                    ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_23_poa_ind_cd             AS clm_poa_ind_sw23,
                    ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_24_poa_ind_cd             AS clm_poa_ind_sw24,
                    ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.dgns_25_poa_ind_cd             AS clm_poa_ind_sw25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_poa_ind_cd  AS clm_e_poa_ind_sw1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_poa_ind_cd  AS clm_e_poa_ind_sw2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_poa_ind_cd  AS clm_e_poa_ind_sw3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_poa_ind_cd  AS clm_e_poa_ind_sw4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_poa_ind_cd  AS clm_e_poa_ind_sw5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_poa_ind_cd  AS clm_e_poa_ind_sw6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_poa_ind_cd  AS clm_e_poa_ind_sw7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_poa_ind_cd  AS clm_e_poa_ind_sw8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_poa_ind_cd  AS clm_e_poa_ind_sw9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_poa_ind_cd AS clm_e_poa_ind_sw10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_poa_ind_cd AS clm_e_poa_ind_sw11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_poa_ind_cd AS clm_e_poa_ind_sw12,
                    ccw_pta_fact.prcdr_1_cd                     AS icd_prcdr_cd1,
                    ccw_pta_fact.prcdr_1_vrsn_cd                AS icd_prcdr_vrsn_cd1,
                    ccw_pta_fact.prcdr_2_cd                     AS icd_prcdr_cd2,
                    ccw_pta_fact.prcdr_2_vrsn_cd                AS icd_prcdr_vrsn_cd2,
                    ccw_pta_fact.prcdr_3_cd                     AS icd_prcdr_cd3,
                    ccw_pta_fact.prcdr_3_vrsn_cd                AS icd_prcdr_vrsn_cd3,
                    ccw_pta_fact.prcdr_4_cd                     AS icd_prcdr_cd4,
                    ccw_pta_fact.prcdr_4_vrsn_cd                AS icd_prcdr_vrsn_cd4,
                    ccw_pta_fact.prcdr_5_cd                     AS icd_prcdr_cd5,
                    ccw_pta_fact.prcdr_5_vrsn_cd                AS icd_prcdr_vrsn_cd5,
                    ccw_pta_fact.prcdr_6_cd                     AS icd_prcdr_cd6,
                    ccw_pta_fact.prcdr_6_vrsn_cd                AS icd_prcdr_vrsn_cd6,
                    ccw_pta_fact.prcdr_7_cd                     AS icd_prcdr_cd7,
                    ccw_pta_fact.prcdr_7_vrsn_cd                AS icd_prcdr_vrsn_cd7,
                    ccw_pta_fact.prcdr_8_cd                     AS icd_prcdr_cd8,
                    ccw_pta_fact.prcdr_8_vrsn_cd                AS icd_prcdr_vrsn_cd8,
                    ccw_pta_fact.prcdr_9_cd                     AS icd_prcdr_cd9,
                    ccw_pta_fact.prcdr_9_vrsn_cd                AS icd_prcdr_vrsn_cd9,
                    ccw_pta_fact.prcdr_10_cd                    AS icd_prcdr_cd10,
                    ccw_pta_fact.prcdr_10_vrsn_cd               AS icd_prcdr_vrsn_cd10,
                    ccw_pta_fact.prcdr_11_cd                    AS icd_prcdr_cd11,
                    ccw_pta_fact.prcdr_11_vrsn_cd               AS icd_prcdr_vrsn_cd11,
                    ccw_pta_fact.prcdr_12_cd                    AS icd_prcdr_cd12,
                    ccw_pta_fact.prcdr_12_vrsn_cd               AS icd_prcdr_vrsn_cd12,
                    ccw_pta_fact.prcdr_13_cd                    AS icd_prcdr_cd13,
                    ccw_pta_fact.prcdr_13_vrsn_cd               AS icd_prcdr_vrsn_cd13,
                    ccw_pta_fact.prcdr_14_cd                    AS icd_prcdr_cd14,
                    ccw_pta_fact.prcdr_14_vrsn_cd               AS icd_prcdr_vrsn_cd14,
                    ccw_pta_fact.prcdr_15_cd                    AS icd_prcdr_cd15,
                    ccw_pta_fact.prcdr_15_vrsn_cd               AS icd_prcdr_vrsn_cd15,
                    ccw_pta_fact.prcdr_16_cd                    AS icd_prcdr_cd16,
                    ccw_pta_fact.prcdr_16_vrsn_cd               AS icd_prcdr_vrsn_cd16,
                    ccw_pta_fact.prcdr_17_cd                    AS icd_prcdr_cd17,
                    ccw_pta_fact.prcdr_17_vrsn_cd               AS icd_prcdr_vrsn_cd17,
                    ccw_pta_fact.prcdr_18_cd                    AS icd_prcdr_cd18,
                    ccw_pta_fact.prcdr_18_vrsn_cd               AS icd_prcdr_vrsn_cd18,
                    ccw_pta_fact.prcdr_19_cd                    AS icd_prcdr_cd19,
                    ccw_pta_fact.prcdr_19_vrsn_cd               AS icd_prcdr_vrsn_cd19,
                    ccw_pta_fact.prcdr_20_cd                    AS icd_prcdr_cd20,
                    ccw_pta_fact.prcdr_20_vrsn_cd               AS icd_prcdr_vrsn_cd20,
                    ccw_pta_fact.prcdr_21_cd                    AS icd_prcdr_cd21,
                    ccw_pta_fact.prcdr_21_vrsn_cd               AS icd_prcdr_vrsn_cd21,
                    ccw_pta_fact.prcdr_22_cd                    AS icd_prcdr_cd22,
                    ccw_pta_fact.prcdr_22_vrsn_cd               AS icd_prcdr_vrsn_cd22,
                    ccw_pta_fact.prcdr_23_cd                    AS icd_prcdr_cd23,
                    ccw_pta_fact.prcdr_23_vrsn_cd               AS icd_prcdr_vrsn_cd23,
                    ccw_pta_fact.prcdr_24_cd                    AS icd_prcdr_cd24,
                    ccw_pta_fact.prcdr_24_vrsn_cd               AS icd_prcdr_vrsn_cd24,
                    ccw_pta_fact.prcdr_25_cd                    AS icd_prcdr_cd25,
                    ccw_pta_fact.prcdr_25_vrsn_cd               AS icd_prcdr_vrsn_cd25,
                    ccw_pta_fact.prcdr_1_dt                     AS prcdr_dt1,
                    ccw_pta_fact.prcdr_2_dt                     AS prcdr_dt2,
                    ccw_pta_fact.prcdr_3_dt                     AS prcdr_dt3,
                    ccw_pta_fact.prcdr_4_dt                     AS prcdr_dt4,
                    ccw_pta_fact.prcdr_5_dt                     AS prcdr_dt5,
                    ccw_pta_fact.prcdr_6_dt                     AS prcdr_dt6,
                    ccw_pta_fact.prcdr_7_dt                     AS prcdr_dt7,
                    ccw_pta_fact.prcdr_8_dt                     AS prcdr_dt8,
                    ccw_pta_fact.prcdr_9_dt                     AS prcdr_dt9,
                    ccw_pta_fact.prcdr_10_dt                    AS prcdr_dt10,
                    ccw_pta_fact.prcdr_11_dt                    AS prcdr_dt11,
                    ccw_pta_fact.prcdr_12_dt                    AS prcdr_dt12,
                    ccw_pta_fact.prcdr_13_dt                    AS prcdr_dt13,
                    ccw_pta_fact.prcdr_14_dt                    AS prcdr_dt14,
                    ccw_pta_fact.prcdr_15_dt                    AS prcdr_dt15,
                    ccw_pta_fact.prcdr_16_dt                    AS prcdr_dt16,
                    ccw_pta_fact.prcdr_17_dt                    AS prcdr_dt17,
                    ccw_pta_fact.prcdr_18_dt                    AS prcdr_dt18,
                    ccw_pta_fact.prcdr_19_dt                    AS prcdr_dt19,
                    ccw_pta_fact.prcdr_20_dt                    AS prcdr_dt20,
                    ccw_pta_fact.prcdr_21_dt                    AS prcdr_dt21,
                    ccw_pta_fact.prcdr_22_dt                    AS prcdr_dt22,
                    ccw_pta_fact.prcdr_23_dt                    AS prcdr_dt23,
                    ccw_pta_fact.prcdr_24_dt                    AS prcdr_dt24,
                    ccw_pta_fact.prcdr_25_dt                    AS prcdr_dt25,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_pta_fact.bene_id,
                           length(ccw_pta_fact.bene_id),
                           1) bene_part_num,
                     pta.clm_grp_id                
                    , ccw_pta_fact.finl_actn_id   
                     FROM (select /*+ parallel (16) */ *
                           from ccw_owner.fhir_pta_ld_clm_status
                           where job_ld_dt IS NULL
                             and nch_clm_type_cd IN ('60', '61', '62')
                             AND clm_grp_id IS NOT NULL   
                             AND substr(bene_id,
                                         length(bene_id), 1) 
                                   = nvl(p_part_num,
                                         substr(bene_id,
                                                length(bene_id),
                                                1)))      pta,
                          ccw_owner.ccw_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_drg,
                          ccw_owner.ccw_isohh_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          phy atphi,  
                          phy opphi, 
                          phy otphi,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl,
                          (SELECT /*+ full(vc) */
                            SUM(vc.clm_val_amt) dsh_op_clm_val_amt,
                            vc.bene_id,
                            vc.clm_id,
                            vc.clm_thru_dt
                             FROM ccw_owner.ccw_val_cd vc
                            WHERE vc.clm_val_cd = '18'
                            GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v,
                          (SELECT /*+ full(vc) */
                            SUM(vc.clm_val_amt) ime_op_clm_val_amt,
                            vc.bene_id,
                            vc.clm_id,
                            vc.clm_thru_dt
                             FROM ccw_owner.ccw_val_cd vc
                            WHERE vc.clm_val_cd = '19'
                            GROUP BY vc.bene_id, vc.clm_id, vc.clm_thru_dt) v2
                    WHERE  ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_fact.ip_snf_clm_fields_id =
                        ccw_clm_prfl.ip_snf_clm_field_id
                     AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                     AND ccw_pta_fact.isohh_clm_fields_id =
                        ccw_isohh_prfl.isohh_clm_fields_id
                     AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                        ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_pta_fact.all_clm_dmgrphc_id =
                        ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                     AND ccw_pta_fact.atndg_physn_id = atphi.physn_id
                     AND ccw_pta_fact.clm_oprtg_physn_id = opphi.physn_id
                     AND ccw_pta_fact.clm_other_physn_id = otphi.physn_id
                     AND ccw_pta_fact.dgns_e_cd_grp_id =
                        ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                     AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                     AND ccw_pta_fact.clm_id = pta.clm_id
                 AND v.clm_id(+) = ccw_pta_fact.clm_id
                 AND v.bene_id(+) = ccw_pta_fact.bene_id
                 AND v2.clm_id(+) = ccw_pta_fact.clm_id
                 AND v2.bene_id(+) = ccw_pta_fact.bene_id
                 AND v2.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
                 AND v.clm_thru_dt(+) = ccw_pta_fact.clm_thru_dt
                   ) b;
                   
        COMMIT;
        IF p_part_num IS NULL THEN
          IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_INPATIENT_BASE_T1',
                                         p_ecode_out => g_ecode,
                                         p_errm_out  => g_errm) = FALSE THEN
            RAISE cannot_annlz_tbl;
          END IF;
        ELSE
          IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_INPATIENT_BASE_T1',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
            RAISE cannot_annlz_tbl;
          END IF;          
        END IF;

        INSERT /*+ append parallel (16) */            
        INTO ccw_owner.temp_inpatient
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           b.nch_near_line_rec_ident_cd,
           b.nch_clm_type_cd,
           b.clm_from_dt,
           b.clm_thru_dt,
           b.nch_wkly_proc_dt,
           b.fi_clm_proc_dt,
           b.claim_query_code,
           b.prvdr_num,
           b.clm_fac_type_cd,
           b.clm_srvc_clsfctn_type_cd,
           b.clm_freq_cd,
           b.fi_num,
           b.clm_mdcr_non_pmt_rsn_cd,
           b.clm_pmt_amt,
           b.nch_prmry_pyr_clm_pd_amt,
           b.nch_prmry_pyr_cd,
           b.fi_clm_actn_cd,
           b.prvdr_state_cd,
           b.org_npi_num,
           b.at_physn_upin,
           b.at_physn_npi,
           b.op_physn_upin,
           b.op_physn_npi,
           b.ot_physn_upin,
           b.ot_physn_npi,
           b.clm_mco_pd_sw,
           b.ptnt_dschrg_stus_cd,
           b.clm_pps_ind_cd,
           b.clm_tot_chrg_amt,
           b.clm_admsn_dt,
           b.clm_ip_admsn_type_cd,
           b.clm_src_ip_admsn_cd,
           b.nch_ptnt_status_ind_cd,
           b.clm_pass_thru_per_diem_amt,
           b.nch_bene_ip_ddctbl_amt,
           b.nch_bene_pta_coinsrnc_lblty_am,
           b.nch_bene_blood_ddctbl_lblty_am,
           b.nch_profnl_cmpnt_chrg_amt,
           b.nch_ip_ncvrd_chrg_amt,
           b.nch_ip_tot_ddctn_amt,
           b.clm_tot_pps_cptl_amt,
           b.clm_pps_cptl_fsp_amt,
           b.clm_pps_cptl_outlier_amt,
           b.clm_pps_cptl_dsprprtnt_shr_amt,
           b.clm_pps_cptl_ime_amt,
           b.clm_pps_cptl_excptn_amt,
           b.clm_pps_old_cptl_hld_hrmls_amt,
           b.clm_pps_cptl_drg_wt_num,
           b.clm_utlztn_day_cnt,
           b.bene_tot_coinsrnc_days_cnt,
           b.bene_lrd_used_cnt,
           b.clm_non_utlztn_days_cnt,
           b.nch_blood_pnts_frnshd_qty,
           b.nch_vrfd_ncvrd_stay_from_dt,
           b.nch_vrfd_ncvrd_stay_thru_dt,
           b.nch_actv_or_cvrd_lvl_care_thru,
           b.nch_bene_mdcr_bnfts_exhtd_dt_i,
           b.nch_bene_dschrg_dt,
           b.clm_drg_cd,
           b.clm_drg_outlier_stay_cd,
           b.nch_drg_outlier_aprvd_pmt_amt,
           b.admtg_dgns_cd,
           b.admtg_dgns_vrsn_cd,
           b.prncpal_dgns_cd,
           b.prncpal_dgns_vrsn_cd,
           b.icd_dgns_cd1,
           b.icd_dgns_vrsn_cd1,
           b.clm_poa_ind_sw1,
           b.icd_dgns_cd2,
           b.icd_dgns_vrsn_cd2,
           b.clm_poa_ind_sw2,
           b.icd_dgns_cd3,
           b.icd_dgns_vrsn_cd3,
           b.clm_poa_ind_sw3,
           b.icd_dgns_cd4,
           b.icd_dgns_vrsn_cd4,
           b.clm_poa_ind_sw4,
           b.icd_dgns_cd5,
           b.icd_dgns_vrsn_cd5,
           b.clm_poa_ind_sw5,
           b.icd_dgns_cd6,
           b.icd_dgns_vrsn_cd6,
           b.clm_poa_ind_sw6,
           b.icd_dgns_cd7,
           b.icd_dgns_vrsn_cd7,
           b.clm_poa_ind_sw7,
           b.icd_dgns_cd8,
           b.icd_dgns_vrsn_cd8,
           b.clm_poa_ind_sw8,
           b.icd_dgns_cd9,
           b.icd_dgns_vrsn_cd9,
           b.clm_poa_ind_sw9,
           b.icd_dgns_cd10,
           b.icd_dgns_vrsn_cd10,
           b.clm_poa_ind_sw10,
           b.icd_dgns_cd11,
           b.icd_dgns_vrsn_cd11,
           b.clm_poa_ind_sw11,
           b.icd_dgns_cd12,
           b.icd_dgns_vrsn_cd12,
           b.clm_poa_ind_sw12,
           b.icd_dgns_cd13,
           b.icd_dgns_vrsn_cd13,
           b.clm_poa_ind_sw13,
           b.icd_dgns_cd14,
           b.icd_dgns_vrsn_cd14,
           b.clm_poa_ind_sw14,
           b.icd_dgns_cd15,
           b.icd_dgns_vrsn_cd15,
           b.clm_poa_ind_sw15,
           b.icd_dgns_cd16,
           b.icd_dgns_vrsn_cd16,
           b.clm_poa_ind_sw16,
           b.icd_dgns_cd17,
           b.icd_dgns_vrsn_cd17,
           b.clm_poa_ind_sw17,
           b.icd_dgns_cd18,
           b.icd_dgns_vrsn_cd18,
           b.clm_poa_ind_sw18,
           b.icd_dgns_cd19,
           b.icd_dgns_vrsn_cd19,
           b.clm_poa_ind_sw19,
           b.icd_dgns_cd20,
           b.icd_dgns_vrsn_cd20,
           b.clm_poa_ind_sw20,
           b.icd_dgns_cd21,
           b.icd_dgns_vrsn_cd21,
           b.clm_poa_ind_sw21,
           b.icd_dgns_cd22,
           b.icd_dgns_vrsn_cd22,
           b.clm_poa_ind_sw22,
           b.icd_dgns_cd23,
           b.icd_dgns_vrsn_cd23,
           b.clm_poa_ind_sw23,
           b.icd_dgns_cd24,
           b.icd_dgns_vrsn_cd24,
           b.clm_poa_ind_sw24,
           b.icd_dgns_cd25,
           b.icd_dgns_vrsn_cd25,
           b.clm_poa_ind_sw25,
           b.fst_dgns_e_cd,
           b.fst_dgns_e_vrsn_cd,
           b.icd_dgns_e_cd1,
           b.icd_dgns_e_vrsn_cd1,
           b.clm_e_poa_ind_sw1,
           b.icd_dgns_e_cd2,
           b.icd_dgns_e_vrsn_cd2,
           b.clm_e_poa_ind_sw2,
           b.icd_dgns_e_cd3,
           b.icd_dgns_e_vrsn_cd3,
           b.clm_e_poa_ind_sw3,
           b.icd_dgns_e_cd4,
           b.icd_dgns_e_vrsn_cd4,
           b.clm_e_poa_ind_sw4,
           b.icd_dgns_e_cd5,
           b.icd_dgns_e_vrsn_cd5,
           b.clm_e_poa_ind_sw5,
           b.icd_dgns_e_cd6,
           b.icd_dgns_e_vrsn_cd6,
           b.clm_e_poa_ind_sw6,
           b.icd_dgns_e_cd7,
           b.icd_dgns_e_vrsn_cd7,
           b.clm_e_poa_ind_sw7,
           b.icd_dgns_e_cd8,
           b.icd_dgns_e_vrsn_cd8,
           b.clm_e_poa_ind_sw8,
           b.icd_dgns_e_cd9,
           b.icd_dgns_e_vrsn_cd9,
           b.clm_e_poa_ind_sw9,
           b.icd_dgns_e_cd10,
           b.icd_dgns_e_vrsn_cd10,
           b.clm_e_poa_ind_sw10,
           b.icd_dgns_e_cd11,
           b.icd_dgns_e_vrsn_cd11,
           b.clm_e_poa_ind_sw11,
           b.icd_dgns_e_cd12,
           b.icd_dgns_e_vrsn_cd12,
           b.clm_e_poa_ind_sw12,
           b.icd_prcdr_cd1,
           b.icd_prcdr_vrsn_cd1,
           b.prcdr_dt1,
           b.icd_prcdr_cd2,
           b.icd_prcdr_vrsn_cd2,
           b.prcdr_dt2,
           b.icd_prcdr_cd3,
           b.icd_prcdr_vrsn_cd3,
           b.prcdr_dt3,
           b.icd_prcdr_cd4,
           b.icd_prcdr_vrsn_cd4,
           b.prcdr_dt4,
           b.icd_prcdr_cd5,
           b.icd_prcdr_vrsn_cd5,
           b.prcdr_dt5,
           b.icd_prcdr_cd6,
           b.icd_prcdr_vrsn_cd6,
           b.prcdr_dt6,
           b.icd_prcdr_cd7,
           b.icd_prcdr_vrsn_cd7,
           b.prcdr_dt7,
           b.icd_prcdr_cd8,
           b.icd_prcdr_vrsn_cd8,
           b.prcdr_dt8,
           b.icd_prcdr_cd9,
           b.icd_prcdr_vrsn_cd9,
           b.prcdr_dt9,
           b.icd_prcdr_cd10,
           b.icd_prcdr_vrsn_cd10,
           b.prcdr_dt10,
           b.icd_prcdr_cd11,
           b.icd_prcdr_vrsn_cd11,
           b.prcdr_dt11,
           b.icd_prcdr_cd12,
           b.icd_prcdr_vrsn_cd12,
           b.prcdr_dt12,
           b.icd_prcdr_cd13,
           b.icd_prcdr_vrsn_cd13,
           b.prcdr_dt13,
           b.icd_prcdr_cd14,
           b.icd_prcdr_vrsn_cd14,
           b.prcdr_dt14,
           b.icd_prcdr_cd15,
           b.icd_prcdr_vrsn_cd15,
           b.prcdr_dt15,
           b.icd_prcdr_cd16,
           b.icd_prcdr_vrsn_cd16,
           b.prcdr_dt16,
           b.icd_prcdr_cd17,
           b.icd_prcdr_vrsn_cd17,
           b.prcdr_dt17,
           b.icd_prcdr_cd18,
           b.icd_prcdr_vrsn_cd18,
           b.prcdr_dt18,
           b.icd_prcdr_cd19,
           b.icd_prcdr_vrsn_cd19,
           b.prcdr_dt19,
           b.icd_prcdr_cd20,
           b.icd_prcdr_vrsn_cd20,
           b.prcdr_dt20,
           b.icd_prcdr_cd21,
           b.icd_prcdr_vrsn_cd21,
           b.prcdr_dt21,
           b.icd_prcdr_cd22,
           b.icd_prcdr_vrsn_cd22,
           b.prcdr_dt22,
           b.icd_prcdr_cd23,
           b.icd_prcdr_vrsn_cd23,
           b.prcdr_dt23,
           b.icd_prcdr_cd24,
           b.icd_prcdr_vrsn_cd24,
           b.prcdr_dt24,
           b.icd_prcdr_cd25,
           b.icd_prcdr_vrsn_cd25,
           b.prcdr_dt25,
           b.ime_op_clm_val_amt,
           b.dsh_op_clm_val_amt,
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   ccw_pta_rev_line_fact.clm_line_num,
                                   '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_rev_cntr_prfl.rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_ansi_prfl.rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_hcpcs_cd.hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( ccw_pta_rev_line_fact.rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000') AS rndrng_physn_upin,
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000') AS rndrng_physn_npi,
           bene_part_num
           , b.finl_actn_id
                     FROM ( select /*+ parallel (16) */ * 
                              from ccw_owner.temp_inpatient_BASE_T1
                             WHERE substr(bene_id, length(bene_id), 1) =
                                   nvl(p_part_num, substr(bene_id, length(bene_id), 1))
                              ) b,
                          ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl,
                          ccw_owner.ccw_phys_at_time_of_clm
                    WHERE b.clm_id = ccw_pta_rev_line_fact.clm_id
                      and b.clm_thru_dt = ccw_pta_rev_line_fact.clm_thru_dt
                      AND ccw_pta_rev_line_fact.clm_type_id =
                          ccw_all_clm_prfl.clm_type_id
                      AND ccw_pta_rev_line_fact.ansi_prfl_id =
                          ccw_ansi_prfl.ansi_prfl_id
                      AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                          ccw_apc_hipps_prfl.rev_cntr_apc_id
                      AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                      AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                          ccw_mdfr_prfl.mdfr_prfl_id
                      AND ccw_pta_rev_line_fact.rev_cntr_id =
                          ccw_rev_cntr_prfl.rev_cntr_id
                      AND ccw_pta_rev_line_fact.rev_prfl_id =
                          ccw_rev_prfl.rev_prfl_id
                      AND ccw_pta_rev_line_fact.rndrng_physn_id =
                          ccw_phys_at_time_of_clm.physn_id ;

      ELSE

        -- 100 parts
        --get partition name
        g_part_name := get_part_name(pi_table_name => 'TEMP_INPATIENT',
                                     pi_value      => p_part_num);
        --insert data by partition
        insert_inp_delta_by_part(pi_part_name     => g_part_name,
                                 pi_bene_part_num => p_part_num);

      END IF;

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
      COMMIT;

    END IF;

    -- Moving output file writing to a common procedure, so delta inpatient can use as well.
    output_inpatient_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN
      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'INPATIENT');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_inpatient_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Inp_changes Error: ');
      RAISE;
  END extract_inpatient_changes;

  PROCEDURE insert_temp_outpatient_by_part(pi_part_name     VARCHAR2,
                                           pi_bene_part_num NUMBER) IS
  BEGIN
    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_outpatient PARTITION (' ||
                      pi_part_name || ')
      SELECT /*+ parallel (16) */
       NULL AS combo_field,
       b.version,
       b.dml_ind,
       b.bene_id,
       b.clm_id,
       b.clm_grp_id,
       REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(b.fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(claim_query_code, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(op_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(op_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ot_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ot_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_profnl_cmpnt_chrg_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt4, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt5, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt6, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt7, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt8, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt9, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt10, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt11, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt12, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt13, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt14, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt15, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt16, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt17, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt18, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt19, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt20, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt21, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt22, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt23, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt24, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(prcdr_dt25, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd1, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd2, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd3, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_bene_ptb_ddctbl_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(nch_bene_ptb_coinsrnc_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_op_prvdr_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(clm_op_bene_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE( --Rev Line Values
                               l.clm_line_num,
                               ''^''),
                       ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_2nd_ansi_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_3rd_ansi_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_4th_ansi_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_dscnt_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_packg_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_otaf_pmt_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ide_ndc_upc_num, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_blood_ddctbl_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_cash_ddctbl_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_coinsrnc_wge_adjstd_c, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_rdcd_coinsrnc_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_1st_msp_pd_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_2nd_msp_pd_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_prvdr_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_bene_pmt_amt, ''^''), ''~''),
               ''01-JAN-1000''),
       REPLACE(REPLACE(REPLACE(rev_cntr_ptnt_rspnsblty_pmt, ''^''), ''~''),
               ''01-JAN-1000''),
       b.bene_part_num
       , b.finl_actn_id
        FROM (SELECT /*+ parallel (16) */
                ' || g_version ||
                      ' version,
                ''INSERT'' dml_ind,
                ccw_pta_fact.bene_id,
                ccw_pta_fact.clm_id,
                pcg.clm_grp_id,
                ccw_pta_fact.run_dt,
                ccw_pta_fact.nch_near_line_rec_ident_cd,
                ccw_pta_fact.nch_clm_type_cd,
                ccw_pta_fact.clm_from_dt,
                ccw_pta_fact.clm_thru_dt,
                ccw_pta_fact.nch_wkly_proc_dt,
                ccw_pta_fact.fi_clm_proc_dt,
                ccw_isohh_prfl.claim_query_code,
                ccw_prvdr_at_time_of_clm.prvdr_num,
                ccw_isohh_prfl.clm_fac_type_cd,
                ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                ccw_isohh_prfl.clm_freq_cd,
                ccw_pta_fact.fi_num,
                ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                ccw_pta_fact.clm_pmt_amt,
                ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                ccw_isohh_prfl.nch_prmry_pyr_cd,
                ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                ccw_prvdr_at_time_of_clm.org_npi_num,
                ccw_pta_fact.at_physn_upin,
                ccw_pta_fact.at_physn_npi,
                ccw_pta_fact.op_physn_upin,
                ccw_pta_fact.op_physn_npi,
                ccw_pta_fact.ot_physn_upin,
                ccw_pta_fact.ot_physn_npi,
                ccw_clm_prfl.clm_mco_pd_sw,
                ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                ccw_pta_fact.nch_profnl_cmpnt_chrg_amt,
                ccw_pta_fact.clm_tot_chrg_amt,
                ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                ccw_pta_fact.nch_bene_ptb_ddctbl_amt,
                ccw_pta_fact.nch_bene_ptb_coinsrnc_amt,
                ccw_pta_fact.clm_op_prvdr_pmt_amt,
                ccw_pta_fact.clm_op_bene_pmt_amt,
                ccw_pta_fact.admtg_dgns_cd,
                ccw_pta_fact.admtg_dgns_vrsn_cd,
                ccw_pta_fact.prncpal_dgns_cd,
                ccw_pta_fact.prncpal_dgns_vrsn_cd,
                ccw_pta_fact.dgns_1_cd AS icd_dgns_cd1,
                ccw_pta_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                ccw_pta_fact.dgns_2_cd AS icd_dgns_cd2,
                ccw_pta_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                ccw_pta_fact.dgns_3_cd AS icd_dgns_cd3,
                ccw_pta_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                ccw_pta_fact.dgns_4_cd AS icd_dgns_cd4,
                ccw_pta_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                ccw_pta_fact.dgns_5_cd AS icd_dgns_cd5,
                ccw_pta_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                ccw_pta_fact.dgns_6_cd AS icd_dgns_cd6,
                ccw_pta_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                ccw_pta_fact.dgns_7_cd AS icd_dgns_cd7,
                ccw_pta_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                ccw_pta_fact.dgns_8_cd AS icd_dgns_cd8,
                ccw_pta_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                ccw_pta_fact.dgns_9_cd AS icd_dgns_cd9,
                ccw_pta_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                ccw_pta_fact.dgns_10_cd AS icd_dgns_cd10,
                ccw_pta_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                ccw_pta_fact.dgns_11_cd AS icd_dgns_cd11,
                ccw_pta_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                ccw_pta_fact.dgns_12_cd AS icd_dgns_cd12,
                ccw_pta_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                ccw_pta_fact.dgns_13_cd AS icd_dgns_cd13,
                ccw_pta_fact.dgns_13_vrsn_cd AS icd_dgns_vrsn_cd13,
                ccw_pta_fact.dgns_14_cd AS icd_dgns_cd14,
                ccw_pta_fact.dgns_14_vrsn_cd AS icd_dgns_vrsn_cd14,
                ccw_pta_fact.dgns_15_cd AS icd_dgns_cd15,
                ccw_pta_fact.dgns_15_vrsn_cd AS icd_dgns_vrsn_cd15,
                ccw_pta_fact.dgns_16_cd AS icd_dgns_cd16,
                ccw_pta_fact.dgns_16_vrsn_cd AS icd_dgns_vrsn_cd16,
                ccw_pta_fact.dgns_17_cd AS icd_dgns_cd17,
                ccw_pta_fact.dgns_17_vrsn_cd AS icd_dgns_vrsn_cd17,
                ccw_pta_fact.dgns_18_cd AS icd_dgns_cd18,
                ccw_pta_fact.dgns_18_vrsn_cd AS icd_dgns_vrsn_cd18,
                ccw_pta_fact.dgns_19_cd AS icd_dgns_cd19,
                ccw_pta_fact.dgns_19_vrsn_cd AS icd_dgns_vrsn_cd19,
                ccw_pta_fact.dgns_20_cd AS icd_dgns_cd20,
                ccw_pta_fact.dgns_20_vrsn_cd AS icd_dgns_vrsn_cd20,
                ccw_pta_fact.dgns_21_cd AS icd_dgns_cd21,
                ccw_pta_fact.dgns_21_vrsn_cd AS icd_dgns_vrsn_cd21,
                ccw_pta_fact.dgns_22_cd AS icd_dgns_cd22,
                ccw_pta_fact.dgns_22_vrsn_cd AS icd_dgns_vrsn_cd22,
                ccw_pta_fact.dgns_23_cd AS icd_dgns_cd23,
                ccw_pta_fact.dgns_23_vrsn_cd AS icd_dgns_vrsn_cd23,
                ccw_pta_fact.dgns_24_cd AS icd_dgns_cd24,
                ccw_pta_fact.dgns_24_vrsn_cd AS icd_dgns_vrsn_cd24,
                ccw_pta_fact.dgns_25_cd AS icd_dgns_cd25,
                ccw_pta_fact.dgns_25_vrsn_cd AS icd_dgns_vrsn_cd25,
                ccw_pta_fact.fst_dgns_e_cd,
                ccw_pta_fact.fst_dgns_e_vrsn_cd,
                ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd AS icd_dgns_e_cd1,
                ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd AS icd_dgns_e_vrsn_cd1,
                ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd AS icd_dgns_e_cd2,
                ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd AS icd_dgns_e_vrsn_cd2,
                ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd AS icd_dgns_e_cd3,
                ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd AS icd_dgns_e_vrsn_cd3,
                ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd AS icd_dgns_e_cd4,
                ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd AS icd_dgns_e_vrsn_cd4,
                ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd AS icd_dgns_e_cd5,
                ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd AS icd_dgns_e_vrsn_cd5,
                ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd AS icd_dgns_e_cd6,
                ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd AS icd_dgns_e_vrsn_cd6,
                ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd AS icd_dgns_e_cd7,
                ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd AS icd_dgns_e_vrsn_cd7,
                ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd AS icd_dgns_e_cd8,
                ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd AS icd_dgns_e_vrsn_cd8,
                ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd AS icd_dgns_e_cd9,
                ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd AS icd_dgns_e_vrsn_cd9,
                ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd AS icd_dgns_e_cd10,
                ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd AS icd_dgns_e_cd11,
                ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd AS icd_dgns_e_cd12,
                ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                ccw_pta_fact.prcdr_1_cd AS icd_prcdr_cd1,
                ccw_pta_fact.prcdr_1_vrsn_cd AS icd_prcdr_vrsn_cd1,
                ccw_pta_fact.prcdr_2_cd AS icd_prcdr_cd2,
                ccw_pta_fact.prcdr_2_vrsn_cd AS icd_prcdr_vrsn_cd2,
                ccw_pta_fact.prcdr_3_cd AS icd_prcdr_cd3,
                ccw_pta_fact.prcdr_3_vrsn_cd AS icd_prcdr_vrsn_cd3,
                ccw_pta_fact.prcdr_4_cd AS icd_prcdr_cd4,
                ccw_pta_fact.prcdr_4_vrsn_cd AS icd_prcdr_vrsn_cd4,
                ccw_pta_fact.prcdr_5_cd AS icd_prcdr_cd5,
                ccw_pta_fact.prcdr_5_vrsn_cd AS icd_prcdr_vrsn_cd5,
                ccw_pta_fact.prcdr_6_cd AS icd_prcdr_cd6,
                ccw_pta_fact.prcdr_6_vrsn_cd AS icd_prcdr_vrsn_cd6,
                ccw_pta_fact.prcdr_7_cd AS icd_prcdr_cd7,
                ccw_pta_fact.prcdr_7_vrsn_cd AS icd_prcdr_vrsn_cd7,
                ccw_pta_fact.prcdr_8_cd AS icd_prcdr_cd8,
                ccw_pta_fact.prcdr_8_vrsn_cd AS icd_prcdr_vrsn_cd8,
                ccw_pta_fact.prcdr_9_cd AS icd_prcdr_cd9,
                ccw_pta_fact.prcdr_9_vrsn_cd AS icd_prcdr_vrsn_cd9,
                ccw_pta_fact.prcdr_10_cd AS icd_prcdr_cd10,
                ccw_pta_fact.prcdr_10_vrsn_cd AS icd_prcdr_vrsn_cd10,
                ccw_pta_fact.prcdr_11_cd AS icd_prcdr_cd11,
                ccw_pta_fact.prcdr_11_vrsn_cd AS icd_prcdr_vrsn_cd11,
                ccw_pta_fact.prcdr_12_cd AS icd_prcdr_cd12,
                ccw_pta_fact.prcdr_12_vrsn_cd AS icd_prcdr_vrsn_cd12,
                ccw_pta_fact.prcdr_13_cd AS icd_prcdr_cd13,
                ccw_pta_fact.prcdr_13_vrsn_cd AS icd_prcdr_vrsn_cd13,
                ccw_pta_fact.prcdr_14_cd AS icd_prcdr_cd14,
                ccw_pta_fact.prcdr_14_vrsn_cd AS icd_prcdr_vrsn_cd14,
                ccw_pta_fact.prcdr_15_cd AS icd_prcdr_cd15,
                ccw_pta_fact.prcdr_15_vrsn_cd AS icd_prcdr_vrsn_cd15,
                ccw_pta_fact.prcdr_16_cd AS icd_prcdr_cd16,
                ccw_pta_fact.prcdr_16_vrsn_cd AS icd_prcdr_vrsn_cd16,
                ccw_pta_fact.prcdr_17_cd AS icd_prcdr_cd17,
                ccw_pta_fact.prcdr_17_vrsn_cd AS icd_prcdr_vrsn_cd17,
                ccw_pta_fact.prcdr_18_cd AS icd_prcdr_cd18,
                ccw_pta_fact.prcdr_18_vrsn_cd AS icd_prcdr_vrsn_cd18,
                ccw_pta_fact.prcdr_19_cd AS icd_prcdr_cd19,
                ccw_pta_fact.prcdr_19_vrsn_cd AS icd_prcdr_vrsn_cd19,
                ccw_pta_fact.prcdr_20_cd AS icd_prcdr_cd20,
                ccw_pta_fact.prcdr_20_vrsn_cd AS icd_prcdr_vrsn_cd20,
                ccw_pta_fact.prcdr_21_cd AS icd_prcdr_cd21,
                ccw_pta_fact.prcdr_21_vrsn_cd AS icd_prcdr_vrsn_cd21,
                ccw_pta_fact.prcdr_22_cd AS icd_prcdr_cd22,
                ccw_pta_fact.prcdr_22_vrsn_cd AS icd_prcdr_vrsn_cd22,
                ccw_pta_fact.prcdr_23_cd AS icd_prcdr_cd23,
                ccw_pta_fact.prcdr_23_vrsn_cd AS icd_prcdr_vrsn_cd23,
                ccw_pta_fact.prcdr_24_cd AS icd_prcdr_cd24,
                ccw_pta_fact.prcdr_24_vrsn_cd AS icd_prcdr_vrsn_cd24,
                ccw_pta_fact.prcdr_25_cd AS icd_prcdr_cd25,
                ccw_pta_fact.prcdr_25_vrsn_cd AS icd_prcdr_vrsn_cd25,
                ccw_pta_fact.prcdr_1_dt AS prcdr_dt1,
                ccw_pta_fact.prcdr_2_dt AS prcdr_dt2,
                ccw_pta_fact.prcdr_3_dt AS prcdr_dt3,
                ccw_pta_fact.prcdr_4_dt AS prcdr_dt4,
                ccw_pta_fact.prcdr_5_dt AS prcdr_dt5,
                ccw_pta_fact.prcdr_6_dt AS prcdr_dt6,
                ccw_pta_fact.prcdr_7_dt AS prcdr_dt7,
                ccw_pta_fact.prcdr_8_dt AS prcdr_dt8,
                ccw_pta_fact.prcdr_9_dt AS prcdr_dt9,
                ccw_pta_fact.prcdr_10_dt AS prcdr_dt10,
                ccw_pta_fact.prcdr_11_dt AS prcdr_dt11,
                ccw_pta_fact.prcdr_12_dt AS prcdr_dt12,
                ccw_pta_fact.prcdr_13_dt AS prcdr_dt13,
                ccw_pta_fact.prcdr_14_dt AS prcdr_dt14,
                ccw_pta_fact.prcdr_15_dt AS prcdr_dt15,
                ccw_pta_fact.prcdr_16_dt AS prcdr_dt16,
                ccw_pta_fact.prcdr_17_dt AS prcdr_dt17,
                ccw_pta_fact.prcdr_18_dt AS prcdr_dt18,
                ccw_pta_fact.prcdr_19_dt AS prcdr_dt19,
                ccw_pta_fact.prcdr_20_dt AS prcdr_dt20,
                ccw_pta_fact.prcdr_21_dt AS prcdr_dt21,
                ccw_pta_fact.prcdr_22_dt AS prcdr_dt22,
                ccw_pta_fact.prcdr_23_dt AS prcdr_dt23,
                ccw_pta_fact.prcdr_24_dt AS prcdr_dt24,
                ccw_pta_fact.prcdr_25_dt AS prcdr_dt25,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_1_cd AS rsn_visit_cd1,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_1_vrsn_cd AS rsn_visit_vrsn_cd1,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_2_cd AS rsn_visit_cd2,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_2_vrsn_cd AS rsn_visit_vrsn_cd2,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_3_cd AS rsn_visit_cd3,
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_3_vrsn_cd AS rsn_visit_vrsn_cd3,
                ccw_all_clm_dmgrphc_prfl.dob_dt,
                ccw_all_clm_dmgrphc_prfl.gndr_cd,
                ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                ccw_geo_prfl.bene_cnty_cd,
                ccw_geo_prfl.bene_state_cd,
                ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                ccw_pta_fact.bene_part_num
                ,ccw_pta_fact.finl_actn_id
                 FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                      ccw_owner.ccw_all_clm_prfl,
                      ccw_owner.ccw_clm_prfl,
                      ccw_owner.ccw_isohh_prfl,
                      ccw_owner.ccw_prvdr_at_time_of_clm,
                      ccw_owner.ccw_all_clm_dmgrphc_prfl,
                      ccw_owner.ccw_geo_prfl,
                      ccw_owner.ccw_dgns_e_cd_grp_prfl,
                      ccw_owner.ccw_rsn_visit_cd_grp_prfl
                     ,ccw_owner.fhir_pta_clm_grp pcg
                WHERE ccw_pta_fact.ip_snf_clm_fields_id =
                ccw_clm_prfl.ip_snf_clm_field_id
             AND ccw_pta_fact.isohh_clm_fields_id =
                ccw_isohh_prfl.isohh_clm_fields_id
             AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                ccw_prvdr_at_time_of_clm.prvdr_id
             AND ccw_pta_fact.all_clm_dmgrphc_id =
                ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
             AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
             AND ccw_pta_fact.dgns_e_cd_grp_id =
                ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
             AND ccw_pta_fact.rsn_visit_cd_grp_id =
                ccw_rsn_visit_cd_grp_prfl.rsn_visit_cd_grp_id
             AND ccw_pta_fact.nch_clm_type_cd IN (''40'', ''41'', ''42'')
             AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
             AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
             AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
             AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
             AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
             AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
             AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd 
             AND ccw_pta_fact.bene_part_num =
                nvl(' || pi_bene_part_num ||
                      ', ccw_pta_fact.bene_part_num)) b,
             (SELECT /*+ parallel (16) */
                ' || g_version ||
                      ' version,
                ''INSERT'' dml_ind,
                ccw_pta_rev_line_fact.bene_id,
                ccw_pta_rev_line_fact.clm_id,
                ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                ccw_pta_rev_line_fact.clm_line_num,
                ccw_pta_rev_line_fact.nch_clm_type_cd,
                ccw_rev_cntr_prfl.rev_cntr,
                ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                ccw_ansi_prfl.rev_cntr_2nd_ansi_cd,
                ccw_ansi_prfl.rev_cntr_3rd_ansi_cd,
                ccw_ansi_prfl.rev_cntr_4th_ansi_cd,
                ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                ccw_hcpcs_cd.hcpcs_cd,
                ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd    AS rev_cntr_pmt_mthd_ind_cd_old,
                ccw_rev_prfl.rev_cntr_pmt_ind_cd         AS rev_cntr_pmt_mthd_ind_cd,
                ccw_rev_prfl.rev_cntr_dscnt_ind_cd,
                ccw_rev_prfl.rev_cntr_packg_ind_cd,
                ccw_rev_prfl.rev_cntr_otaf_pmt_cd,
                ccw_pta_rev_line_fact.rev_cntr_ide_ndc_upc_num,
                ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                ccw_rev_prfl.rev_cntr_stus_ind_cd,
                ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                ccw_phys_at_time_of_clm.physn_upin                   AS rndrng_physn_upin,
                ccw_phys_at_time_of_clm.physn_npi                    AS rndrng_physn_npi,
                ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id,
                ccw_pta_rev_line_fact.rev_cntr_blood_ddctbl_amt,
                ccw_pta_rev_line_fact.rev_cntr_cash_ddctbl_amt,
                ccw_pta_rev_line_fact.rev_cntr_coinsrnc_wge_adjstd_c,
                ccw_pta_rev_line_fact.rev_cntr_rdcd_coinsrnc_amt,
                ccw_pta_rev_line_fact.rev_cntr_1st_msp_pd_amt,
                ccw_pta_rev_line_fact.rev_cntr_2nd_msp_pd_amt,
                ccw_pta_rev_line_fact.rev_cntr_prvdr_pmt_amt,
                ccw_pta_rev_line_fact.rev_cntr_bene_pmt_amt,
                ccw_pta_rev_line_fact.rev_cntr_ptnt_rspnsblty_pmt
                 FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                      ccw_owner.ccw_ansi_prfl,
                      ccw_owner.ccw_apc_hipps_prfl,
                      ccw_owner.ccw_hcpcs_cd,
                      ccw_owner.ccw_mdfr_prfl,
                      ccw_owner.ccw_rev_cntr_prfl,
                      ccw_owner.ccw_rev_prfl,
                      ccw_owner.ccw_phys_at_time_of_clm
                WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                ccw_ansi_prfl.ansi_prfl_id
             AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                ccw_apc_hipps_prfl.rev_cntr_apc_id
             AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
             AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                ccw_mdfr_prfl.mdfr_prfl_id
             AND ccw_pta_rev_line_fact.rev_cntr_id =
                ccw_rev_cntr_prfl.rev_cntr_id
             AND ccw_pta_rev_line_fact.rev_prfl_id = ccw_rev_prfl.rev_prfl_id
             AND ccw_pta_rev_line_fact.rndrng_physn_id =
                ccw_phys_at_time_of_clm.physn_id
             AND ccw_pta_rev_line_fact.nch_clm_type_cd IN (''40'', ''41'', ''42'')
             AND ccw_pta_rev_line_fact.bene_part_num =
                nvl(' || pi_bene_part_num ||
                      ', ccw_pta_rev_line_fact.bene_part_num)) l
       WHERE b.clm_id = l.clm_id');

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

  END insert_temp_outpatient_by_part;

  PROCEDURE extract_outpatient(p_part_num     VARCHAR2,
                               pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                               pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                               pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                               pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                               pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                            ,  pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_OUTPATIENT',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_outpatient - started');

    END IF;

    g_tot_rows := 0;

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'outpatient' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    dbms_application_info.set_client_info('temp_outpatient');

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_outpatient');
      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_OUTPATIENT',
                                   pi_value      => p_part_num);
      --insert data by partition
      insert_temp_outpatient_by_part(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num);


      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_OUTPATIENT',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_OUTPATIENT',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;

    END IF;

    -- Moving output file writing to a common procedure, so delta hha can use as well.
    output_outpatient_file(p_part_num, pb_output_data);

    COMMIT;

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'OUTPATIENT');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;

    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_outpatient - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_OUTP Error: ');
      RAISE;
  END extract_outpatient;

  PROCEDURE insert_outp_delta_by_part_f(pi_part_name     VARCHAR2,
                                      pi_bene_part_num VARCHAR2, 
                                      pi_bene_ss_len   NUMBER ) 
  IS
     l_part_str VARCHAR2(64); 
  BEGIN
    
    --
    -- Set l_part_str var based on pi_part_name
    -- 
    IF pi_part_name IS NOT NULL THEN 
       l_part_str := ' PARTITION ( '||pi_part_name ||' ) '; 
    ELSE
       l_part_str := NULL; 
    END IF; 
                                
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_outp_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_outpatient_BASE_T1 '||l_part_str||     
        ' WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.nch_wkly_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(b.fi_clm_proc_dt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(claim_query_code, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(op_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(op_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_profnl_cmpnt_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_cd1, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd1, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_cd2, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd2, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_cd3, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(rsn_visit_vrsn_cd3, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_ptb_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(nch_bene_ptb_coinsrnc_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_op_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(clm_op_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),

           ---- Covering the line info ----
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           null, null, null, null,
           -- Commented out line data --
           b.bene_part_num
           ,b.finl_actn_id    --3.20
            FROM (SELECT /*+  full (ccw_pta_fact) parallel (16) */
                   ' || g_version || ' version,
                   pta.dml_ind, 
                   ccw_pta_fact.bene_id,
                   ccw_pta_fact.clm_id,
                   ccw_pta_fact.run_dt,
                   ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                   ccw_all_clm_prfl.nch_clm_type_cd,
                   ccw_pta_fact.clm_from_dt,
                   ccw_pta_fact.clm_thru_dt,
                   ccw_pta_fact.nch_wkly_proc_dt,
                   ccw_pta_fact.fi_clm_proc_dt,
                   ccw_isohh_prfl.claim_query_code,
                   ccw_prvdr_at_time_of_clm.prvdr_num,
                   ccw_isohh_prfl.clm_fac_type_cd,
                   ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                   ccw_isohh_prfl.clm_freq_cd,
                   ccw_pta_fact.fi_num,
                   ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                   ccw_pta_fact.clm_pmt_amt,
                   ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                   ccw_isohh_prfl.nch_prmry_pyr_cd,
                   ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                   ccw_prvdr_at_time_of_clm.org_npi_num,
                   atphi.physn_upin                              AS at_physn_upin,
                   atphi.physn_npi                               AS at_physn_npi,
                   opphi.physn_upin                              AS op_physn_upin,
                   opphi.physn_npi                               AS op_physn_npi,
                   otphi.physn_upin                              AS ot_physn_upin,
                   otphi.physn_npi                               AS ot_physn_npi,
                   ccw_clm_prfl.clm_mco_pd_sw,
                   ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                   ccw_pta_fact.nch_profnl_cmpnt_chrg_amt,
                   ccw_pta_fact.clm_tot_chrg_amt,
                   ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                   ccw_pta_fact.nch_bene_ptb_ddctbl_amt,
                   ccw_pta_fact.nch_bene_ptb_coinsrnc_amt,
                   ccw_pta_fact.clm_op_prvdr_pmt_amt,
                   ccw_pta_fact.clm_op_bene_pmt_amt,
                   ccw_pta_fact.admtg_dgns_cd,
                   ccw_pta_fact.admtg_dgns_vrsn_cd,
                   ccw_pta_fact.prncpal_dgns_cd,
                   ccw_pta_fact.prncpal_dgns_vrsn_cd,
                   ccw_pta_fact.dgns_1_cd                        AS icd_dgns_cd1,
                   ccw_pta_fact.dgns_1_vrsn_cd                   AS icd_dgns_vrsn_cd1,
                   ccw_pta_fact.dgns_2_cd                        AS icd_dgns_cd2,
                   ccw_pta_fact.dgns_2_vrsn_cd                   AS icd_dgns_vrsn_cd2,
                   ccw_pta_fact.dgns_3_cd                        AS icd_dgns_cd3,
                   ccw_pta_fact.dgns_3_vrsn_cd                   AS icd_dgns_vrsn_cd3,
                   ccw_pta_fact.dgns_4_cd                        AS icd_dgns_cd4,
                   ccw_pta_fact.dgns_4_vrsn_cd                   AS icd_dgns_vrsn_cd4,
                   ccw_pta_fact.dgns_5_cd                        AS icd_dgns_cd5,
                   ccw_pta_fact.dgns_5_vrsn_cd                   AS icd_dgns_vrsn_cd5,
                   ccw_pta_fact.dgns_6_cd                        AS icd_dgns_cd6,
                   ccw_pta_fact.dgns_6_vrsn_cd                   AS icd_dgns_vrsn_cd6,
                   ccw_pta_fact.dgns_7_cd                        AS icd_dgns_cd7,
                   ccw_pta_fact.dgns_7_vrsn_cd                   AS icd_dgns_vrsn_cd7,
                   ccw_pta_fact.dgns_8_cd                        AS icd_dgns_cd8,
                   ccw_pta_fact.dgns_8_vrsn_cd                   AS icd_dgns_vrsn_cd8,
                   ccw_pta_fact.dgns_9_cd                        AS icd_dgns_cd9,
                   ccw_pta_fact.dgns_9_vrsn_cd                   AS icd_dgns_vrsn_cd9,
                   ccw_pta_fact.dgns_10_cd                       AS icd_dgns_cd10,
                   ccw_pta_fact.dgns_10_vrsn_cd                  AS icd_dgns_vrsn_cd10,
                   ccw_pta_fact.dgns_11_cd                       AS icd_dgns_cd11,
                   ccw_pta_fact.dgns_11_vrsn_cd                  AS icd_dgns_vrsn_cd11,
                   ccw_pta_fact.dgns_12_cd                       AS icd_dgns_cd12,
                   ccw_pta_fact.dgns_12_vrsn_cd                  AS icd_dgns_vrsn_cd12,
                   ccw_pta_fact.dgns_13_cd                       AS icd_dgns_cd13,
                   ccw_pta_fact.dgns_13_vrsn_cd                  AS icd_dgns_vrsn_cd13,
                   ccw_pta_fact.dgns_14_cd                       AS icd_dgns_cd14,
                   ccw_pta_fact.dgns_14_vrsn_cd                  AS icd_dgns_vrsn_cd14,
                   ccw_pta_fact.dgns_15_cd                       AS icd_dgns_cd15,
                   ccw_pta_fact.dgns_15_vrsn_cd                  AS icd_dgns_vrsn_cd15,
                   ccw_pta_fact.dgns_16_cd                       AS icd_dgns_cd16,
                   ccw_pta_fact.dgns_16_vrsn_cd                  AS icd_dgns_vrsn_cd16,
                   ccw_pta_fact.dgns_17_cd                       AS icd_dgns_cd17,
                   ccw_pta_fact.dgns_17_vrsn_cd                  AS icd_dgns_vrsn_cd17,
                   ccw_pta_fact.dgns_18_cd                       AS icd_dgns_cd18,
                   ccw_pta_fact.dgns_18_vrsn_cd                  AS icd_dgns_vrsn_cd18,
                   ccw_pta_fact.dgns_19_cd                       AS icd_dgns_cd19,
                   ccw_pta_fact.dgns_19_vrsn_cd                  AS icd_dgns_vrsn_cd19,
                   ccw_pta_fact.dgns_20_cd                       AS icd_dgns_cd20,
                   ccw_pta_fact.dgns_20_vrsn_cd                  AS icd_dgns_vrsn_cd20,
                   ccw_pta_fact.dgns_21_cd                       AS icd_dgns_cd21,
                   ccw_pta_fact.dgns_21_vrsn_cd                  AS icd_dgns_vrsn_cd21,
                   ccw_pta_fact.dgns_22_cd                       AS icd_dgns_cd22,
                   ccw_pta_fact.dgns_22_vrsn_cd                  AS icd_dgns_vrsn_cd22,
                   ccw_pta_fact.dgns_23_cd                       AS icd_dgns_cd23,
                   ccw_pta_fact.dgns_23_vrsn_cd                  AS icd_dgns_vrsn_cd23,
                   ccw_pta_fact.dgns_24_cd                       AS icd_dgns_cd24,
                   ccw_pta_fact.dgns_24_vrsn_cd                  AS icd_dgns_vrsn_cd24,
                   ccw_pta_fact.dgns_25_cd                       AS icd_dgns_cd25,
                   ccw_pta_fact.dgns_25_vrsn_cd                  AS icd_dgns_vrsn_cd25,
                   ccw_pta_fact.fst_dgns_e_cd,
                   ccw_pta_fact.fst_dgns_e_vrsn_cd,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd            AS icd_dgns_e_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd       AS icd_dgns_e_vrsn_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd            AS icd_dgns_e_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd       AS icd_dgns_e_vrsn_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd            AS icd_dgns_e_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd       AS icd_dgns_e_vrsn_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd            AS icd_dgns_e_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd       AS icd_dgns_e_vrsn_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd            AS icd_dgns_e_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd       AS icd_dgns_e_vrsn_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd            AS icd_dgns_e_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd       AS icd_dgns_e_vrsn_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd            AS icd_dgns_e_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd       AS icd_dgns_e_vrsn_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd            AS icd_dgns_e_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd       AS icd_dgns_e_vrsn_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd            AS icd_dgns_e_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd       AS icd_dgns_e_vrsn_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd           AS icd_dgns_e_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd      AS icd_dgns_e_vrsn_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd           AS icd_dgns_e_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd      AS icd_dgns_e_vrsn_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd           AS icd_dgns_e_cd12,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd      AS icd_dgns_e_vrsn_cd12,
                   ccw_pta_fact.prcdr_1_cd                       AS icd_prcdr_cd1,
                   ccw_pta_fact.prcdr_1_vrsn_cd                  AS icd_prcdr_vrsn_cd1,
                   ccw_pta_fact.prcdr_2_cd                       AS icd_prcdr_cd2,
                   ccw_pta_fact.prcdr_2_vrsn_cd                  AS icd_prcdr_vrsn_cd2,
                   ccw_pta_fact.prcdr_3_cd                       AS icd_prcdr_cd3,
                   ccw_pta_fact.prcdr_3_vrsn_cd                  AS icd_prcdr_vrsn_cd3,
                   ccw_pta_fact.prcdr_4_cd                       AS icd_prcdr_cd4,
                   ccw_pta_fact.prcdr_4_vrsn_cd                  AS icd_prcdr_vrsn_cd4,
                   ccw_pta_fact.prcdr_5_cd                       AS icd_prcdr_cd5,
                   ccw_pta_fact.prcdr_5_vrsn_cd                  AS icd_prcdr_vrsn_cd5,
                   ccw_pta_fact.prcdr_6_cd                       AS icd_prcdr_cd6,
                   ccw_pta_fact.prcdr_6_vrsn_cd                  AS icd_prcdr_vrsn_cd6,
                   ccw_pta_fact.prcdr_7_cd                       AS icd_prcdr_cd7,
                   ccw_pta_fact.prcdr_7_vrsn_cd                  AS icd_prcdr_vrsn_cd7,
                   ccw_pta_fact.prcdr_8_cd                       AS icd_prcdr_cd8,
                   ccw_pta_fact.prcdr_8_vrsn_cd                  AS icd_prcdr_vrsn_cd8,
                   ccw_pta_fact.prcdr_9_cd                       AS icd_prcdr_cd9,
                   ccw_pta_fact.prcdr_9_vrsn_cd                  AS icd_prcdr_vrsn_cd9,
                   ccw_pta_fact.prcdr_10_cd                      AS icd_prcdr_cd10,
                   ccw_pta_fact.prcdr_10_vrsn_cd                 AS icd_prcdr_vrsn_cd10,
                   ccw_pta_fact.prcdr_11_cd                      AS icd_prcdr_cd11,
                   ccw_pta_fact.prcdr_11_vrsn_cd                 AS icd_prcdr_vrsn_cd11,
                   ccw_pta_fact.prcdr_12_cd                      AS icd_prcdr_cd12,
                   ccw_pta_fact.prcdr_12_vrsn_cd                 AS icd_prcdr_vrsn_cd12,
                   ccw_pta_fact.prcdr_13_cd                      AS icd_prcdr_cd13,
                   ccw_pta_fact.prcdr_13_vrsn_cd                 AS icd_prcdr_vrsn_cd13,
                   ccw_pta_fact.prcdr_14_cd                      AS icd_prcdr_cd14,
                   ccw_pta_fact.prcdr_14_vrsn_cd                 AS icd_prcdr_vrsn_cd14,
                   ccw_pta_fact.prcdr_15_cd                      AS icd_prcdr_cd15,
                   ccw_pta_fact.prcdr_15_vrsn_cd                 AS icd_prcdr_vrsn_cd15,
                   ccw_pta_fact.prcdr_16_cd                      AS icd_prcdr_cd16,
                   ccw_pta_fact.prcdr_16_vrsn_cd                 AS icd_prcdr_vrsn_cd16,
                   ccw_pta_fact.prcdr_17_cd                      AS icd_prcdr_cd17,
                   ccw_pta_fact.prcdr_17_vrsn_cd                 AS icd_prcdr_vrsn_cd17,
                   ccw_pta_fact.prcdr_18_cd                      AS icd_prcdr_cd18,
                   ccw_pta_fact.prcdr_18_vrsn_cd                 AS icd_prcdr_vrsn_cd18,
                   ccw_pta_fact.prcdr_19_cd                      AS icd_prcdr_cd19,
                   ccw_pta_fact.prcdr_19_vrsn_cd                 AS icd_prcdr_vrsn_cd19,
                   ccw_pta_fact.prcdr_20_cd                      AS icd_prcdr_cd20,
                   ccw_pta_fact.prcdr_20_vrsn_cd                 AS icd_prcdr_vrsn_cd20,
                   ccw_pta_fact.prcdr_21_cd                      AS icd_prcdr_cd21,
                   ccw_pta_fact.prcdr_21_vrsn_cd                 AS icd_prcdr_vrsn_cd21,
                   ccw_pta_fact.prcdr_22_cd                      AS icd_prcdr_cd22,
                   ccw_pta_fact.prcdr_22_vrsn_cd                 AS icd_prcdr_vrsn_cd22,
                   ccw_pta_fact.prcdr_23_cd                      AS icd_prcdr_cd23,
                   ccw_pta_fact.prcdr_23_vrsn_cd                 AS icd_prcdr_vrsn_cd23,
                   ccw_pta_fact.prcdr_24_cd                      AS icd_prcdr_cd24,
                   ccw_pta_fact.prcdr_24_vrsn_cd                 AS icd_prcdr_vrsn_cd24,
                   ccw_pta_fact.prcdr_25_cd                      AS icd_prcdr_cd25,
                   ccw_pta_fact.prcdr_25_vrsn_cd                 AS icd_prcdr_vrsn_cd25,
                   ccw_pta_fact.prcdr_1_dt                       AS prcdr_dt1,
                   ccw_pta_fact.prcdr_2_dt                       AS prcdr_dt2,
                   ccw_pta_fact.prcdr_3_dt                       AS prcdr_dt3,
                   ccw_pta_fact.prcdr_4_dt                       AS prcdr_dt4,
                   ccw_pta_fact.prcdr_5_dt                       AS prcdr_dt5,
                   ccw_pta_fact.prcdr_6_dt                       AS prcdr_dt6,
                   ccw_pta_fact.prcdr_7_dt                       AS prcdr_dt7,
                   ccw_pta_fact.prcdr_8_dt                       AS prcdr_dt8,
                   ccw_pta_fact.prcdr_9_dt                       AS prcdr_dt9,
                   ccw_pta_fact.prcdr_10_dt                      AS prcdr_dt10,
                   ccw_pta_fact.prcdr_11_dt                      AS prcdr_dt11,
                   ccw_pta_fact.prcdr_12_dt                      AS prcdr_dt12,
                   ccw_pta_fact.prcdr_13_dt                      AS prcdr_dt13,
                   ccw_pta_fact.prcdr_14_dt                      AS prcdr_dt14,
                   ccw_pta_fact.prcdr_15_dt                      AS prcdr_dt15,
                   ccw_pta_fact.prcdr_16_dt                      AS prcdr_dt16,
                   ccw_pta_fact.prcdr_17_dt                      AS prcdr_dt17,
                   ccw_pta_fact.prcdr_18_dt                      AS prcdr_dt18,
                   ccw_pta_fact.prcdr_19_dt                      AS prcdr_dt19,
                   ccw_pta_fact.prcdr_20_dt                      AS prcdr_dt20,
                   ccw_pta_fact.prcdr_21_dt                      AS prcdr_dt21,
                   ccw_pta_fact.prcdr_22_dt                      AS prcdr_dt22,
                   ccw_pta_fact.prcdr_23_dt                      AS prcdr_dt23,
                   ccw_pta_fact.prcdr_24_dt                      AS prcdr_dt24,
                   ccw_pta_fact.prcdr_25_dt                      AS prcdr_dt25,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_1_cd      AS rsn_visit_cd1,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_1_vrsn_cd AS rsn_visit_vrsn_cd1,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_2_cd      AS rsn_visit_cd2,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_2_vrsn_cd AS rsn_visit_vrsn_cd2,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_3_cd      AS rsn_visit_cd3,
                   ccw_rsn_visit_cd_grp_prfl.rsn_visit_3_vrsn_cd AS rsn_visit_vrsn_cd3,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                   ccw_geo_prfl.bene_cnty_cd,
                   ccw_geo_prfl.bene_state_cd,
                   ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                   '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                   ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    substr(ccw_pta_fact.bene_id,
                           length(ccw_pta_fact.bene_id) - '||pi_bene_ss_len||'  + 1,'||
                           pi_bene_ss_len|| ') bene_part_num,
                     pta.clm_grp_id               
                   , ccw_pta_fact.finl_actn_id   
                    FROM (select /*+ parallel (16) */ *
                           from ccw_owner.fhir_pta_ld_clm_status
                           where job_ld_dt IS NULL
                             and nch_clm_type_cd IN (''40'', ''41'', ''42'')
                             AND clm_grp_id IS NOT NULL   
                            AND substr(bene_id,
                                        length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                        || pi_bene_ss_len|| ') 
                                        = nvl('||CHR(39)||
                                              pi_bene_part_num||CHR(39)||',
                                              substr(bene_id,
                                              length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                              || pi_bene_ss_len ||')))      pta,
                         ccw_owner.ccw_pta_fact           ccw_pta_fact,
                         ccw_owner.ccw_all_clm_prfl,
                         ccw_owner.ccw_clm_prfl,
                         ccw_owner.ccw_isohh_prfl,
                         ccw_owner.ccw_prvdr_at_time_of_clm,
                         phy atphi, 
                         phy opphi, 
                         phy otphi, 
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.ccw_geo_prfl,
                         ccw_owner.ccw_dgns_e_cd_grp_prfl,
                         ccw_owner.ccw_rsn_visit_cd_grp_prfl
                   WHERE ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_fact.ip_snf_clm_fields_id = ccw_clm_prfl.ip_snf_clm_field_id
                     AND ccw_pta_fact.isohh_clm_fields_id = ccw_isohh_prfl.isohh_clm_fields_id
                     AND ccw_pta_fact.prvdr_at_time_of_clm_id = ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_pta_fact.atndg_physn_id = atphi.physn_id
                     AND ccw_pta_fact.clm_oprtg_physn_id = opphi.physn_id
                     AND ccw_pta_fact.clm_other_physn_id = otphi.physn_id
                     AND ccw_pta_fact.all_clm_dmgrphc_id =
                         ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                     AND ccw_pta_fact.dgns_e_cd_grp_id =
                         ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                     AND ccw_pta_fact.rsn_visit_cd_grp_id =
                         ccw_rsn_visit_cd_grp_prfl.rsn_visit_cd_grp_id
                     AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                     AND ccw_pta_fact.clm_id = pta.clm_id) b');
          
    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
    
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'FINISHED - insert_outp_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len );
     

  END insert_outp_delta_by_part_f; 
  
  PROCEDURE insert_outp_delta_by_part_l(pi_part_name     VARCHAR2,
                                      pi_bene_part_num VARCHAR2, 
                                      pi_bene_ss_len   NUMBER ) 
  IS
     l_part_str VARCHAR2(64); 
  BEGIN
    
    --
    -- Set l_part_str var based on pi_part_name
    -- 
    IF pi_part_name IS NOT NULL THEN 
       l_part_str := ' PARTITION ( '||pi_part_name ||' ) '; 
    ELSE
       l_part_str := NULL; 
    END IF; 
                                
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_outp_delta_by_part_l: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);
                                              
                                              
    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_outpatient '|| l_part_str || 
        ' SELECT /*+ parallel (16) */   
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           b.nch_near_line_rec_ident_cd,
           b.nch_clm_type_cd,
           b.clm_from_dt,
           b.clm_thru_dt,
           b.nch_wkly_proc_dt,
           b.fi_clm_proc_dt,
           b.claim_query_code,
           b.prvdr_num,
           b.clm_fac_type_cd,
           b.clm_srvc_clsfctn_type_cd,
           b.clm_freq_cd,
           b.fi_num,
           b.clm_mdcr_non_pmt_rsn_cd,
           b.clm_pmt_amt,
           b.nch_prmry_pyr_clm_pd_amt,
           b.nch_prmry_pyr_cd,
           b.prvdr_state_cd,
           b.org_npi_num,
           b.at_physn_upin,
           b.at_physn_npi,
           b.op_physn_upin,
           b.op_physn_npi,
           b.ot_physn_upin,
           b.ot_physn_npi,
           b.clm_mco_pd_sw,
           b.ptnt_dschrg_stus_cd,
           b.clm_tot_chrg_amt,
           b.nch_bene_blood_ddctbl_lblty_am,
           b.nch_profnl_cmpnt_chrg_amt,
           b.prncpal_dgns_cd,
           b.prncpal_dgns_vrsn_cd,
           b.icd_dgns_cd1,
           b.icd_dgns_vrsn_cd1,
           b.icd_dgns_cd2,
           b.icd_dgns_vrsn_cd2,
           b.icd_dgns_cd3,
           b.icd_dgns_vrsn_cd3,
           b.icd_dgns_cd4,
           b.icd_dgns_vrsn_cd4,
           b.icd_dgns_cd5,
           b.icd_dgns_vrsn_cd5,
           b.icd_dgns_cd6,
           b.icd_dgns_vrsn_cd6,
           b.icd_dgns_cd7,
           b.icd_dgns_vrsn_cd7,
           b.icd_dgns_cd8,
           b.icd_dgns_vrsn_cd8,
           b.icd_dgns_cd9,
           b.icd_dgns_vrsn_cd9,
           b.icd_dgns_cd10,
           b.icd_dgns_vrsn_cd10,
           b.icd_dgns_cd11,
           b.icd_dgns_vrsn_cd11,
           b.icd_dgns_cd12,
           b.icd_dgns_vrsn_cd12,
           b.icd_dgns_cd13,
           b.icd_dgns_vrsn_cd13,
           b.icd_dgns_cd14,
           b.icd_dgns_vrsn_cd14,
           b.icd_dgns_cd15,
           b.icd_dgns_vrsn_cd15,
           b.icd_dgns_cd16,
           b.icd_dgns_vrsn_cd16,
           b.icd_dgns_cd17,
           b.icd_dgns_vrsn_cd17,
           b.icd_dgns_cd18,
           b.icd_dgns_vrsn_cd18,
           b.icd_dgns_cd19,
           b.icd_dgns_vrsn_cd19,
           b.icd_dgns_cd20,
           b.icd_dgns_vrsn_cd20,
           b.icd_dgns_cd21,
           b.icd_dgns_vrsn_cd21,
           b.icd_dgns_cd22,
           b.icd_dgns_vrsn_cd22,
           b.icd_dgns_cd23,
           b.icd_dgns_vrsn_cd23,
           b.icd_dgns_cd24,
           b.icd_dgns_vrsn_cd24,
           b.icd_dgns_cd25,
           b.icd_dgns_vrsn_cd25,
           b.fst_dgns_e_cd,
           b.fst_dgns_e_vrsn_cd,
           b.icd_dgns_e_cd1,
           b.icd_dgns_e_vrsn_cd1,
           b.icd_dgns_e_cd2,
           b.icd_dgns_e_vrsn_cd2,
           b.icd_dgns_e_cd3,
           b.icd_dgns_e_vrsn_cd3,
           b.icd_dgns_e_cd4,
           b.icd_dgns_e_vrsn_cd4,
           b.icd_dgns_e_cd5,
           b.icd_dgns_e_vrsn_cd5,
           b.icd_dgns_e_cd6,
           b.icd_dgns_e_vrsn_cd6,
           b.icd_dgns_e_cd7,
           b.icd_dgns_e_vrsn_cd7,
           b.icd_dgns_e_cd8,
           b.icd_dgns_e_vrsn_cd8,
           b.icd_dgns_e_cd9,
           b.icd_dgns_e_vrsn_cd9,
           b.icd_dgns_e_cd10,
           b.icd_dgns_e_vrsn_cd10,
           b.icd_dgns_e_cd11,
           b.icd_dgns_e_vrsn_cd11,
           b.icd_dgns_e_cd12,
           b.icd_dgns_e_vrsn_cd12,
           b.icd_prcdr_cd1,
           b.icd_prcdr_vrsn_cd1,
           b.prcdr_dt1,
           b.icd_prcdr_cd2,
           b.icd_prcdr_vrsn_cd2,
           b.prcdr_dt2,
           b.icd_prcdr_cd3,
           b.icd_prcdr_vrsn_cd3,
           b.prcdr_dt3,
           b.icd_prcdr_cd4,
           b.icd_prcdr_vrsn_cd4,
           b.prcdr_dt4,
           b.icd_prcdr_cd5,
           b.icd_prcdr_vrsn_cd5,
           b.prcdr_dt5,
           b.icd_prcdr_cd6,
           b.icd_prcdr_vrsn_cd6,
           b.prcdr_dt6,
           b.icd_prcdr_cd7,
           b.icd_prcdr_vrsn_cd7,
           b.prcdr_dt7,
           b.icd_prcdr_cd8,
           b.icd_prcdr_vrsn_cd8,
           b.prcdr_dt8,
           b.icd_prcdr_cd9,
           b.icd_prcdr_vrsn_cd9,
           b.prcdr_dt9,
           b.icd_prcdr_cd10,
           b.icd_prcdr_vrsn_cd10,
           b.prcdr_dt10,
           b.icd_prcdr_cd11,
           b.icd_prcdr_vrsn_cd11,
           b.prcdr_dt11,
           b.icd_prcdr_cd12,
           b.icd_prcdr_vrsn_cd12,
           b.prcdr_dt12,
           b.icd_prcdr_cd13,
           b.icd_prcdr_vrsn_cd13,
           b.prcdr_dt13,
           b.icd_prcdr_cd14,
           b.icd_prcdr_vrsn_cd14,
           b.prcdr_dt14,
           b.icd_prcdr_cd15,
           b.icd_prcdr_vrsn_cd15,
           b.prcdr_dt15,
           b.icd_prcdr_cd16,
           b.icd_prcdr_vrsn_cd16,
           b.prcdr_dt16,
           b.icd_prcdr_cd17,
           b.icd_prcdr_vrsn_cd17,
           b.prcdr_dt17,
           b.icd_prcdr_cd18,
           b.icd_prcdr_vrsn_cd18,
           b.prcdr_dt18,
           b.icd_prcdr_cd19,
           b.icd_prcdr_vrsn_cd19,
           b.prcdr_dt19,
           b.icd_prcdr_cd20,
           b.icd_prcdr_vrsn_cd20,
           b.prcdr_dt20,
           b.icd_prcdr_cd21,
           b.icd_prcdr_vrsn_cd21,
           b.prcdr_dt21,
           b.icd_prcdr_cd22,
           b.icd_prcdr_vrsn_cd22,
           b.prcdr_dt22,
           b.icd_prcdr_cd23,
           b.icd_prcdr_vrsn_cd23,
           b.prcdr_dt23,
           b.icd_prcdr_cd24,
           b.icd_prcdr_vrsn_cd24,
           b.prcdr_dt24,
           b.icd_prcdr_cd25,
           b.icd_prcdr_vrsn_cd25,
           b.prcdr_dt25,
           b.rsn_visit_cd1,
           b.rsn_visit_vrsn_cd1,
           b.rsn_visit_cd2,
           b.rsn_visit_vrsn_cd2,
           b.rsn_visit_cd3,
           b.rsn_visit_vrsn_cd3,
           b.nch_bene_ptb_ddctbl_amt,
           b.nch_bene_ptb_coinsrnc_amt,
           b.clm_op_prvdr_pmt_amt,
           b.clm_op_bene_pmt_amt,
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   ccw_pta_rev_line_fact.clm_line_num,
                                   ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_cntr_prfl.rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000'') AS rev_cntr_dt,
           REPLACE(REPLACE(REPLACE(ccw_ansi_prfl.rev_cntr_1st_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_ansi_prfl.rev_cntr_2nd_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_ansi_prfl.rev_cntr_3rd_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_ansi_prfl.rev_cntr_4th_ansi_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_hcpcs_cd.hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_1st_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_pmt_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000'') AS rev_cntr_pmt_mthd_ind_cd,
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_dscnt_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_packg_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_otaf_pmt_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ide_ndc_upc_num, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_unit_cnt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_rate_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_rev_prfl.rev_cntr_stus_ind_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ndc_qty, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_phys_at_time_of_clm.physn_upin, ''^''), ''~''), ''01-JAN-1000'') AS rndrng_physn_upin,
           REPLACE(REPLACE(REPLACE(ccw_phys_at_time_of_clm.physn_npi, ''^''), ''~''), ''01-JAN-1000'') AS rndrng_physn_npi,
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_blood_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_cash_ddctbl_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_coinsrnc_wge_adjstd_c, ''^''),
                           ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_rdcd_coinsrnc_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_1st_msp_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_2nd_msp_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_prvdr_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_bene_pmt_amt, ''^''), ''~''),
                   ''01-JAN-1000''),
           REPLACE(REPLACE(REPLACE(ccw_pta_rev_line_fact.rev_cntr_ptnt_rspnsblty_pmt, ''^''), ''~''),
                   ''01-JAN-1000''),
           b.bene_part_num,
           b.finl_actn_id 
            FROM ( select /*+ parallel (16) */ * 
                     from ccw_owner.temp_outpatient_BASE_T1
                    WHERE bene_part_num =  nvl('||CHR(39)||pi_bene_part_num||CHR(39)||
                                             ', bene_part_num))    b,
                 ccw_owner.ccw_pta_rev_line_fact   ccw_pta_rev_line_fact,
                 ccw_owner.ccw_all_clm_prfl,
                 ccw_owner.ccw_ansi_prfl,
                 ccw_owner.ccw_apc_hipps_prfl,
                 ccw_owner.ccw_hcpcs_cd,
                 ccw_owner.ccw_mdfr_prfl,
                 ccw_owner.ccw_rev_cntr_prfl,
                 ccw_owner.ccw_rev_prfl,
                 ccw_owner.ccw_phys_at_time_of_clm
           WHERE b.clm_thru_dt = ccw_pta_rev_line_fact.clm_thru_dt
             and b.clm_id = ccw_pta_rev_line_fact.clm_id
             and ccw_pta_rev_line_fact.clm_type_id =
                 ccw_all_clm_prfl.clm_type_id
             AND ccw_pta_rev_line_fact.ansi_prfl_id =
                 ccw_ansi_prfl.ansi_prfl_id
             AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                 ccw_apc_hipps_prfl.rev_cntr_apc_id
             AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
             AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                 ccw_mdfr_prfl.mdfr_prfl_id
             AND ccw_pta_rev_line_fact.rev_cntr_id =
                 ccw_rev_cntr_prfl.rev_cntr_id
             AND ccw_pta_rev_line_fact.rev_prfl_id =
                 ccw_rev_prfl.rev_prfl_id
             AND ccw_pta_rev_line_fact.rndrng_physn_id =
                 ccw_phys_at_time_of_clm.physn_id');
    
    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
    
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'FINISHED - insert_outp_delta_by_part_l: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len );
                                              
      
  END insert_outp_delta_by_part_l;

  PROCEDURE extract_outpatient_changes(p_strt_dt      DATE,
                                       p_end_dt       DATE,
                                       p_prcsg_dt     DATE,
                                       p_part_num     VARCHAR2,
                                       pb_load_data   VARCHAR2, 
                                       pb_new_version VARCHAR2 
                                    ,  pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;
    l_bene_ss_len NUMBER;    -- 3.22 - use p_part_num(as a #) length to determine
                             -- substr length of bene_id in dynamic sql 
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_OUTPATIENT_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_outpatient_changes - started');
    END IF; 

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    g_tot_rows := 0;

    -- l_bene_ss_len := LENGTH (TO_CHAR (TO_NUMBER (p_part_num)));
    l_bene_ss_len := LENGTH (p_part_num);
    -- 3.22 If l_bene_ss_len Is not 1 or 2 error if NULL set to 1
    IF l_bene_ss_len IS NULL THEN
       l_bene_ss_len := 1; 
    END IF;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len 
                                      || ' From p_part_num: '||p_part_num );

    
    IF l_bene_ss_len > 2 THEN 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len
                                 || ' this IS A PROBLEM' );
    END IF;  
    
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('extract_OUTP_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'outpatient_upd' || g_separator || p_part_num ||
                  g_separator || delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_outpatient');
      truncate_table(p_part_num, 'temp_outpatient_base_t1');

      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_OUTPATIENT_BASE_T1',         -- clm/fact table
                                   pi_value      => p_part_num);

      --insert by partition
      insert_outp_delta_by_part_f(pi_part_name     => g_part_name,
                                        pi_bene_part_num => p_part_num, 
                                        pi_bene_ss_len   => l_bene_ss_len);
      
      COMMIT; 

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_OUTPATIENT_BASE_T1',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_OUTPATIENT_BASE_T1',
                                         p_ptn_nm      => 'BENE_PART' ||
                                                          to_number(p_part_num),
                                         p_granularity => 'PARTITION',
                                         p_ecode_out   => g_ecode,
                                         p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
      
      COMMIT; 
      --
      -- Consolidate TEMP_OUTPATIENT_BASE_T1 with Line data into TEMP_OUTPATIENT
      -- 
      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_OUTPATIENT',         -- line table
                                   pi_value      => p_part_num);

      --insert by partition
      insert_outp_delta_by_part_l(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num, 
                                     pi_bene_ss_len   => l_bene_ss_len);
      COMMIT; 
      

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_OUTPATIENT',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_OUTPATIENT',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
      
      COMMIT; 
    END IF;  -- load_data 
    
    -- Moving output file writing to a common procedure, so delta outpatient can use as well.
    --output_outpatient_file(p_part_num);  -- , booleantotruefalse(g_output_data));
    -- Moving output file writing to a common procedure, so delta outpatient can use as well.
    output_outpatient_file(p_part_num, booleantotruefalse(g_output_data));
    
    update_file_version(p_new_version);
    COMMIT; 

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN
      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'OUTPATIENT');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_outpatient_changes - finished');

    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_OUTP_Changes Error: ');
      RAISE;
  END extract_outpatient_changes;

  PROCEDURE extract_snf(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                     ,  pb_output_data VARCHAR2 DEFAULT 'TRUE') IS
    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_SNF',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_snf - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'snf' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    dbms_application_info.set_client_info('temp_snf');

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_snf');

      IF p_100_parts OR p_part_num IS NULL THEN
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_snf
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id, 
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(claim_query_code, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_drg_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   clm_line_num,
                                   '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000'),
           b.bene_part_num
           ,b.finl_actn_id   
            FROM (SELECT /*+ parallel (16) */
                    g_version version,
                    'INSERT' dml_ind,
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    pcg.clm_grp_id, 
                    ccw_pta_fact.run_dt,
                    ccw_pta_fact.nch_near_line_rec_ident_cd,
                    ccw_pta_fact.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_isohh_prfl.claim_query_code,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_clm_prfl.fi_clm_actn_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    ccw_pta_fact.at_physn_upin,
                    ccw_pta_fact.at_physn_npi,
                    ccw_pta_fact.op_physn_upin,
                    ccw_pta_fact.op_physn_npi,
                    ccw_pta_fact.ot_physn_upin,
                    ccw_pta_fact.ot_physn_npi,
                    ccw_clm_prfl.clm_mco_pd_sw,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_clm_prfl.clm_pps_ind_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_pta_fact.clm_admsn_dt,
                    ccw_clm_prfl.clm_ip_admsn_type_cd,
                    ccw_clm_prfl.clm_src_ip_admsn_cd,
                    ccw_clm_prfl.nch_ptnt_status_ind_cd,
                    ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                    ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                    ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                    ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                    ccw_pta_fact.nch_ip_tot_ddctn_amt,
                    ccw_pta_fact.clm_pps_cptl_fsp_amt,
                    ccw_pta_fact.clm_pps_cptl_outlier_amt,
                    ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                    ccw_pta_fact.clm_pps_cptl_ime_amt,
                    ccw_pta_fact.clm_pps_cptl_excptn_amt,
                    ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                    ccw_pta_fact.clm_utlztn_day_cnt,
                    ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                    ccw_pta_fact.clm_non_utlztn_days_cnt,
                    ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                    ccw_pta_fact.nch_qlfyd_stay_from_dt,
                    ccw_pta_fact.nch_qlfyd_stay_thru_dt,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                    ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                    ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                    ccw_pta_fact.nch_bene_dschrg_dt,
                    ccw_drg.clm_drg_cd,
                    ccw_pta_fact.admtg_dgns_cd,
                    ccw_pta_fact.admtg_dgns_vrsn_cd,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                    ccw_pta_fact.prcdr_1_cd                     AS icd_prcdr_cd1,
                    ccw_pta_fact.prcdr_1_vrsn_cd                AS icd_prcdr_vrsn_cd1,
                    ccw_pta_fact.prcdr_2_cd                     AS icd_prcdr_cd2,
                    ccw_pta_fact.prcdr_2_vrsn_cd                AS icd_prcdr_vrsn_cd2,
                    ccw_pta_fact.prcdr_3_cd                     AS icd_prcdr_cd3,
                    ccw_pta_fact.prcdr_3_vrsn_cd                AS icd_prcdr_vrsn_cd3,
                    ccw_pta_fact.prcdr_4_cd                     AS icd_prcdr_cd4,
                    ccw_pta_fact.prcdr_4_vrsn_cd                AS icd_prcdr_vrsn_cd4,
                    ccw_pta_fact.prcdr_5_cd                     AS icd_prcdr_cd5,
                    ccw_pta_fact.prcdr_5_vrsn_cd                AS icd_prcdr_vrsn_cd5,
                    ccw_pta_fact.prcdr_6_cd                     AS icd_prcdr_cd6,
                    ccw_pta_fact.prcdr_6_vrsn_cd                AS icd_prcdr_vrsn_cd6,
                    ccw_pta_fact.prcdr_7_cd                     AS icd_prcdr_cd7,
                    ccw_pta_fact.prcdr_7_vrsn_cd                AS icd_prcdr_vrsn_cd7,
                    ccw_pta_fact.prcdr_8_cd                     AS icd_prcdr_cd8,
                    ccw_pta_fact.prcdr_8_vrsn_cd                AS icd_prcdr_vrsn_cd8,
                    ccw_pta_fact.prcdr_9_cd                     AS icd_prcdr_cd9,
                    ccw_pta_fact.prcdr_9_vrsn_cd                AS icd_prcdr_vrsn_cd9,
                    ccw_pta_fact.prcdr_10_cd                    AS icd_prcdr_cd10,
                    ccw_pta_fact.prcdr_10_vrsn_cd               AS icd_prcdr_vrsn_cd10,
                    ccw_pta_fact.prcdr_11_cd                    AS icd_prcdr_cd11,
                    ccw_pta_fact.prcdr_11_vrsn_cd               AS icd_prcdr_vrsn_cd11,
                    ccw_pta_fact.prcdr_12_cd                    AS icd_prcdr_cd12,
                    ccw_pta_fact.prcdr_12_vrsn_cd               AS icd_prcdr_vrsn_cd12,
                    ccw_pta_fact.prcdr_13_cd                    AS icd_prcdr_cd13,
                    ccw_pta_fact.prcdr_13_vrsn_cd               AS icd_prcdr_vrsn_cd13,
                    ccw_pta_fact.prcdr_14_cd                    AS icd_prcdr_cd14,
                    ccw_pta_fact.prcdr_14_vrsn_cd               AS icd_prcdr_vrsn_cd14,
                    ccw_pta_fact.prcdr_15_cd                    AS icd_prcdr_cd15,
                    ccw_pta_fact.prcdr_15_vrsn_cd               AS icd_prcdr_vrsn_cd15,
                    ccw_pta_fact.prcdr_16_cd                    AS icd_prcdr_cd16,
                    ccw_pta_fact.prcdr_16_vrsn_cd               AS icd_prcdr_vrsn_cd16,
                    ccw_pta_fact.prcdr_17_cd                    AS icd_prcdr_cd17,
                    ccw_pta_fact.prcdr_17_vrsn_cd               AS icd_prcdr_vrsn_cd17,
                    ccw_pta_fact.prcdr_18_cd                    AS icd_prcdr_cd18,
                    ccw_pta_fact.prcdr_18_vrsn_cd               AS icd_prcdr_vrsn_cd18,
                    ccw_pta_fact.prcdr_19_cd                    AS icd_prcdr_cd19,
                    ccw_pta_fact.prcdr_19_vrsn_cd               AS icd_prcdr_vrsn_cd19,
                    ccw_pta_fact.prcdr_20_cd                    AS icd_prcdr_cd20,
                    ccw_pta_fact.prcdr_20_vrsn_cd               AS icd_prcdr_vrsn_cd20,
                    ccw_pta_fact.prcdr_21_cd                    AS icd_prcdr_cd21,
                    ccw_pta_fact.prcdr_21_vrsn_cd               AS icd_prcdr_vrsn_cd21,
                    ccw_pta_fact.prcdr_22_cd                    AS icd_prcdr_cd22,
                    ccw_pta_fact.prcdr_22_vrsn_cd               AS icd_prcdr_vrsn_cd22,
                    ccw_pta_fact.prcdr_23_cd                    AS icd_prcdr_cd23,
                    ccw_pta_fact.prcdr_23_vrsn_cd               AS icd_prcdr_vrsn_cd23,
                    ccw_pta_fact.prcdr_24_cd                    AS icd_prcdr_cd24,
                    ccw_pta_fact.prcdr_24_vrsn_cd               AS icd_prcdr_vrsn_cd24,
                    ccw_pta_fact.prcdr_25_cd                    AS icd_prcdr_cd25,
                    ccw_pta_fact.prcdr_25_vrsn_cd               AS icd_prcdr_vrsn_cd25,
                    ccw_pta_fact.prcdr_1_dt                     AS prcdr_dt1,
                    ccw_pta_fact.prcdr_2_dt                     AS prcdr_dt2,
                    ccw_pta_fact.prcdr_3_dt                     AS prcdr_dt3,
                    ccw_pta_fact.prcdr_4_dt                     AS prcdr_dt4,
                    ccw_pta_fact.prcdr_5_dt                     AS prcdr_dt5,
                    ccw_pta_fact.prcdr_6_dt                     AS prcdr_dt6,
                    ccw_pta_fact.prcdr_7_dt                     AS prcdr_dt7,
                    ccw_pta_fact.prcdr_8_dt                     AS prcdr_dt8,
                    ccw_pta_fact.prcdr_9_dt                     AS prcdr_dt9,
                    ccw_pta_fact.prcdr_10_dt                    AS prcdr_dt10,
                    ccw_pta_fact.prcdr_11_dt                    AS prcdr_dt11,
                    ccw_pta_fact.prcdr_12_dt                    AS prcdr_dt12,
                    ccw_pta_fact.prcdr_13_dt                    AS prcdr_dt13,
                    ccw_pta_fact.prcdr_14_dt                    AS prcdr_dt14,
                    ccw_pta_fact.prcdr_15_dt                    AS prcdr_dt15,
                    ccw_pta_fact.prcdr_16_dt                    AS prcdr_dt16,
                    ccw_pta_fact.prcdr_17_dt                    AS prcdr_dt17,
                    ccw_pta_fact.prcdr_18_dt                    AS prcdr_dt18,
                    ccw_pta_fact.prcdr_19_dt                    AS prcdr_dt19,
                    ccw_pta_fact.prcdr_20_dt                    AS prcdr_dt20,
                    ccw_pta_fact.prcdr_21_dt                    AS prcdr_dt21,
                    ccw_pta_fact.prcdr_22_dt                    AS prcdr_dt22,
                    ccw_pta_fact.prcdr_23_dt                    AS prcdr_dt23,
                    ccw_pta_fact.prcdr_24_dt                    AS prcdr_dt24,
                    ccw_pta_fact.prcdr_25_dt                    AS prcdr_dt25,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_fact.bene_part_num
                    ,ccw_pta_fact.finl_actn_id   
                     FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl, 
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_drg,
                          ccw_owner.ccw_isohh_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl,
                          ccw_owner.fhir_pta_clm_grp       pcg 
                    WHERE ccw_pta_fact.ip_snf_clm_fields_id =
                    ccw_clm_prfl.ip_snf_clm_field_id
                 AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                 AND ccw_pta_fact.isohh_clm_fields_id =
                    ccw_isohh_prfl.isohh_clm_fields_id
                 AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                    ccw_prvdr_at_time_of_clm.prvdr_id
                 AND ccw_pta_fact.all_clm_dmgrphc_id =
                    ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                 AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND ccw_pta_fact.dgns_e_cd_grp_id =
                    ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND ccw_pta_fact.nch_clm_type_cd IN ('20', '30')
                 AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
                 AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
                 AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
                 AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
                 AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                 AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                 AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd 
                 AND ccw_pta_fact.bene_part_num =
                    nvl(p_part_num, ccw_pta_fact.bene_part_num)
                    ) b,
                 (SELECT /*+ parallel (16) */
                    g_version version,
                    'INSERT' dml_ind,
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_pta_rev_line_fact.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    ccw_pta_rev_line_fact.rndrng_physn_upin,
                    ccw_pta_rev_line_fact.rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl 
                 WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                    ccw_ansi_prfl.ansi_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                    ccw_apc_hipps_prfl.rev_cntr_apc_id
                 AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                 AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                    ccw_mdfr_prfl.mdfr_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_id =
                    ccw_rev_cntr_prfl.rev_cntr_id
                 AND ccw_pta_rev_line_fact.rev_prfl_id =
                    ccw_rev_prfl.rev_prfl_id
                 AND ccw_pta_rev_line_fact.nch_clm_type_cd IN ('20', '30')
                 AND ccw_pta_rev_line_fact.bene_part_num =
                    nvl(p_part_num, ccw_pta_rev_line_fact.bene_part_num)
                   ) l
           WHERE b.clm_id = l.clm_id;

        g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      ELSE
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_snf
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id, 
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(claim_query_code, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_drg_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   clm_line_num,
                                   '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000'),
           b.bene_part_num
           ,b.finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                    g_version version,
                    'INSERT' dml_ind,
                    ccw_pta_fact.bene_id,
                    ccw_pta_fact.clm_id,
                    pcg.clm_grp_id, 
                    ccw_pta_fact.run_dt,
                    ccw_pta_fact.nch_near_line_rec_ident_cd,
                    ccw_pta_fact.nch_clm_type_cd,
                    ccw_pta_fact.clm_from_dt,
                    ccw_pta_fact.clm_thru_dt,
                    ccw_pta_fact.nch_wkly_proc_dt,
                    ccw_pta_fact.fi_clm_proc_dt,
                    ccw_isohh_prfl.claim_query_code,
                    ccw_prvdr_at_time_of_clm.prvdr_num,
                    ccw_isohh_prfl.clm_fac_type_cd,
                    ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                    ccw_isohh_prfl.clm_freq_cd,
                    ccw_pta_fact.fi_num,
                    ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                    ccw_pta_fact.clm_pmt_amt,
                    ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                    ccw_isohh_prfl.nch_prmry_pyr_cd,
                    ccw_clm_prfl.fi_clm_actn_cd,
                    ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                    ccw_prvdr_at_time_of_clm.org_npi_num,
                    ccw_pta_fact.at_physn_upin,
                    ccw_pta_fact.at_physn_npi,
                    ccw_pta_fact.op_physn_upin,
                    ccw_pta_fact.op_physn_npi,
                    ccw_pta_fact.ot_physn_upin,
                    ccw_pta_fact.ot_physn_npi,
                    ccw_clm_prfl.clm_mco_pd_sw,
                    ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                    ccw_clm_prfl.clm_pps_ind_cd,
                    ccw_pta_fact.clm_tot_chrg_amt,
                    ccw_pta_fact.clm_admsn_dt,
                    ccw_clm_prfl.clm_ip_admsn_type_cd,
                    ccw_clm_prfl.clm_src_ip_admsn_cd,
                    ccw_clm_prfl.nch_ptnt_status_ind_cd,
                    ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                    ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                    ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                    ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                    ccw_pta_fact.nch_ip_tot_ddctn_amt,
                    ccw_pta_fact.clm_pps_cptl_fsp_amt,
                    ccw_pta_fact.clm_pps_cptl_outlier_amt,
                    ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                    ccw_pta_fact.clm_pps_cptl_ime_amt,
                    ccw_pta_fact.clm_pps_cptl_excptn_amt,
                    ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                    ccw_pta_fact.clm_utlztn_day_cnt,
                    ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                    ccw_pta_fact.clm_non_utlztn_days_cnt,
                    ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                    ccw_pta_fact.nch_qlfyd_stay_from_dt,
                    ccw_pta_fact.nch_qlfyd_stay_thru_dt,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                    ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                    ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                    ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                    ccw_pta_fact.nch_bene_dschrg_dt,
                    ccw_drg.clm_drg_cd,
                    ccw_pta_fact.admtg_dgns_cd,
                    ccw_pta_fact.admtg_dgns_vrsn_cd,
                    ccw_pta_fact.prncpal_dgns_cd,
                    ccw_pta_fact.prncpal_dgns_vrsn_cd,
                    ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                    ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                    ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                    ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                    ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                    ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                    ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                    ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                    ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                    ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                    ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                    ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                    ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                    ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                    ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                    ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                    ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                    ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                    ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                    ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                    ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                    ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                    ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                    ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                    ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                    ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                    ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                    ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                    ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                    ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                    ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                    ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                    ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                    ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                    ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                    ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                    ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                    ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                    ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                    ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                    ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                    ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                    ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                    ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                    ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                    ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                    ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                    ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                    ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                    ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                    ccw_pta_fact.fst_dgns_e_cd,
                    ccw_pta_fact.fst_dgns_e_vrsn_cd,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                    ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                    ccw_pta_fact.prcdr_1_cd                     AS icd_prcdr_cd1,
                    ccw_pta_fact.prcdr_1_vrsn_cd                AS icd_prcdr_vrsn_cd1,
                    ccw_pta_fact.prcdr_2_cd                     AS icd_prcdr_cd2,
                    ccw_pta_fact.prcdr_2_vrsn_cd                AS icd_prcdr_vrsn_cd2,
                    ccw_pta_fact.prcdr_3_cd                     AS icd_prcdr_cd3,
                    ccw_pta_fact.prcdr_3_vrsn_cd                AS icd_prcdr_vrsn_cd3,
                    ccw_pta_fact.prcdr_4_cd                     AS icd_prcdr_cd4,
                    ccw_pta_fact.prcdr_4_vrsn_cd                AS icd_prcdr_vrsn_cd4,
                    ccw_pta_fact.prcdr_5_cd                     AS icd_prcdr_cd5,
                    ccw_pta_fact.prcdr_5_vrsn_cd                AS icd_prcdr_vrsn_cd5,
                    ccw_pta_fact.prcdr_6_cd                     AS icd_prcdr_cd6,
                    ccw_pta_fact.prcdr_6_vrsn_cd                AS icd_prcdr_vrsn_cd6,
                    ccw_pta_fact.prcdr_7_cd                     AS icd_prcdr_cd7,
                    ccw_pta_fact.prcdr_7_vrsn_cd                AS icd_prcdr_vrsn_cd7,
                    ccw_pta_fact.prcdr_8_cd                     AS icd_prcdr_cd8,
                    ccw_pta_fact.prcdr_8_vrsn_cd                AS icd_prcdr_vrsn_cd8,
                    ccw_pta_fact.prcdr_9_cd                     AS icd_prcdr_cd9,
                    ccw_pta_fact.prcdr_9_vrsn_cd                AS icd_prcdr_vrsn_cd9,
                    ccw_pta_fact.prcdr_10_cd                    AS icd_prcdr_cd10,
                    ccw_pta_fact.prcdr_10_vrsn_cd               AS icd_prcdr_vrsn_cd10,
                    ccw_pta_fact.prcdr_11_cd                    AS icd_prcdr_cd11,
                    ccw_pta_fact.prcdr_11_vrsn_cd               AS icd_prcdr_vrsn_cd11,
                    ccw_pta_fact.prcdr_12_cd                    AS icd_prcdr_cd12,
                    ccw_pta_fact.prcdr_12_vrsn_cd               AS icd_prcdr_vrsn_cd12,
                    ccw_pta_fact.prcdr_13_cd                    AS icd_prcdr_cd13,
                    ccw_pta_fact.prcdr_13_vrsn_cd               AS icd_prcdr_vrsn_cd13,
                    ccw_pta_fact.prcdr_14_cd                    AS icd_prcdr_cd14,
                    ccw_pta_fact.prcdr_14_vrsn_cd               AS icd_prcdr_vrsn_cd14,
                    ccw_pta_fact.prcdr_15_cd                    AS icd_prcdr_cd15,
                    ccw_pta_fact.prcdr_15_vrsn_cd               AS icd_prcdr_vrsn_cd15,
                    ccw_pta_fact.prcdr_16_cd                    AS icd_prcdr_cd16,
                    ccw_pta_fact.prcdr_16_vrsn_cd               AS icd_prcdr_vrsn_cd16,
                    ccw_pta_fact.prcdr_17_cd                    AS icd_prcdr_cd17,
                    ccw_pta_fact.prcdr_17_vrsn_cd               AS icd_prcdr_vrsn_cd17,
                    ccw_pta_fact.prcdr_18_cd                    AS icd_prcdr_cd18,
                    ccw_pta_fact.prcdr_18_vrsn_cd               AS icd_prcdr_vrsn_cd18,
                    ccw_pta_fact.prcdr_19_cd                    AS icd_prcdr_cd19,
                    ccw_pta_fact.prcdr_19_vrsn_cd               AS icd_prcdr_vrsn_cd19,
                    ccw_pta_fact.prcdr_20_cd                    AS icd_prcdr_cd20,
                    ccw_pta_fact.prcdr_20_vrsn_cd               AS icd_prcdr_vrsn_cd20,
                    ccw_pta_fact.prcdr_21_cd                    AS icd_prcdr_cd21,
                    ccw_pta_fact.prcdr_21_vrsn_cd               AS icd_prcdr_vrsn_cd21,
                    ccw_pta_fact.prcdr_22_cd                    AS icd_prcdr_cd22,
                    ccw_pta_fact.prcdr_22_vrsn_cd               AS icd_prcdr_vrsn_cd22,
                    ccw_pta_fact.prcdr_23_cd                    AS icd_prcdr_cd23,
                    ccw_pta_fact.prcdr_23_vrsn_cd               AS icd_prcdr_vrsn_cd23,
                    ccw_pta_fact.prcdr_24_cd                    AS icd_prcdr_cd24,
                    ccw_pta_fact.prcdr_24_vrsn_cd               AS icd_prcdr_vrsn_cd24,
                    ccw_pta_fact.prcdr_25_cd                    AS icd_prcdr_cd25,
                    ccw_pta_fact.prcdr_25_vrsn_cd               AS icd_prcdr_vrsn_cd25,
                    ccw_pta_fact.prcdr_1_dt                     AS prcdr_dt1,
                    ccw_pta_fact.prcdr_2_dt                     AS prcdr_dt2,
                    ccw_pta_fact.prcdr_3_dt                     AS prcdr_dt3,
                    ccw_pta_fact.prcdr_4_dt                     AS prcdr_dt4,
                    ccw_pta_fact.prcdr_5_dt                     AS prcdr_dt5,
                    ccw_pta_fact.prcdr_6_dt                     AS prcdr_dt6,
                    ccw_pta_fact.prcdr_7_dt                     AS prcdr_dt7,
                    ccw_pta_fact.prcdr_8_dt                     AS prcdr_dt8,
                    ccw_pta_fact.prcdr_9_dt                     AS prcdr_dt9,
                    ccw_pta_fact.prcdr_10_dt                    AS prcdr_dt10,
                    ccw_pta_fact.prcdr_11_dt                    AS prcdr_dt11,
                    ccw_pta_fact.prcdr_12_dt                    AS prcdr_dt12,
                    ccw_pta_fact.prcdr_13_dt                    AS prcdr_dt13,
                    ccw_pta_fact.prcdr_14_dt                    AS prcdr_dt14,
                    ccw_pta_fact.prcdr_15_dt                    AS prcdr_dt15,
                    ccw_pta_fact.prcdr_16_dt                    AS prcdr_dt16,
                    ccw_pta_fact.prcdr_17_dt                    AS prcdr_dt17,
                    ccw_pta_fact.prcdr_18_dt                    AS prcdr_dt18,
                    ccw_pta_fact.prcdr_19_dt                    AS prcdr_dt19,
                    ccw_pta_fact.prcdr_20_dt                    AS prcdr_dt20,
                    ccw_pta_fact.prcdr_21_dt                    AS prcdr_dt21,
                    ccw_pta_fact.prcdr_22_dt                    AS prcdr_dt22,
                    ccw_pta_fact.prcdr_23_dt                    AS prcdr_dt23,
                    ccw_pta_fact.prcdr_24_dt                    AS prcdr_dt24,
                    ccw_pta_fact.prcdr_25_dt                    AS prcdr_dt25,
                    ccw_all_clm_dmgrphc_prfl.dob_dt,
                    ccw_all_clm_dmgrphc_prfl.gndr_cd,
                    ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                    ccw_geo_prfl.bene_cnty_cd,
                    ccw_geo_prfl.bene_state_cd,
                    ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                    ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                    ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                    ccw_pta_fact.bene_part_num
                   ,ccw_pta_fact.finl_actn_id  
                     FROM ccw_owner.temp_fhir_pta_fact ccw_pta_fact,
                          ccw_owner.ccw_all_clm_prfl,
                          ccw_owner.ccw_clm_prfl,
                          ccw_owner.ccw_drg,
                          ccw_owner.ccw_isohh_prfl,
                          ccw_owner.ccw_prvdr_at_time_of_clm,
                          ccw_owner.ccw_all_clm_dmgrphc_prfl,
                          ccw_owner.ccw_geo_prfl,
                          ccw_owner.ccw_dgns_e_cd_grp_prfl,
                          ccw_owner.fhir_pta_clm_grp       pcg 
                    WHERE ccw_pta_fact.ip_snf_clm_fields_id =
                    ccw_clm_prfl.ip_snf_clm_field_id
                 AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                 AND ccw_pta_fact.isohh_clm_fields_id =
                    ccw_isohh_prfl.isohh_clm_fields_id
                 AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                    ccw_prvdr_at_time_of_clm.prvdr_id
                 AND ccw_pta_fact.all_clm_dmgrphc_id =
                    ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                 AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                 AND ccw_pta_fact.dgns_e_cd_grp_id =
                    ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                 AND ccw_pta_fact.nch_clm_type_cd IN ('20', '30')
                 AND pcg.prvdr_num = ccw_prvdr_at_time_of_clm.prvdr_num
                 AND pcg.clm_from_dt = ccw_pta_fact.clm_from_dt
                 AND pcg.clm_thru_dt = ccw_pta_fact.clm_thru_dt
                 AND pcg.bene_clm_acnt_num = ccw_pta_fact.bene_clm_acnt_num
                 AND ccw_pta_fact.clm_type_id = ccw_all_clm_prfl.clm_type_id
                 AND pcg.eqtbl_bic_cd = ccw_all_clm_prfl.eqtbl_bic_cd
                 AND pcg.nch_clm_type_cd = ccw_pta_fact.nch_clm_type_cd 
                 AND ccw_pta_fact.bene_part_num LIKE '%' || p_part_num) b,
                 (SELECT /*+ parallel (16) */
                    g_version version,
                    'INSERT' dml_ind,
                    ccw_pta_rev_line_fact.bene_id,
                    ccw_pta_rev_line_fact.clm_id,
                    ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                    ccw_pta_rev_line_fact.clm_line_num,
                    ccw_pta_rev_line_fact.nch_clm_type_cd,
                    ccw_rev_cntr_prfl.rev_cntr,
                    ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                    ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                    ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                    ccw_hcpcs_cd.hcpcs_cd,
                    ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                    ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                    ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                    ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                    ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                    ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                    ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                    ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                    ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                    ccw_rev_prfl.rev_cntr_stus_ind_cd,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                    ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                    ccw_pta_rev_line_fact.rndrng_physn_upin,
                    ccw_pta_rev_line_fact.rndrng_physn_npi,
                    ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                     FROM ccw_owner.temp_fhir_pta_rev_line_fact ccw_pta_rev_line_fact,
                          ccw_owner.ccw_ansi_prfl,
                          ccw_owner.ccw_apc_hipps_prfl,
                          ccw_owner.ccw_hcpcs_cd,
                          ccw_owner.ccw_mdfr_prfl,
                          ccw_owner.ccw_rev_cntr_prfl,
                          ccw_owner.ccw_rev_prfl 
                  WHERE ccw_pta_rev_line_fact.ansi_prfl_id =
                    ccw_ansi_prfl.ansi_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                    ccw_apc_hipps_prfl.rev_cntr_apc_id
                 AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                 AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                    ccw_mdfr_prfl.mdfr_prfl_id
                 AND ccw_pta_rev_line_fact.rev_cntr_id =
                    ccw_rev_cntr_prfl.rev_cntr_id
                 AND ccw_pta_rev_line_fact.rev_prfl_id =
                    ccw_rev_prfl.rev_prfl_id
                 AND ccw_pta_rev_line_fact.nch_clm_type_cd IN ('20', '30')
                 AND ccw_pta_rev_line_fact.bene_part_num LIKE
                    '%' || p_part_num
                   ) l
           WHERE b.clm_id = l.clm_id;

        g_tot_rows := g_tot_rows + SQL%ROWCOUNT;
      END IF;

      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_SNF',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_SNF',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;

    END IF;

    -- Moving output file writing to a common procedure, so delta snf can use as well.
    output_snf_file(p_part_num, pb_output_data);

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'SNF');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
      END IF;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_snf - finished');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_snf - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_SNF Error: ');
      RAISE;
  END extract_snf;

  PROCEDURE insert_temp_snf_delta_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_snf PARTITION (' ||
                      pi_part_name || ' )
        SELECT /*+ parallel (16) */
         NULL AS combo_field,
         b.version,
         b.dml_ind,
         b.bene_id,
         b.clm_id,
         b.clm_grp_id,
         REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_from_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(b.clm_thru_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(claim_query_code, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_fac_type_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_freq_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pmt_amt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prvdr_state_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(org_npi_num, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(at_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(op_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(op_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ot_physn_upin, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ot_physn_npi, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_admsn_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_from_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_thru_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(clm_drg_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(admtg_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt1, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt2, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt3, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt4, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt5, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt6, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt7, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt8, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt9, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt10, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt11, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt12, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt13, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt14, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt15, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt16, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt17, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt18, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt19, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt20, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt21, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt22, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt23, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt24, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(prcdr_dt25, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE( --Rev Line Values
                                 clm_line_num,
                                 ''^''),
                         ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_dt, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_cd, ''^''), ''~''), ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_upin, ''^''), ''~''),
                 ''01-JAN-1000''),
         REPLACE(REPLACE(REPLACE(rndrng_physn_npi, ''^''), ''~''),
                 ''01-JAN-1000''),
         b.bene_part_num
         , b.finl_actn_id
          FROM (SELECT /*+ full (ccw_pta_fact) parallel (16) */         
                 ' || g_version ||
                      ' version,
                 pta.dml_ind,    
                 ccw_pta_fact.bene_id,
                 ccw_pta_fact.clm_id,
                 ccw_pta_fact.run_dt,
                 ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                 ccw_all_clm_prfl.nch_clm_type_cd,
                 ccw_pta_fact.clm_from_dt,
                 ccw_pta_fact.clm_thru_dt,
                 ccw_pta_fact.nch_wkly_proc_dt,
                 ccw_pta_fact.fi_clm_proc_dt,
                 ccw_isohh_prfl.claim_query_code,
                 ccw_prvdr_at_time_of_clm.prvdr_num,
                 ccw_isohh_prfl.clm_fac_type_cd,
                 ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                 ccw_isohh_prfl.clm_freq_cd,
                 ccw_pta_fact.fi_num,
                 ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                 ccw_pta_fact.clm_pmt_amt,
                 ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                 ccw_isohh_prfl.nch_prmry_pyr_cd,
                 ccw_clm_prfl.fi_clm_actn_cd,
                 ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                 ccw_prvdr_at_time_of_clm.org_npi_num,
                 atphi.physn_upin AS at_physn_upin,
                 atphi.physn_npi AS at_physn_npi,
                 opphi.physn_upin AS op_physn_upin,
                 opphi.physn_npi AS op_physn_npi,
                 otphi.physn_upin AS ot_physn_upin,
                 otphi.physn_npi AS ot_physn_npi,
                 ccw_clm_prfl.clm_mco_pd_sw,
                 ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                 ccw_clm_prfl.clm_pps_ind_cd,
                 ccw_pta_fact.clm_tot_chrg_amt,
                 ccw_pta_fact.clm_admsn_dt,
                 ccw_clm_prfl.clm_ip_admsn_type_cd,
                 ccw_clm_prfl.clm_src_ip_admsn_cd,
                 ccw_clm_prfl.nch_ptnt_status_ind_cd,
                 ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                 ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                 ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                 ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                 ccw_pta_fact.nch_ip_tot_ddctn_amt,
                 ccw_pta_fact.clm_pps_cptl_fsp_amt,
                 ccw_pta_fact.clm_pps_cptl_outlier_amt,
                 ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                 ccw_pta_fact.clm_pps_cptl_ime_amt,
                 ccw_pta_fact.clm_pps_cptl_excptn_amt,
                 ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                 ccw_pta_fact.clm_utlztn_day_cnt,
                 ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                 ccw_pta_fact.clm_non_utlztn_days_cnt,
                 ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                 ccw_pta_fact.nch_qlfyd_stay_from_dt,
                 ccw_pta_fact.nch_qlfyd_stay_thru_dt,
                 ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                 ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                 ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                 ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                 ccw_pta_fact.nch_bene_dschrg_dt,
                 ccw_drg.clm_drg_cd,
                 ccw_pta_fact.admtg_dgns_cd,
                 ccw_pta_fact.admtg_dgns_vrsn_cd,
                 ccw_pta_fact.prncpal_dgns_cd,
                 ccw_pta_fact.prncpal_dgns_vrsn_cd,
                 ccw_pta_fact.dgns_1_cd AS icd_dgns_cd1,
                 ccw_pta_fact.dgns_1_vrsn_cd AS icd_dgns_vrsn_cd1,
                 ccw_pta_fact.dgns_2_cd AS icd_dgns_cd2,
                 ccw_pta_fact.dgns_2_vrsn_cd AS icd_dgns_vrsn_cd2,
                 ccw_pta_fact.dgns_3_cd AS icd_dgns_cd3,
                 ccw_pta_fact.dgns_3_vrsn_cd AS icd_dgns_vrsn_cd3,
                 ccw_pta_fact.dgns_4_cd AS icd_dgns_cd4,
                 ccw_pta_fact.dgns_4_vrsn_cd AS icd_dgns_vrsn_cd4,
                 ccw_pta_fact.dgns_5_cd AS icd_dgns_cd5,
                 ccw_pta_fact.dgns_5_vrsn_cd AS icd_dgns_vrsn_cd5,
                 ccw_pta_fact.dgns_6_cd AS icd_dgns_cd6,
                 ccw_pta_fact.dgns_6_vrsn_cd AS icd_dgns_vrsn_cd6,
                 ccw_pta_fact.dgns_7_cd AS icd_dgns_cd7,
                 ccw_pta_fact.dgns_7_vrsn_cd AS icd_dgns_vrsn_cd7,
                 ccw_pta_fact.dgns_8_cd AS icd_dgns_cd8,
                 ccw_pta_fact.dgns_8_vrsn_cd AS icd_dgns_vrsn_cd8,
                 ccw_pta_fact.dgns_9_cd AS icd_dgns_cd9,
                 ccw_pta_fact.dgns_9_vrsn_cd AS icd_dgns_vrsn_cd9,
                 ccw_pta_fact.dgns_10_cd AS icd_dgns_cd10,
                 ccw_pta_fact.dgns_10_vrsn_cd AS icd_dgns_vrsn_cd10,
                 ccw_pta_fact.dgns_11_cd AS icd_dgns_cd11,
                 ccw_pta_fact.dgns_11_vrsn_cd AS icd_dgns_vrsn_cd11,
                 ccw_pta_fact.dgns_12_cd AS icd_dgns_cd12,
                 ccw_pta_fact.dgns_12_vrsn_cd AS icd_dgns_vrsn_cd12,
                 ccw_pta_fact.dgns_13_cd AS icd_dgns_cd13,
                 ccw_pta_fact.dgns_13_vrsn_cd AS icd_dgns_vrsn_cd13,
                 ccw_pta_fact.dgns_14_cd AS icd_dgns_cd14,
                 ccw_pta_fact.dgns_14_vrsn_cd AS icd_dgns_vrsn_cd14,
                 ccw_pta_fact.dgns_15_cd AS icd_dgns_cd15,
                 ccw_pta_fact.dgns_15_vrsn_cd AS icd_dgns_vrsn_cd15,
                 ccw_pta_fact.dgns_16_cd AS icd_dgns_cd16,
                 ccw_pta_fact.dgns_16_vrsn_cd AS icd_dgns_vrsn_cd16,
                 ccw_pta_fact.dgns_17_cd AS icd_dgns_cd17,
                 ccw_pta_fact.dgns_17_vrsn_cd AS icd_dgns_vrsn_cd17,
                 ccw_pta_fact.dgns_18_cd AS icd_dgns_cd18,
                 ccw_pta_fact.dgns_18_vrsn_cd AS icd_dgns_vrsn_cd18,
                 ccw_pta_fact.dgns_19_cd AS icd_dgns_cd19,
                 ccw_pta_fact.dgns_19_vrsn_cd AS icd_dgns_vrsn_cd19,
                 ccw_pta_fact.dgns_20_cd AS icd_dgns_cd20,
                 ccw_pta_fact.dgns_20_vrsn_cd AS icd_dgns_vrsn_cd20,
                 ccw_pta_fact.dgns_21_cd AS icd_dgns_cd21,
                 ccw_pta_fact.dgns_21_vrsn_cd AS icd_dgns_vrsn_cd21,
                 ccw_pta_fact.dgns_22_cd AS icd_dgns_cd22,
                 ccw_pta_fact.dgns_22_vrsn_cd AS icd_dgns_vrsn_cd22,
                 ccw_pta_fact.dgns_23_cd AS icd_dgns_cd23,
                 ccw_pta_fact.dgns_23_vrsn_cd AS icd_dgns_vrsn_cd23,
                 ccw_pta_fact.dgns_24_cd AS icd_dgns_cd24,
                 ccw_pta_fact.dgns_24_vrsn_cd AS icd_dgns_vrsn_cd24,
                 ccw_pta_fact.dgns_25_cd AS icd_dgns_cd25,
                 ccw_pta_fact.dgns_25_vrsn_cd AS icd_dgns_vrsn_cd25,
                 ccw_pta_fact.fst_dgns_e_cd,
                 ccw_pta_fact.fst_dgns_e_vrsn_cd,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd AS icd_dgns_e_cd1,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd AS icd_dgns_e_vrsn_cd1,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd AS icd_dgns_e_cd2,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd AS icd_dgns_e_vrsn_cd2,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd AS icd_dgns_e_cd3,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd AS icd_dgns_e_vrsn_cd3,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd AS icd_dgns_e_cd4,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd AS icd_dgns_e_vrsn_cd4,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd AS icd_dgns_e_cd5,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd AS icd_dgns_e_vrsn_cd5,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd AS icd_dgns_e_cd6,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd AS icd_dgns_e_vrsn_cd6,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd AS icd_dgns_e_cd7,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd AS icd_dgns_e_vrsn_cd7,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd AS icd_dgns_e_cd8,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd AS icd_dgns_e_vrsn_cd8,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd AS icd_dgns_e_cd9,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd AS icd_dgns_e_vrsn_cd9,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd AS icd_dgns_e_cd10,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd AS icd_dgns_e_vrsn_cd10,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd AS icd_dgns_e_cd11,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd AS icd_dgns_e_vrsn_cd11,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd AS icd_dgns_e_cd12,
                 ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd AS icd_dgns_e_vrsn_cd12,
                 ccw_pta_fact.prcdr_1_cd AS icd_prcdr_cd1,
                 ccw_pta_fact.prcdr_1_vrsn_cd AS icd_prcdr_vrsn_cd1,
                 ccw_pta_fact.prcdr_2_cd AS icd_prcdr_cd2,
                 ccw_pta_fact.prcdr_2_vrsn_cd AS icd_prcdr_vrsn_cd2,
                 ccw_pta_fact.prcdr_3_cd AS icd_prcdr_cd3,
                 ccw_pta_fact.prcdr_3_vrsn_cd AS icd_prcdr_vrsn_cd3,
                 ccw_pta_fact.prcdr_4_cd AS icd_prcdr_cd4,
                 ccw_pta_fact.prcdr_4_vrsn_cd AS icd_prcdr_vrsn_cd4,
                 ccw_pta_fact.prcdr_5_cd AS icd_prcdr_cd5,
                 ccw_pta_fact.prcdr_5_vrsn_cd AS icd_prcdr_vrsn_cd5,
                 ccw_pta_fact.prcdr_6_cd AS icd_prcdr_cd6,
                 ccw_pta_fact.prcdr_6_vrsn_cd AS icd_prcdr_vrsn_cd6,
                 ccw_pta_fact.prcdr_7_cd AS icd_prcdr_cd7,
                 ccw_pta_fact.prcdr_7_vrsn_cd AS icd_prcdr_vrsn_cd7,
                 ccw_pta_fact.prcdr_8_cd AS icd_prcdr_cd8,
                 ccw_pta_fact.prcdr_8_vrsn_cd AS icd_prcdr_vrsn_cd8,
                 ccw_pta_fact.prcdr_9_cd AS icd_prcdr_cd9,
                 ccw_pta_fact.prcdr_9_vrsn_cd AS icd_prcdr_vrsn_cd9,
                 ccw_pta_fact.prcdr_10_cd AS icd_prcdr_cd10,
                 ccw_pta_fact.prcdr_10_vrsn_cd AS icd_prcdr_vrsn_cd10,
                 ccw_pta_fact.prcdr_11_cd AS icd_prcdr_cd11,
                 ccw_pta_fact.prcdr_11_vrsn_cd AS icd_prcdr_vrsn_cd11,
                 ccw_pta_fact.prcdr_12_cd AS icd_prcdr_cd12,
                 ccw_pta_fact.prcdr_12_vrsn_cd AS icd_prcdr_vrsn_cd12,
                 ccw_pta_fact.prcdr_13_cd AS icd_prcdr_cd13,
                 ccw_pta_fact.prcdr_13_vrsn_cd AS icd_prcdr_vrsn_cd13,
                 ccw_pta_fact.prcdr_14_cd AS icd_prcdr_cd14,
                 ccw_pta_fact.prcdr_14_vrsn_cd AS icd_prcdr_vrsn_cd14,
                 ccw_pta_fact.prcdr_15_cd AS icd_prcdr_cd15,
                 ccw_pta_fact.prcdr_15_vrsn_cd AS icd_prcdr_vrsn_cd15,
                 ccw_pta_fact.prcdr_16_cd AS icd_prcdr_cd16,
                 ccw_pta_fact.prcdr_16_vrsn_cd AS icd_prcdr_vrsn_cd16,
                 ccw_pta_fact.prcdr_17_cd AS icd_prcdr_cd17,
                 ccw_pta_fact.prcdr_17_vrsn_cd AS icd_prcdr_vrsn_cd17,
                 ccw_pta_fact.prcdr_18_cd AS icd_prcdr_cd18,
                 ccw_pta_fact.prcdr_18_vrsn_cd AS icd_prcdr_vrsn_cd18,
                 ccw_pta_fact.prcdr_19_cd AS icd_prcdr_cd19,
                 ccw_pta_fact.prcdr_19_vrsn_cd AS icd_prcdr_vrsn_cd19,
                 ccw_pta_fact.prcdr_20_cd AS icd_prcdr_cd20,
                 ccw_pta_fact.prcdr_20_vrsn_cd AS icd_prcdr_vrsn_cd20,
                 ccw_pta_fact.prcdr_21_cd AS icd_prcdr_cd21,
                 ccw_pta_fact.prcdr_21_vrsn_cd AS icd_prcdr_vrsn_cd21,
                 ccw_pta_fact.prcdr_22_cd AS icd_prcdr_cd22,
                 ccw_pta_fact.prcdr_22_vrsn_cd AS icd_prcdr_vrsn_cd22,
                 ccw_pta_fact.prcdr_23_cd AS icd_prcdr_cd23,
                 ccw_pta_fact.prcdr_23_vrsn_cd AS icd_prcdr_vrsn_cd23,
                 ccw_pta_fact.prcdr_24_cd AS icd_prcdr_cd24,
                 ccw_pta_fact.prcdr_24_vrsn_cd AS icd_prcdr_vrsn_cd24,
                 ccw_pta_fact.prcdr_25_cd AS icd_prcdr_cd25,
                 ccw_pta_fact.prcdr_25_vrsn_cd AS icd_prcdr_vrsn_cd25,
                 ccw_pta_fact.prcdr_1_dt AS prcdr_dt1,
                 ccw_pta_fact.prcdr_2_dt AS prcdr_dt2,
                 ccw_pta_fact.prcdr_3_dt AS prcdr_dt3,
                 ccw_pta_fact.prcdr_4_dt AS prcdr_dt4,
                 ccw_pta_fact.prcdr_5_dt AS prcdr_dt5,
                 ccw_pta_fact.prcdr_6_dt AS prcdr_dt6,
                 ccw_pta_fact.prcdr_7_dt AS prcdr_dt7,
                 ccw_pta_fact.prcdr_8_dt AS prcdr_dt8,
                 ccw_pta_fact.prcdr_9_dt AS prcdr_dt9,
                 ccw_pta_fact.prcdr_10_dt AS prcdr_dt10,
                 ccw_pta_fact.prcdr_11_dt AS prcdr_dt11,
                 ccw_pta_fact.prcdr_12_dt AS prcdr_dt12,
                 ccw_pta_fact.prcdr_13_dt AS prcdr_dt13,
                 ccw_pta_fact.prcdr_14_dt AS prcdr_dt14,
                 ccw_pta_fact.prcdr_15_dt AS prcdr_dt15,
                 ccw_pta_fact.prcdr_16_dt AS prcdr_dt16,
                 ccw_pta_fact.prcdr_17_dt AS prcdr_dt17,
                 ccw_pta_fact.prcdr_18_dt AS prcdr_dt18,
                 ccw_pta_fact.prcdr_19_dt AS prcdr_dt19,
                 ccw_pta_fact.prcdr_20_dt AS prcdr_dt20,
                 ccw_pta_fact.prcdr_21_dt AS prcdr_dt21,
                 ccw_pta_fact.prcdr_22_dt AS prcdr_dt22,
                 ccw_pta_fact.prcdr_23_dt AS prcdr_dt23,
                 ccw_pta_fact.prcdr_24_dt AS prcdr_dt24,
                 ccw_pta_fact.prcdr_25_dt AS prcdr_dt25,
                 ccw_all_clm_dmgrphc_prfl.dob_dt,
                 ccw_all_clm_dmgrphc_prfl.gndr_cd,
                 ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                 ccw_geo_prfl.bene_cnty_cd,
                 ccw_geo_prfl.bene_state_cd,
                 ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                 '' '' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                 ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                 substr(ccw_pta_fact.bene_id,
                        length(ccw_pta_fact.bene_id) - 1,
                        2) bene_part_num,
                  pta.clm_grp_id              
                 , pta.finl_actn_id
                  FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                       ccw_owner.ccw_all_clm_prfl,
                       ccw_owner.ccw_clm_prfl,
                       ccw_owner.ccw_drg,
                       ccw_owner.ccw_isohh_prfl,
                       ccw_owner.ccw_phys_at_time_of_clm  atphi,
                       ccw_owner.ccw_phys_at_time_of_clm  opphi,
                       ccw_owner.ccw_phys_at_time_of_clm  otphi,
                       ccw_owner.ccw_prvdr_at_time_of_clm,
                       ccw_owner.ccw_all_clm_dmgrphc_prfl,
                       ccw_owner.ccw_geo_prfl,
                       ccw_owner.ccw_dgns_e_cd_grp_prfl,
                       ccw_owner.fhir_pta_ld_clm_status pta
                 WHERE ccw_pta_fact.clm_type_id =
                       ccw_all_clm_prfl.clm_type_id
                   AND ccw_pta_fact.ip_snf_clm_fields_id = ccw_clm_prfl.ip_snf_clm_field_id
                   AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                   AND ccw_pta_fact.isohh_clm_fields_id = ccw_isohh_prfl.isohh_clm_fields_id
                   AND ccw_pta_fact.atndg_physn_id = atphi.physn_id
                   AND ccw_pta_fact.clm_oprtg_physn_id = opphi.physn_id
                   AND ccw_pta_fact.clm_other_physn_id = otphi.physn_id
                   AND ccw_pta_fact.prvdr_at_time_of_clm_id =  ccw_prvdr_at_time_of_clm.prvdr_id
                   AND ccw_pta_fact.all_clm_dmgrphc_id = ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                   AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                   AND ccw_pta_fact.dgns_e_cd_grp_id = ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                   AND ccw_pta_fact.clm_id = pta.clm_id
                   AND pta.job_ld_dt IS NULL
                   AND substr(pta.bene_id,
                              length(pta.bene_id) - 1,
                              2) = nvl(' ||
                      pi_bene_part_num || ',
                                       substr(pta.bene_id,
                                              length(pta.bene_id) - 1,
                                              2))
                 AND pta.clm_grp_id IS NOT NULL
                 AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                 AND pta.nch_clm_type_cd  IN (''20'', ''30'')
                ) b,
               (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */   
                  ' || g_version ||
                      ' version,
                       ptal.dml_ind,  
                       ccw_pta_rev_line_fact.bene_id,
                       ccw_pta_rev_line_fact.clm_id,
                       ccw_pta_rev_line_fact.clm_thru_dt AS clm_thru_dt,
                       ccw_pta_rev_line_fact.clm_line_num,
                       ccw_all_clm_prfl.nch_clm_type_cd,
                       ccw_rev_cntr_prfl.rev_cntr,
                       ccw_pta_rev_line_fact.rev_cntr_dt AS rev_cntr_dt,
                       ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                       ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                       ccw_hcpcs_cd.hcpcs_cd,
                       ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                       ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                       ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd AS rev_cntr_pmt_mthd_ind_cd_old,
                       ccw_rev_prfl.rev_cntr_pmt_ind_cd AS rev_cntr_pmt_mthd_ind_cd,
                       ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                       ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                       ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                       ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                       ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                       ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                       ccw_rev_prfl.rev_cntr_stus_ind_cd,
                       ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                       ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                       ccw_phys_at_time_of_clm.physn_upin AS rndrng_physn_upin,
                       ccw_phys_at_time_of_clm.physn_npi AS rndrng_physn_npi,
                       ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                  FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                       ccw_owner.ccw_all_clm_prfl,
                       ccw_owner.ccw_ansi_prfl,
                       ccw_owner.ccw_apc_hipps_prfl,
                       ccw_owner.ccw_hcpcs_cd,
                       ccw_owner.ccw_mdfr_prfl,
                       ccw_owner.ccw_rev_cntr_prfl,
                       ccw_owner.ccw_rev_prfl,
                       ccw_owner.ccw_phys_at_time_of_clm
                      ,ccw_owner.fhir_pta_ld_clm_status ptal
                 WHERE ccw_pta_rev_line_fact.clm_type_id =  ccw_all_clm_prfl.clm_type_id
                   AND ccw_pta_rev_line_fact.ansi_prfl_id = ccw_ansi_prfl.ansi_prfl_id
                   AND ccw_pta_rev_line_fact.rev_cntr_apc_id = ccw_apc_hipps_prfl.rev_cntr_apc_id
                   AND ccw_pta_rev_line_fact.hcpcs_id = ccw_hcpcs_cd.hcpcs_id
                   AND ccw_pta_rev_line_fact.mdfr_prfl_id =  ccw_mdfr_prfl.mdfr_prfl_id
                   AND ccw_pta_rev_line_fact.rev_cntr_id =  ccw_rev_cntr_prfl.rev_cntr_id
                   AND ccw_pta_rev_line_fact.rev_prfl_id =  ccw_rev_prfl.rev_prfl_id
                   AND ccw_pta_rev_line_fact.rndrng_physn_id = ccw_phys_at_time_of_clm.physn_id
                   AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
                   AND ptal.job_ld_dt IS NULL
                   AND substr(ptal.bene_id,
                              length(ptal.bene_id) - 1,
                              2) = nvl(' ||
                      pi_bene_part_num || ',
                                       substr(ptal.bene_id,
                                              length(ptal.bene_id) - 1,
                                              2))
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ptal.nch_clm_type_cd IN (''20'', ''30'')
                ) l
         WHERE b.clm_id = l.clm_id');

  END insert_temp_snf_delta_by_part;

  PROCEDURE extract_snf_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2 
                              , pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_SNF_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_snf_changes - started');

    dbms_application_info.set_client_info('extract_SNF_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'snf_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_snf');

      IF p_part_num IS NULL THEN
        -- Single digit (single thread (or 10?) compare on bene_id)

        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_snf
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
          SELECT /*+ parallel (16) */
           NULL AS combo_field,
           b.version,
           b.dml_ind,
           b.bene_id,
           b.clm_id,
           b.clm_grp_id,
           REPLACE(REPLACE(REPLACE(b.nch_near_line_rec_ident_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.nch_clm_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_from_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(b.clm_thru_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_wkly_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_proc_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(claim_query_code, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_fac_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_srvc_clsfctn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_freq_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mdcr_non_pmt_rsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pmt_amt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_clm_pd_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_prmry_pyr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fi_clm_actn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prvdr_state_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(org_npi_num, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(at_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(op_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_upin, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ot_physn_npi, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_mco_pd_sw, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(ptnt_dschrg_stus_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_admsn_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_ip_admsn_type_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_src_ip_admsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ptnt_status_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_ip_ddctbl_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_pta_coinsrnc_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_blood_ddctbl_lblty_am, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_ip_tot_ddctn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_fsp_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_outlier_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_dsprprtnt_shr_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_ime_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_cptl_excptn_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_pps_old_cptl_hld_hrmls_amt, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_utlztn_day_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(bene_tot_coinsrnc_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_non_utlztn_days_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_blood_pnts_frnshd_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_qlfyd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_from_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_vrfd_ncvrd_stay_thru_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_actv_or_cvrd_lvl_care_thru, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_mdcr_bnfts_exhtd_dt_i, '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(nch_bene_dschrg_dt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(clm_drg_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(admtg_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prncpal_dgns_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_cd25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(fst_dgns_e_vrsn_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_dgns_e_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd1, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt1, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd2, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt2, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd3, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt3, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd4, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt4, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd5, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt5, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd6, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt6, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd7, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt7, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd8, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt8, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd9, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt9, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd10, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt10, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd11, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt11, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd12, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt12, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd13, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt13, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd14, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt14, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd15, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt15, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd16, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt16, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd17, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt17, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd18, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt18, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd19, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt19, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd20, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt20, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd21, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt21, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd22, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt22, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd23, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt23, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd24, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt24, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(icd_prcdr_vrsn_cd25, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(prcdr_dt25, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE( --Rev Line Values
                                   clm_line_num,
                                   '^'),
                           '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_dt, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_1st_ansi_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_apc_hipps_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_cd, '^'), '~'), '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_1st_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(hcpcs_2nd_mdfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_mthd_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_unit_cnt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_rate_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_pmt_amt_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_tot_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ncvrd_chrg_amt, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ddctbl_coinsrnc_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_stus_ind_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rev_cntr_ndc_qty_qlfr_cd, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_upin, '^'), '~'),
                   '01-JAN-1000'),
           REPLACE(REPLACE(REPLACE(rndrng_physn_npi, '^'), '~'),
                   '01-JAN-1000'),
           b.bene_part_num
           ,b.finl_actn_id   
            FROM (SELECT /*+ full (ccw_pta_fact) parallel (16) */  
                   g_version                                   version,
                   pta.dml_ind,
                   ccw_pta_fact.bene_id,
                   ccw_pta_fact.clm_id,
                   ccw_pta_fact.run_dt,
                   ccw_all_clm_prfl.nch_near_line_rec_ident_cd,
                   ccw_all_clm_prfl.nch_clm_type_cd,
                   ccw_pta_fact.clm_from_dt,
                   ccw_pta_fact.clm_thru_dt,
                   ccw_pta_fact.nch_wkly_proc_dt,
                   ccw_pta_fact.fi_clm_proc_dt,
                   ccw_isohh_prfl.claim_query_code,
                   ccw_prvdr_at_time_of_clm.prvdr_num,
                   ccw_isohh_prfl.clm_fac_type_cd,
                   ccw_isohh_prfl.clm_srvc_clsfctn_type_cd,
                   ccw_isohh_prfl.clm_freq_cd,
                   ccw_pta_fact.fi_num,
                   ccw_isohh_prfl.clm_mdcr_non_pmt_rsn_cd,
                   ccw_pta_fact.clm_pmt_amt,
                   ccw_pta_fact.nch_prmry_pyr_clm_pd_amt,
                   ccw_isohh_prfl.nch_prmry_pyr_cd,
                   ccw_clm_prfl.fi_clm_actn_cd,
                   ccw_prvdr_at_time_of_clm.prvdr_state_cd,
                   ccw_prvdr_at_time_of_clm.org_npi_num,
                   atphi.physn_upin                            AS at_physn_upin,
                   atphi.physn_npi                             AS at_physn_npi,
                   opphi.physn_upin                            AS op_physn_upin,
                   opphi.physn_npi                             AS op_physn_npi,
                   otphi.physn_upin                            AS ot_physn_upin,
                   otphi.physn_npi                             AS ot_physn_npi,
                   ccw_clm_prfl.clm_mco_pd_sw,
                   ccw_isohh_prfl.ptnt_dschrg_stus_cd,
                   ccw_clm_prfl.clm_pps_ind_cd,
                   ccw_pta_fact.clm_tot_chrg_amt,
                   ccw_pta_fact.clm_admsn_dt,
                   ccw_clm_prfl.clm_ip_admsn_type_cd,
                   ccw_clm_prfl.clm_src_ip_admsn_cd,
                   ccw_clm_prfl.nch_ptnt_status_ind_cd,
                   ccw_pta_fact.nch_bene_ip_ddctbl_amt,
                   ccw_pta_fact.nch_bene_pta_coinsrnc_lblty_am,
                   ccw_pta_fact.nch_bene_blood_ddctbl_lblty_am,
                   ccw_pta_fact.nch_ip_ncvrd_chrg_amt,
                   ccw_pta_fact.nch_ip_tot_ddctn_amt,
                   ccw_pta_fact.clm_pps_cptl_fsp_amt,
                   ccw_pta_fact.clm_pps_cptl_outlier_amt,
                   ccw_pta_fact.clm_pps_cptl_dsprprtnt_shr_amt,
                   ccw_pta_fact.clm_pps_cptl_ime_amt,
                   ccw_pta_fact.clm_pps_cptl_excptn_amt,
                   ccw_pta_fact.clm_pps_old_cptl_hld_hrmls_amt,
                   ccw_pta_fact.clm_utlztn_day_cnt,
                   ccw_pta_fact.bene_tot_coinsrnc_days_cnt,
                   ccw_pta_fact.clm_non_utlztn_days_cnt,
                   ccw_pta_fact.nch_blood_pnts_frnshd_qty,
                   ccw_pta_fact.nch_qlfyd_stay_from_dt,
                   ccw_pta_fact.nch_qlfyd_stay_thru_dt,
                   ccw_pta_fact.nch_vrfd_ncvrd_stay_from_dt,
                   ccw_pta_fact.nch_vrfd_ncvrd_stay_thru_dt,
                   ccw_pta_fact.nch_actv_or_cvrd_lvl_care_thru,
                   ccw_pta_fact.nch_bene_mdcr_bnfts_exhtd_dt_i,
                   ccw_pta_fact.nch_bene_dschrg_dt,
                   ccw_drg.clm_drg_cd,
                   ccw_pta_fact.admtg_dgns_cd,
                   ccw_pta_fact.admtg_dgns_vrsn_cd,
                   ccw_pta_fact.prncpal_dgns_cd,
                   ccw_pta_fact.prncpal_dgns_vrsn_cd,
                   ccw_pta_fact.dgns_1_cd                      AS icd_dgns_cd1,
                   ccw_pta_fact.dgns_1_vrsn_cd                 AS icd_dgns_vrsn_cd1,
                   ccw_pta_fact.dgns_2_cd                      AS icd_dgns_cd2,
                   ccw_pta_fact.dgns_2_vrsn_cd                 AS icd_dgns_vrsn_cd2,
                   ccw_pta_fact.dgns_3_cd                      AS icd_dgns_cd3,
                   ccw_pta_fact.dgns_3_vrsn_cd                 AS icd_dgns_vrsn_cd3,
                   ccw_pta_fact.dgns_4_cd                      AS icd_dgns_cd4,
                   ccw_pta_fact.dgns_4_vrsn_cd                 AS icd_dgns_vrsn_cd4,
                   ccw_pta_fact.dgns_5_cd                      AS icd_dgns_cd5,
                   ccw_pta_fact.dgns_5_vrsn_cd                 AS icd_dgns_vrsn_cd5,
                   ccw_pta_fact.dgns_6_cd                      AS icd_dgns_cd6,
                   ccw_pta_fact.dgns_6_vrsn_cd                 AS icd_dgns_vrsn_cd6,
                   ccw_pta_fact.dgns_7_cd                      AS icd_dgns_cd7,
                   ccw_pta_fact.dgns_7_vrsn_cd                 AS icd_dgns_vrsn_cd7,
                   ccw_pta_fact.dgns_8_cd                      AS icd_dgns_cd8,
                   ccw_pta_fact.dgns_8_vrsn_cd                 AS icd_dgns_vrsn_cd8,
                   ccw_pta_fact.dgns_9_cd                      AS icd_dgns_cd9,
                   ccw_pta_fact.dgns_9_vrsn_cd                 AS icd_dgns_vrsn_cd9,
                   ccw_pta_fact.dgns_10_cd                     AS icd_dgns_cd10,
                   ccw_pta_fact.dgns_10_vrsn_cd                AS icd_dgns_vrsn_cd10,
                   ccw_pta_fact.dgns_11_cd                     AS icd_dgns_cd11,
                   ccw_pta_fact.dgns_11_vrsn_cd                AS icd_dgns_vrsn_cd11,
                   ccw_pta_fact.dgns_12_cd                     AS icd_dgns_cd12,
                   ccw_pta_fact.dgns_12_vrsn_cd                AS icd_dgns_vrsn_cd12,
                   ccw_pta_fact.dgns_13_cd                     AS icd_dgns_cd13,
                   ccw_pta_fact.dgns_13_vrsn_cd                AS icd_dgns_vrsn_cd13,
                   ccw_pta_fact.dgns_14_cd                     AS icd_dgns_cd14,
                   ccw_pta_fact.dgns_14_vrsn_cd                AS icd_dgns_vrsn_cd14,
                   ccw_pta_fact.dgns_15_cd                     AS icd_dgns_cd15,
                   ccw_pta_fact.dgns_15_vrsn_cd                AS icd_dgns_vrsn_cd15,
                   ccw_pta_fact.dgns_16_cd                     AS icd_dgns_cd16,
                   ccw_pta_fact.dgns_16_vrsn_cd                AS icd_dgns_vrsn_cd16,
                   ccw_pta_fact.dgns_17_cd                     AS icd_dgns_cd17,
                   ccw_pta_fact.dgns_17_vrsn_cd                AS icd_dgns_vrsn_cd17,
                   ccw_pta_fact.dgns_18_cd                     AS icd_dgns_cd18,
                   ccw_pta_fact.dgns_18_vrsn_cd                AS icd_dgns_vrsn_cd18,
                   ccw_pta_fact.dgns_19_cd                     AS icd_dgns_cd19,
                   ccw_pta_fact.dgns_19_vrsn_cd                AS icd_dgns_vrsn_cd19,
                   ccw_pta_fact.dgns_20_cd                     AS icd_dgns_cd20,
                   ccw_pta_fact.dgns_20_vrsn_cd                AS icd_dgns_vrsn_cd20,
                   ccw_pta_fact.dgns_21_cd                     AS icd_dgns_cd21,
                   ccw_pta_fact.dgns_21_vrsn_cd                AS icd_dgns_vrsn_cd21,
                   ccw_pta_fact.dgns_22_cd                     AS icd_dgns_cd22,
                   ccw_pta_fact.dgns_22_vrsn_cd                AS icd_dgns_vrsn_cd22,
                   ccw_pta_fact.dgns_23_cd                     AS icd_dgns_cd23,
                   ccw_pta_fact.dgns_23_vrsn_cd                AS icd_dgns_vrsn_cd23,
                   ccw_pta_fact.dgns_24_cd                     AS icd_dgns_cd24,
                   ccw_pta_fact.dgns_24_vrsn_cd                AS icd_dgns_vrsn_cd24,
                   ccw_pta_fact.dgns_25_cd                     AS icd_dgns_cd25,
                   ccw_pta_fact.dgns_25_vrsn_cd                AS icd_dgns_vrsn_cd25,
                   ccw_pta_fact.fst_dgns_e_cd,
                   ccw_pta_fact.fst_dgns_e_vrsn_cd,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_cd          AS icd_dgns_e_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_1_vrsn_cd     AS icd_dgns_e_vrsn_cd1,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_cd          AS icd_dgns_e_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_2_vrsn_cd     AS icd_dgns_e_vrsn_cd2,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_cd          AS icd_dgns_e_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_3_vrsn_cd     AS icd_dgns_e_vrsn_cd3,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_cd          AS icd_dgns_e_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_4_vrsn_cd     AS icd_dgns_e_vrsn_cd4,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_cd          AS icd_dgns_e_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_5_vrsn_cd     AS icd_dgns_e_vrsn_cd5,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_cd          AS icd_dgns_e_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_6_vrsn_cd     AS icd_dgns_e_vrsn_cd6,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_cd          AS icd_dgns_e_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_7_vrsn_cd     AS icd_dgns_e_vrsn_cd7,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_cd          AS icd_dgns_e_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_8_vrsn_cd     AS icd_dgns_e_vrsn_cd8,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_cd          AS icd_dgns_e_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_9_vrsn_cd     AS icd_dgns_e_vrsn_cd9,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_cd         AS icd_dgns_e_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_10_vrsn_cd    AS icd_dgns_e_vrsn_cd10,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_cd         AS icd_dgns_e_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_11_vrsn_cd    AS icd_dgns_e_vrsn_cd11,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_cd         AS icd_dgns_e_cd12,
                   ccw_dgns_e_cd_grp_prfl.dgns_e_12_vrsn_cd    AS icd_dgns_e_vrsn_cd12,
                   ccw_pta_fact.prcdr_1_cd                     AS icd_prcdr_cd1,
                   ccw_pta_fact.prcdr_1_vrsn_cd                AS icd_prcdr_vrsn_cd1,
                   ccw_pta_fact.prcdr_2_cd                     AS icd_prcdr_cd2,
                   ccw_pta_fact.prcdr_2_vrsn_cd                AS icd_prcdr_vrsn_cd2,
                   ccw_pta_fact.prcdr_3_cd                     AS icd_prcdr_cd3,
                   ccw_pta_fact.prcdr_3_vrsn_cd                AS icd_prcdr_vrsn_cd3,
                   ccw_pta_fact.prcdr_4_cd                     AS icd_prcdr_cd4,
                   ccw_pta_fact.prcdr_4_vrsn_cd                AS icd_prcdr_vrsn_cd4,
                   ccw_pta_fact.prcdr_5_cd                     AS icd_prcdr_cd5,
                   ccw_pta_fact.prcdr_5_vrsn_cd                AS icd_prcdr_vrsn_cd5,
                   ccw_pta_fact.prcdr_6_cd                     AS icd_prcdr_cd6,
                   ccw_pta_fact.prcdr_6_vrsn_cd                AS icd_prcdr_vrsn_cd6,
                   ccw_pta_fact.prcdr_7_cd                     AS icd_prcdr_cd7,
                   ccw_pta_fact.prcdr_7_vrsn_cd                AS icd_prcdr_vrsn_cd7,
                   ccw_pta_fact.prcdr_8_cd                     AS icd_prcdr_cd8,
                   ccw_pta_fact.prcdr_8_vrsn_cd                AS icd_prcdr_vrsn_cd8,
                   ccw_pta_fact.prcdr_9_cd                     AS icd_prcdr_cd9,
                   ccw_pta_fact.prcdr_9_vrsn_cd                AS icd_prcdr_vrsn_cd9,
                   ccw_pta_fact.prcdr_10_cd                    AS icd_prcdr_cd10,
                   ccw_pta_fact.prcdr_10_vrsn_cd               AS icd_prcdr_vrsn_cd10,
                   ccw_pta_fact.prcdr_11_cd                    AS icd_prcdr_cd11,
                   ccw_pta_fact.prcdr_11_vrsn_cd               AS icd_prcdr_vrsn_cd11,
                   ccw_pta_fact.prcdr_12_cd                    AS icd_prcdr_cd12,
                   ccw_pta_fact.prcdr_12_vrsn_cd               AS icd_prcdr_vrsn_cd12,
                   ccw_pta_fact.prcdr_13_cd                    AS icd_prcdr_cd13,
                   ccw_pta_fact.prcdr_13_vrsn_cd               AS icd_prcdr_vrsn_cd13,
                   ccw_pta_fact.prcdr_14_cd                    AS icd_prcdr_cd14,
                   ccw_pta_fact.prcdr_14_vrsn_cd               AS icd_prcdr_vrsn_cd14,
                   ccw_pta_fact.prcdr_15_cd                    AS icd_prcdr_cd15,
                   ccw_pta_fact.prcdr_15_vrsn_cd               AS icd_prcdr_vrsn_cd15,
                   ccw_pta_fact.prcdr_16_cd                    AS icd_prcdr_cd16,
                   ccw_pta_fact.prcdr_16_vrsn_cd               AS icd_prcdr_vrsn_cd16,
                   ccw_pta_fact.prcdr_17_cd                    AS icd_prcdr_cd17,
                   ccw_pta_fact.prcdr_17_vrsn_cd               AS icd_prcdr_vrsn_cd17,
                   ccw_pta_fact.prcdr_18_cd                    AS icd_prcdr_cd18,
                   ccw_pta_fact.prcdr_18_vrsn_cd               AS icd_prcdr_vrsn_cd18,
                   ccw_pta_fact.prcdr_19_cd                    AS icd_prcdr_cd19,
                   ccw_pta_fact.prcdr_19_vrsn_cd               AS icd_prcdr_vrsn_cd19,
                   ccw_pta_fact.prcdr_20_cd                    AS icd_prcdr_cd20,
                   ccw_pta_fact.prcdr_20_vrsn_cd               AS icd_prcdr_vrsn_cd20,
                   ccw_pta_fact.prcdr_21_cd                    AS icd_prcdr_cd21,
                   ccw_pta_fact.prcdr_21_vrsn_cd               AS icd_prcdr_vrsn_cd21,
                   ccw_pta_fact.prcdr_22_cd                    AS icd_prcdr_cd22,
                   ccw_pta_fact.prcdr_22_vrsn_cd               AS icd_prcdr_vrsn_cd22,
                   ccw_pta_fact.prcdr_23_cd                    AS icd_prcdr_cd23,
                   ccw_pta_fact.prcdr_23_vrsn_cd               AS icd_prcdr_vrsn_cd23,
                   ccw_pta_fact.prcdr_24_cd                    AS icd_prcdr_cd24,
                   ccw_pta_fact.prcdr_24_vrsn_cd               AS icd_prcdr_vrsn_cd24,
                   ccw_pta_fact.prcdr_25_cd                    AS icd_prcdr_cd25,
                   ccw_pta_fact.prcdr_25_vrsn_cd               AS icd_prcdr_vrsn_cd25,
                   ccw_pta_fact.prcdr_1_dt                     AS prcdr_dt1,
                   ccw_pta_fact.prcdr_2_dt                     AS prcdr_dt2,
                   ccw_pta_fact.prcdr_3_dt                     AS prcdr_dt3,
                   ccw_pta_fact.prcdr_4_dt                     AS prcdr_dt4,
                   ccw_pta_fact.prcdr_5_dt                     AS prcdr_dt5,
                   ccw_pta_fact.prcdr_6_dt                     AS prcdr_dt6,
                   ccw_pta_fact.prcdr_7_dt                     AS prcdr_dt7,
                   ccw_pta_fact.prcdr_8_dt                     AS prcdr_dt8,
                   ccw_pta_fact.prcdr_9_dt                     AS prcdr_dt9,
                   ccw_pta_fact.prcdr_10_dt                    AS prcdr_dt10,
                   ccw_pta_fact.prcdr_11_dt                    AS prcdr_dt11,
                   ccw_pta_fact.prcdr_12_dt                    AS prcdr_dt12,
                   ccw_pta_fact.prcdr_13_dt                    AS prcdr_dt13,
                   ccw_pta_fact.prcdr_14_dt                    AS prcdr_dt14,
                   ccw_pta_fact.prcdr_15_dt                    AS prcdr_dt15,
                   ccw_pta_fact.prcdr_16_dt                    AS prcdr_dt16,
                   ccw_pta_fact.prcdr_17_dt                    AS prcdr_dt17,
                   ccw_pta_fact.prcdr_18_dt                    AS prcdr_dt18,
                   ccw_pta_fact.prcdr_19_dt                    AS prcdr_dt19,
                   ccw_pta_fact.prcdr_20_dt                    AS prcdr_dt20,
                   ccw_pta_fact.prcdr_21_dt                    AS prcdr_dt21,
                   ccw_pta_fact.prcdr_22_dt                    AS prcdr_dt22,
                   ccw_pta_fact.prcdr_23_dt                    AS prcdr_dt23,
                   ccw_pta_fact.prcdr_24_dt                    AS prcdr_dt24,
                   ccw_pta_fact.prcdr_25_dt                    AS prcdr_dt25,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.bene_race_cd,
                   ccw_geo_prfl.bene_cnty_cd,
                   ccw_geo_prfl.bene_state_cd,
                   ccw_geo_prfl.bene_mlg_cntct_zip_cd,
                   ' ' AS clm_mdcl_rec, /* PII found in field. Emergency SR Removal on 6/13/13 by Adam Hendricks, ahe867, adam.hendricks@gdit.com, 515-645-3015 */
                   ccw_pta_fact.clm_sbstnc_abuse_and_mh_ind_id,
                   substr(ccw_pta_fact.bene_id,
                          length(ccw_pta_fact.bene_id),
                          1) bene_part_num,
                    pta.clm_grp_id            
                   , ccw_pta_fact.finl_actn_id   
                    FROM ccw_owner.ccw_pta_fact ccw_pta_fact,
                         ccw_owner.ccw_all_clm_prfl,
                         ccw_owner.ccw_clm_prfl,
                         ccw_owner.ccw_drg,
                         ccw_owner.ccw_isohh_prfl,
                         phy atphi, 
                         phy opphi,  
                         phy otphi,
                         ccw_owner.ccw_prvdr_at_time_of_clm,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.ccw_geo_prfl,
                         ccw_owner.ccw_dgns_e_cd_grp_prfl,
                         ccw_owner.fhir_pta_ld_clm_status   pta
                   WHERE ccw_pta_fact.clm_type_id =
                         ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_fact.ip_snf_clm_fields_id =
                         ccw_clm_prfl.ip_snf_clm_field_id
                     AND ccw_pta_fact.drg_id = ccw_drg.drg_id
                     AND ccw_pta_fact.isohh_clm_fields_id =
                         ccw_isohh_prfl.isohh_clm_fields_id
                     AND ccw_pta_fact.atndg_physn_id = atphi.physn_id
                     AND ccw_pta_fact.clm_oprtg_physn_id = opphi.physn_id
                     AND ccw_pta_fact.clm_other_physn_id = otphi.physn_id
                     AND ccw_pta_fact.prvdr_at_time_of_clm_id =
                         ccw_prvdr_at_time_of_clm.prvdr_id
                     AND ccw_pta_fact.all_clm_dmgrphc_id =
                         ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pta_fact.ccw_geo_id = ccw_geo_prfl.ccw_geo_id
                     AND ccw_pta_fact.dgns_e_cd_grp_id =
                         ccw_dgns_e_cd_grp_prfl.ccw_dgns_e_cd_grp_id
                     AND ccw_pta_fact.clm_id = pta.clm_id
                     AND pta.job_ld_dt IS NULL
                     AND substr(pta.bene_id,
                                length(pta.bene_id),
                                1) = nvl(p_part_num,
                                         substr(pta.bene_id,
                                                length(pta.bene_id),
                                                1))
                     AND pta.clm_grp_id IS NOT NULL
                     AND ccw_pta_fact.clm_thru_dt = pta.clm_thru_dt
                     AND pta.nch_clm_type_cd IN ('20', '30')
                  ) b,
                 (SELECT /*+ full (ccw_pta_rev_line_fact) parallel (16) */        
                   g_version                                            version,
                   ptal.dml_ind, 
                   ccw_pta_rev_line_fact.bene_id,
                   ccw_pta_rev_line_fact.clm_id,
                   ccw_pta_rev_line_fact.clm_thru_dt                    AS clm_thru_dt,
                   ccw_pta_rev_line_fact.clm_line_num,
                   ccw_all_clm_prfl.nch_clm_type_cd,
                   ccw_rev_cntr_prfl.rev_cntr,
                   ccw_pta_rev_line_fact.rev_cntr_dt                    AS rev_cntr_dt,
                   ccw_ansi_prfl.rev_cntr_1st_ansi_cd,
                   ccw_apc_hipps_prfl.rev_cntr_apc_hipps_cd,
                   ccw_hcpcs_cd.hcpcs_cd,
                   ccw_mdfr_prfl.hcpcs_1st_mdfr_cd,
                   ccw_mdfr_prfl.hcpcs_2nd_mdfr_cd,
                   ccw_rev_prfl.rev_cntr_pmt_mthd_ind_cd                AS rev_cntr_pmt_mthd_ind_cd_old,
                   ccw_rev_prfl.rev_cntr_pmt_ind_cd                     AS rev_cntr_pmt_mthd_ind_cd,
                   ccw_pta_rev_line_fact.rev_cntr_unit_cnt,
                   ccw_pta_rev_line_fact.rev_cntr_rate_amt,
                   ccw_pta_rev_line_fact.rev_cntr_pmt_amt_amt,
                   ccw_pta_rev_line_fact.rev_cntr_tot_chrg_amt,
                   ccw_pta_rev_line_fact.rev_cntr_ncvrd_chrg_amt,
                   ccw_rev_prfl.rev_cntr_ddctbl_coinsrnc_cd,
                   ccw_rev_prfl.rev_cntr_stus_ind_cd,
                   ccw_pta_rev_line_fact.rev_cntr_ndc_qty,
                   ccw_pta_rev_line_fact.rev_cntr_ndc_qty_qlfr_cd,
                   phy.physn_upin                   AS rndrng_physn_upin,
                   phy.physn_npi                    AS rndrng_physn_npi,
                   ccw_pta_rev_line_fact.clm_sbstnc_abuse_and_mh_ind_id
                    FROM ccw_owner.ccw_pta_rev_line_fact ccw_pta_rev_line_fact,
                         ccw_owner.ccw_all_clm_prfl,
                         ccw_owner.ccw_ansi_prfl,
                         ccw_owner.ccw_apc_hipps_prfl,
                         ccw_owner.ccw_hcpcs_cd,
                         ccw_owner.ccw_mdfr_prfl,
                         ccw_owner.ccw_rev_cntr_prfl,
                         ccw_owner.ccw_rev_prfl,
                         phy,
                         ccw_owner.fhir_pta_ld_clm_status  ptal
                   WHERE ccw_pta_rev_line_fact.clm_type_id =
                         ccw_all_clm_prfl.clm_type_id
                     AND ccw_pta_rev_line_fact.ansi_prfl_id =
                         ccw_ansi_prfl.ansi_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_apc_id =
                         ccw_apc_hipps_prfl.rev_cntr_apc_id
                     AND ccw_pta_rev_line_fact.hcpcs_id =
                         ccw_hcpcs_cd.hcpcs_id
                     AND ccw_pta_rev_line_fact.mdfr_prfl_id =
                         ccw_mdfr_prfl.mdfr_prfl_id
                     AND ccw_pta_rev_line_fact.rev_cntr_id =
                         ccw_rev_cntr_prfl.rev_cntr_id
                     AND ccw_pta_rev_line_fact.rev_prfl_id =
                         ccw_rev_prfl.rev_prfl_id
                     AND ccw_pta_rev_line_fact.rndrng_physn_id =
                         phy.physn_id
                     AND ccw_pta_rev_line_fact.clm_id = ptal.clm_id
                     AND ptal.job_ld_dt IS NULL
                     AND substr(ptal.bene_id,
                                length(ptal.bene_id),
                                1) = nvl(p_part_num,
                                         substr(ptal.bene_id,
                                                length(ptal.bene_id),
                                                1))
                 AND ccw_pta_rev_line_fact.clm_thru_dt = ptal.clm_thru_dt
                 AND ptal.nch_clm_type_cd  IN ('20', '30')
                  ) l
           WHERE b.clm_id = l.clm_id
             AND b.clm_thru_dt = l.clm_thru_dt;


      ELSE

        -- 100 part compare --

        --get partition name
        g_part_name := get_part_name(pi_table_name => 'TEMP_SNF',
                                     pi_value      => p_part_num);
        --insert data by partition
        insert_temp_snf_delta_by_part(pi_part_name     => g_part_name,
                                      pi_bene_part_num => p_part_num);

      END IF;

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

    END IF;

    -- Moving output file writing to a common procedure, so delta snf can use as well.
    output_snf_file(p_part_num, booleantotruefalse(g_output_data));

    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN
      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'SNF');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_snf_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_SNF_Changes Error: ');
      RAISE;
  END extract_snf_changes;

  PROCEDURE extract_pde(p_part_num     VARCHAR2,
                        pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                        pb_load_data   VARCHAR2 DEFAULT 'FALSE', 
                        pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                        pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                        pb_extrct_only VARCHAR2 DEFAULT 'TRUE' 
                      , pb_output_data VARCHAR2 DEFAULT 'TRUE') IS

    p_new_version BOOLEAN;
    p_load_data   BOOLEAN;
    p_stats       BOOLEAN;
    p_100_parts   BOOLEAN;
    p_output_data BOOLEAN;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_PDE',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_pde - started');

    END IF;

    g_tot_rows := 0;

    p_new_version := truefalsetoboolean(pb_new_version);
    p_load_data   := truefalsetoboolean(pb_load_data);
    p_100_parts   := truefalsetoboolean(pb_100_parts);
    p_stats       := truefalsetoboolean(pb_stats);
    p_output_data := truefalsetoboolean(pb_output_data);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'pde' || g_separator || p_part_num || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    dbms_application_info.set_client_info('temp_pde');

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_pde');

      IF p_100_parts OR p_part_num IS NULL THEN

        sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'extract_pde - 100 pts');
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_pde
          SELECT /*+ parallel (16) */
           NULL AS combo_field, 
           REPLACE(REPLACE(REPLACE(version, '^'), '~'), '01-JAN-1000') version,
           REPLACE(REPLACE(REPLACE(dml_ind, '^'), '~'), '01-JAN-1000') dml_ind,
           REPLACE(REPLACE(REPLACE(pde_id, '^'), '~'), '01-JAN-1000') pde_id,
           clm_grp_id, -- PCG
           REPLACE(REPLACE(REPLACE(bene_id, '^'), '~'), '01-JAN-1000') bene_id,
           REPLACE(REPLACE(REPLACE(srvc_dt, '^'), '~'), '01-JAN-1000') srvc_dt,
           REPLACE(REPLACE(REPLACE(pd_dt, '^'), '~'), '01-JAN-1000') pd_dt,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id_qlfyr_cd, '^'), '~'),
                   '01-JAN-1000') srvc_prvdr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id, '^'), '~'), '01-JAN-1000') srvc_prvdr_id,
           REPLACE(REPLACE(REPLACE(prscrbr_id_qlfyr_cd, '^'), '~'),
                   '01-JAN-1000') prscrbr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(prscrbr_id, '^'), '~'), '01-JAN-1000') prscrbr_id,
           REPLACE(REPLACE(REPLACE(rx_srvc_rfrnc_num, '^'), '~'),
                   '01-JAN-1000') rx_srvc_rfrnc_num,
           REPLACE(REPLACE(REPLACE(prod_srvc_id, '^'), '~'), '01-JAN-1000') prod_srvc_id,
           REPLACE(REPLACE(REPLACE(plan_cntrct_rec_id, '^'), '~'),
                   '01-JAN-1000') plan_cntrct_rec_id,
           REPLACE(REPLACE(REPLACE(plan_pbp_rec_num, '^'), '~'),
                   '01-JAN-1000') plan_pbp_rec_num,
           REPLACE(REPLACE(REPLACE(cmpnd_cd, '^'), '~'), '01-JAN-1000') cmpnd_cd,
           REPLACE(REPLACE(REPLACE(daw_prod_slctn_cd, '^'), '~'),
                   '01-JAN-1000') daw_prod_slctn_cd,
           REPLACE(REPLACE(REPLACE(qty_dspnsd_num, '^'), '~'),
                   '01-JAN-1000') qty_dspnsd_num,
           REPLACE(REPLACE(REPLACE(days_suply_num, '^'), '~'),
                   '01-JAN-1000') days_suply_num,
           REPLACE(REPLACE(REPLACE(fill_num, '^'), '~'), '01-JAN-1000') fill_num,
           REPLACE(REPLACE(REPLACE(dspnsng_stus_cd, '^'), '~'),
                   '01-JAN-1000') dspnsng_stus_cd,
           REPLACE(REPLACE(REPLACE(drug_cvrg_stus_cd, '^'), '~'),
                   '01-JAN-1000') drug_cvrg_stus_cd,
           REPLACE(REPLACE(REPLACE(adjstmt_dltn_cd, '^'), '~'),
                   '01-JAN-1000') adjstmt_dltn_cd,
           REPLACE(REPLACE(REPLACE(nstd_frmt_cd, '^'), '~'), '01-JAN-1000') nstd_frmt_cd,
           REPLACE(REPLACE(REPLACE(prcng_excptn_cd, '^'), '~'),
                   '01-JAN-1000') prcng_excptn_cd,
           REPLACE(REPLACE(REPLACE(ctstrphc_cvrg_cd, '^'), '~'),
                   '01-JAN-1000') ctstrphc_cvrg_cd,
           REPLACE(REPLACE(REPLACE(gdc_blw_oopt_amt, '^'), '~'),
                   '01-JAN-1000') gdc_blw_oopt_amt,
           REPLACE(REPLACE(REPLACE(gdc_abv_oopt_amt, '^'), '~'),
                   '01-JAN-1000') gdc_abv_oopt_amt,
           REPLACE(REPLACE(REPLACE(ptnt_pay_amt, '^'), '~'), '01-JAN-1000') ptnt_pay_amt,
           REPLACE(REPLACE(REPLACE(othr_troop_amt, '^'), '~'),
                   '01-JAN-1000') othr_troop_amt,
           REPLACE(REPLACE(REPLACE(lics_amt, '^'), '~'), '01-JAN-1000') lics_amt,
           REPLACE(REPLACE(REPLACE(plro_amt, '^'), '~'), '01-JAN-1000') plro_amt,
           REPLACE(REPLACE(REPLACE(cvrd_d_plan_pd_amt, '^'), '~'),
                   '01-JAN-1000') cvrd_d_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(ncvrd_plan_pd_amt, '^'), '~'),
                   '01-JAN-1000') ncvrd_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(tot_rx_cst_amt, '^'), '~'),
                   '01-JAN-1000') tot_rx_cst_amt,
           REPLACE(REPLACE(REPLACE(rx_orgn_cd, '^'), '~'), '01-JAN-1000') rx_orgn_cd,
           REPLACE(REPLACE(REPLACE(rptd_gap_dscnt_num, '^'), '~'),
                   '01-JAN-1000') rptd_gap_dscnt_num,
           REPLACE(REPLACE(REPLACE(brnd_gnrc_cd, '^'), '~'), '01-JAN-1000') brnd_gnrc_cd,
           REPLACE(REPLACE(REPLACE(phrmcy_srvc_type_cd, '^'), '~'),
                   '01-JAN-1000') phrmcy_srvc_type_cd,
           REPLACE(REPLACE(REPLACE(ptnt_rsdnc_cd, '^'), '~'), '01-JAN-1000') ptnt_rsdnc_cd,
           REPLACE(REPLACE(REPLACE(submsn_clr_cd, '^'), '~'), '01-JAN-1000') submsn_clr_cd,
           bene_part_num
           , finl_actn_id
            FROM (SELECT /*+ parallel (16) */
                   g_version version,
                   'INSERT' dml_ind,
                   ccw_pde_fact.bene_id,
                   ccw_pde_fact.pde_id,
                   pcg.clm_grp_id, 
                   ccw_pde_fact.rx_clm_cntl_id,
                   ccw_pde_fact.cardhldr_id AS crdhldr_id,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_pde_fact.srvc_dt,
                   ccw_pde_fact.pd_dt,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_prscrbr_prfl.prscrbr_id_qlfyr_cd,
                   ccw_pde_prscrbr_prfl.prscrbr_id,
                   ccw_pde_fact.rx_srvc_rfrnc_num,
                   ccw_pde_prod_prfl.prod_srvc_id,
                   ccw_pde_plan_prfl.plan_cntrct_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_plan_prfl.plan_cntrct_rec_id,
                   ccw_pde_plan_prfl.plan_pbp_rec_num,
                   ccw_pde_plan_prfl.plan_to_plan_rsn_cd,
                   ccw_pde_plan_prfl.pbp_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_cd_prfl.cmpnd_cd,
                   ccw_pde_cd_prfl.daw_prod_slctn_cd,
                   ccw_pde_fact.qty_dspnsd_num,
                   ccw_pde_fact.days_suply_num,
                   ccw_pde_fact.fill_num,
                   ccw_pde_cd_prfl.dspnsng_stus_cd,
                   ccw_pde_cd_prfl.drug_cvrg_stus_cd,
                   ccw_pde_cd_prfl.adjstmt_dltn_cd,
                   ccw_pde_cd_prfl.nstd_frmt_cd,
                   ccw_pde_cd_prfl.prcng_excptn_cd,
                   ccw_pde_cd_prfl.ctstrphc_cvrg_cd,
                   ccw_pde_cd_prfl.rx_orgn_cd, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_fact.ingrdnt_cst_pd_amt,
                   ccw_pde_fact.dspnsng_fee_pd_amt,
                   ccw_pde_fact.tot_amt_attr_sls_tax_amt,
                   ccw_pde_fact.gdc_blw_oopt_amt,
                   ccw_pde_fact.gdc_abv_oopt_amt,
                   ccw_pde_fact.ptnt_pay_amt,
                   ccw_pde_fact.othr_troop_amt,
                   ccw_pde_fact.lics_amt,
                   ccw_pde_fact.plro_amt,
                   ccw_pde_fact.cvrd_d_plan_pd_amt,
                   ccw_pde_fact.ncvrd_plan_pd_amt,
                   ccw_pde_fact.tot_rx_cst_amt,
                   ccw_pde_fact.rptd_gap_dscnt_num,
                   pde_drug_cd_prfl.brnd_gnrc_cd,
                   pde_misc_cd_prfl.phrmcy_srvc_type_cd,
                   pde_misc_cd_prfl.ptnt_rsdnc_cd,
                   pde_misc_cd_prfl.submsn_clr_cd,
                   NULL bn,
                   NULL gcdf,
                   NULL gcdf_desc,
                   NULL str,
                   NULL gnn,
                   NULL benefit_phase,
                   NULL formulary_id,
                   NULL frmlry_rx_id,
                   substr(ccw_pde_fact.bene_id,
                          length(ccw_pde_fact.bene_id) - 1,
                          2) bene_part_num
                  ,ccw_pde_fact.finl_actn_id
              FROM ccw_owner.ccw_pde_fact,
                         ccw_owner.temp_fhir_bene           fb,
                         ccw_owner.ccw_finl_actn_prfl,
                         ccw_owner.ccw_pde_srvc_prvdr_prfl,
                         ccw_owner.ccw_pde_cd_prfl,
                         ccw_owner.ccw_pde_prod_prfl,
                         ccw_owner.ccw_pde_plan_prfl,
                         ccw_owner.ccw_pde_prscrbr_prfl,
                         ccw_owner.pde_drug_cd_prfl,
                         ccw_owner.pde_misc_cd_prfl,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.meta_prcsng_dtl          pd,
                         ccw_owner.fhir_ptd_clm_grp         pcg
                   WHERE ccw_pde_fact.finl_actn_id =
                         ccw_finl_actn_prfl.finl_actn_id
                     AND ccw_finl_actn_prfl.finl_actn_cd = 'Y'
                     AND ccw_pde_fact.bene_id = fb.key
                     AND ccw_pde_fact.ccw_load_desc = pd.prd_name
                     AND pd.prd_type = 'PDE'
                     AND pd.prd_prcsng_ind = 'N'
                     AND ccw_pde_fact.srvc_dt >= g_3_yr_dt
                     AND ccw_pde_fact.pde_srvc_prvdr_prfl_id =
                         ccw_pde_srvc_prvdr_prfl.pde_srvc_prvdr_prfl_id
                     AND ccw_pde_fact.pde_code_prfl_id =
                         ccw_pde_cd_prfl.pde_code_prfl_id
                     AND ccw_pde_fact.pde_prscrbr_prfl_id =
                         ccw_pde_prscrbr_prfl.pde_prscrbr_prfl_id
                     AND ccw_pde_fact.all_clm_dmgrphc_id =
                         ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pde_fact.pde_prod_prfl_id =
                         ccw_pde_prod_prfl.pde_prod_prfl_id
                     AND ccw_pde_fact.pde_plan_prfl_id =
                         ccw_pde_plan_prfl.pde_plan_prfl_id
                     AND ccw_pde_fact.pde_drug_cd_prfl_id =
                         pde_drug_cd_prfl.pde_drug_cd_prfl_id
                     AND ccw_pde_fact.pde_misc_cd_prfl_id =
                         pde_misc_cd_prfl.pde_misc_cd_prfl_id
                     AND ccw_pde_fact.bene_id <> -1
                     AND pcg.rx_srvc_rfrnc_num(+) =
                         ccw_pde_fact.rx_srvc_rfrnc_num
                     AND pcg.srvc_prvdr_id_qlfyr_cd(+) =
                         ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd
                     AND pcg.srvc_prvdr_id(+) =
                         ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id
                     AND pcg.srvc_dt(+) = ccw_pde_fact.srvc_dt
                     AND substr(ccw_pde_fact.bene_id,
                                length(ccw_pde_fact.bene_id) - 1,
                                2) = nvl(p_part_num,
                                         substr(ccw_pde_fact.bene_id,
                                                length(ccw_pde_fact.bene_id) - 1,
                                                2)));

        g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      ELSE
        INSERT /*+ append parallel (16) */
        INTO ccw_owner.temp_pde
          SELECT /*+ parallel (16) */
           NULL AS combo_field, 
           REPLACE(REPLACE(REPLACE(version, '^'), '~'), '01-JAN-1000') version,
           REPLACE(REPLACE(REPLACE(dml_ind, '^'), '~'), '01-JAN-1000') dml_ind,
           REPLACE(REPLACE(REPLACE(pde_id, '^'), '~'), '01-JAN-1000') pde_id,
           clm_grp_id,
           REPLACE(REPLACE(REPLACE(bene_id, '^'), '~'), '01-JAN-1000') bene_id,
           REPLACE(REPLACE(REPLACE(srvc_dt, '^'), '~'), '01-JAN-1000') srvc_dt,
           REPLACE(REPLACE(REPLACE(pd_dt, '^'), '~'), '01-JAN-1000') pd_dt,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id_qlfyr_cd, '^'), '~'),
                   '01-JAN-1000') srvc_prvdr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id, '^'), '~'), '01-JAN-1000') srvc_prvdr_id,
           REPLACE(REPLACE(REPLACE(prscrbr_id_qlfyr_cd, '^'), '~'),
                   '01-JAN-1000') prscrbr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(prscrbr_id, '^'), '~'), '01-JAN-1000') prscrbr_id,
           REPLACE(REPLACE(REPLACE(rx_srvc_rfrnc_num, '^'), '~'),
                   '01-JAN-1000') rx_srvc_rfrnc_num,
           REPLACE(REPLACE(REPLACE(prod_srvc_id, '^'), '~'), '01-JAN-1000') prod_srvc_id,
           REPLACE(REPLACE(REPLACE(plan_cntrct_rec_id, '^'), '~'),
                   '01-JAN-1000') plan_cntrct_rec_id,
           REPLACE(REPLACE(REPLACE(plan_pbp_rec_num, '^'), '~'),
                   '01-JAN-1000') plan_pbp_rec_num,
           REPLACE(REPLACE(REPLACE(cmpnd_cd, '^'), '~'), '01-JAN-1000') cmpnd_cd,
           REPLACE(REPLACE(REPLACE(daw_prod_slctn_cd, '^'), '~'),
                   '01-JAN-1000') daw_prod_slctn_cd,
           REPLACE(REPLACE(REPLACE(qty_dspnsd_num, '^'), '~'),
                   '01-JAN-1000') qty_dspnsd_num,
           REPLACE(REPLACE(REPLACE(days_suply_num, '^'), '~'),
                   '01-JAN-1000') days_suply_num,
           REPLACE(REPLACE(REPLACE(fill_num, '^'), '~'), '01-JAN-1000') fill_num,
           REPLACE(REPLACE(REPLACE(dspnsng_stus_cd, '^'), '~'),
                   '01-JAN-1000') dspnsng_stus_cd,
           REPLACE(REPLACE(REPLACE(drug_cvrg_stus_cd, '^'), '~'),
                   '01-JAN-1000') drug_cvrg_stus_cd,
           REPLACE(REPLACE(REPLACE(adjstmt_dltn_cd, '^'), '~'),
                   '01-JAN-1000') adjstmt_dltn_cd,
           REPLACE(REPLACE(REPLACE(nstd_frmt_cd, '^'), '~'), '01-JAN-1000') nstd_frmt_cd,
           REPLACE(REPLACE(REPLACE(prcng_excptn_cd, '^'), '~'),
                   '01-JAN-1000') prcng_excptn_cd,
           REPLACE(REPLACE(REPLACE(ctstrphc_cvrg_cd, '^'), '~'),
                   '01-JAN-1000') ctstrphc_cvrg_cd,
           REPLACE(REPLACE(REPLACE(gdc_blw_oopt_amt, '^'), '~'),
                   '01-JAN-1000') gdc_blw_oopt_amt,
           REPLACE(REPLACE(REPLACE(gdc_abv_oopt_amt, '^'), '~'),
                   '01-JAN-1000') gdc_abv_oopt_amt,
           REPLACE(REPLACE(REPLACE(ptnt_pay_amt, '^'), '~'), '01-JAN-1000') ptnt_pay_amt,
           REPLACE(REPLACE(REPLACE(othr_troop_amt, '^'), '~'),
                   '01-JAN-1000') othr_troop_amt,
           REPLACE(REPLACE(REPLACE(lics_amt, '^'), '~'), '01-JAN-1000') lics_amt,
           REPLACE(REPLACE(REPLACE(plro_amt, '^'), '~'), '01-JAN-1000') plro_amt,
           REPLACE(REPLACE(REPLACE(cvrd_d_plan_pd_amt, '^'), '~'),
                   '01-JAN-1000') cvrd_d_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(ncvrd_plan_pd_amt, '^'), '~'),
                   '01-JAN-1000') ncvrd_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(tot_rx_cst_amt, '^'), '~'),
                   '01-JAN-1000') tot_rx_cst_amt,
           REPLACE(REPLACE(REPLACE(rx_orgn_cd, '^'), '~'), '01-JAN-1000') rx_orgn_cd,
           REPLACE(REPLACE(REPLACE(rptd_gap_dscnt_num, '^'), '~'),
                   '01-JAN-1000') rptd_gap_dscnt_num,
           REPLACE(REPLACE(REPLACE(brnd_gnrc_cd, '^'), '~'), '01-JAN-1000') brnd_gnrc_cd,
           REPLACE(REPLACE(REPLACE(phrmcy_srvc_type_cd, '^'), '~'),
                   '01-JAN-1000') phrmcy_srvc_type_cd,
           REPLACE(REPLACE(REPLACE(ptnt_rsdnc_cd, '^'), '~'), '01-JAN-1000') ptnt_rsdnc_cd,
           REPLACE(REPLACE(REPLACE(submsn_clr_cd, '^'), '~'), '01-JAN-1000') submsn_clr_cd,
           bene_part_num
           ,finl_actn_id 
            FROM (SELECT /*+ parallel (16) */
                   g_version version,
                   'INSERT' dml_ind,
                   ccw_pde_fact.bene_id,
                   ccw_pde_fact.pde_id,
                   pcg.clm_grp_id, -- PCG
                   ccw_pde_fact.rx_clm_cntl_id,
                   ccw_pde_fact.cardhldr_id AS crdhldr_id,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_pde_fact.srvc_dt,
                   ccw_pde_fact.pd_dt,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_prscrbr_prfl.prscrbr_id_qlfyr_cd,
                   ccw_pde_prscrbr_prfl.prscrbr_id,
                   ccw_pde_fact.rx_srvc_rfrnc_num,
                   ccw_pde_prod_prfl.prod_srvc_id,
                   ccw_pde_plan_prfl.plan_cntrct_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_plan_prfl.plan_cntrct_rec_id,
                   ccw_pde_plan_prfl.plan_pbp_rec_num,
                   ccw_pde_plan_prfl.plan_to_plan_rsn_cd,
                   ccw_pde_plan_prfl.pbp_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_cd_prfl.cmpnd_cd,
                   ccw_pde_cd_prfl.daw_prod_slctn_cd,
                   ccw_pde_fact.qty_dspnsd_num,
                   ccw_pde_fact.days_suply_num,
                   ccw_pde_fact.fill_num,
                   ccw_pde_cd_prfl.dspnsng_stus_cd,
                   ccw_pde_cd_prfl.drug_cvrg_stus_cd,
                   ccw_pde_cd_prfl.adjstmt_dltn_cd,
                   ccw_pde_cd_prfl.nstd_frmt_cd,
                   ccw_pde_cd_prfl.prcng_excptn_cd,
                   ccw_pde_cd_prfl.ctstrphc_cvrg_cd,
                   ccw_pde_cd_prfl.rx_orgn_cd, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_fact.ingrdnt_cst_pd_amt,
                   ccw_pde_fact.dspnsng_fee_pd_amt,
                   ccw_pde_fact.tot_amt_attr_sls_tax_amt,
                   ccw_pde_fact.gdc_blw_oopt_amt,
                   ccw_pde_fact.gdc_abv_oopt_amt,
                   ccw_pde_fact.ptnt_pay_amt,
                   ccw_pde_fact.othr_troop_amt,
                   ccw_pde_fact.lics_amt,
                   ccw_pde_fact.plro_amt,
                   ccw_pde_fact.cvrd_d_plan_pd_amt,
                   ccw_pde_fact.ncvrd_plan_pd_amt,
                   ccw_pde_fact.tot_rx_cst_amt,
                   ccw_pde_fact.rptd_gap_dscnt_num,
                   pde_drug_cd_prfl.brnd_gnrc_cd,
                   pde_misc_cd_prfl.phrmcy_srvc_type_cd,
                   pde_misc_cd_prfl.ptnt_rsdnc_cd,
                   pde_misc_cd_prfl.submsn_clr_cd,
                   NULL bn,
                   NULL gcdf,
                   NULL gcdf_desc,
                   NULL str,
                   NULL gnn,
                   NULL benefit_phase,
                   NULL formulary_id,
                   NULL frmlry_rx_id,
                   substr(ccw_pde_fact.bene_id,
                          length(ccw_pde_fact.bene_id),
                          1) bene_part_num
                   , ccw_pde_fact.finl_actn_id   
                    FROM ccw_owner.ccw_pde_fact,
                         ccw_owner.temp_fhir_bene           fb,
                         ccw_owner.ccw_finl_actn_prfl,
                         ccw_owner.ccw_pde_srvc_prvdr_prfl,
                         ccw_owner.ccw_pde_cd_prfl,
                         ccw_owner.ccw_pde_prod_prfl,
                         ccw_owner.ccw_pde_plan_prfl,
                         ccw_owner.ccw_pde_prscrbr_prfl,
                         ccw_owner.pde_drug_cd_prfl,
                         ccw_owner.pde_misc_cd_prfl,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl,
                         ccw_owner.meta_prcsng_dtl          pd,
                         ccw_owner.fhir_ptd_clm_grp         pcg 
                   WHERE ccw_pde_fact.finl_actn_id =
                         ccw_finl_actn_prfl.finl_actn_id
                     AND ccw_finl_actn_prfl.finl_actn_cd = 'Y'
                     AND ccw_pde_fact.bene_id = fb.key
                     AND ccw_pde_fact.ccw_load_desc = pd.prd_name
                     AND pd.prd_type = 'PDE'
                     AND pd.prd_prcsng_ind = 'N'
                     AND ccw_pde_fact.srvc_dt >= g_3_yr_dt
                     AND ccw_pde_fact.pde_srvc_prvdr_prfl_id =
                         ccw_pde_srvc_prvdr_prfl.pde_srvc_prvdr_prfl_id
                     AND ccw_pde_fact.pde_code_prfl_id =
                         ccw_pde_cd_prfl.pde_code_prfl_id
                     AND ccw_pde_fact.pde_prscrbr_prfl_id =
                         ccw_pde_prscrbr_prfl.pde_prscrbr_prfl_id
                     AND ccw_pde_fact.all_clm_dmgrphc_id =
                         ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pde_fact.pde_prod_prfl_id =
                         ccw_pde_prod_prfl.pde_prod_prfl_id
                     AND ccw_pde_fact.pde_plan_prfl_id =
                         ccw_pde_plan_prfl.pde_plan_prfl_id
                     AND ccw_pde_fact.pde_drug_cd_prfl_id =
                         pde_drug_cd_prfl.pde_drug_cd_prfl_id
                     AND ccw_pde_fact.pde_misc_cd_prfl_id =
                         pde_misc_cd_prfl.pde_misc_cd_prfl_id
                     AND ccw_pde_fact.bene_id <> -1
                     AND pcg.rx_srvc_rfrnc_num(+) =
                         ccw_pde_fact.rx_srvc_rfrnc_num
                     AND pcg.srvc_prvdr_id_qlfyr_cd(+) =
                         ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd
                     AND pcg.srvc_prvdr_id(+) =
                         ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id
                     AND pcg.srvc_dt(+) = ccw_pde_fact.srvc_dt
                     AND substr(ccw_pde_fact.bene_id,
                                length(ccw_pde_fact.bene_id),
                                1) = nvl(p_part_num,
                                         substr(ccw_pde_fact.bene_id,
                                                length(ccw_pde_fact.bene_id),
                                                1)));

        g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      END IF;

      COMMIT;

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_PDE',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_PDE',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;

    END IF;

    -- Moving output file writing to a common procedure, so delta pde can use as well.
    output_pde_file(p_part_num, pb_output_data);


    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF pb_extrct_only = 'TRUE' THEN
      IF pb_output_data = 'TRUE' THEN
        --Create manifest file
        create_manifest_file('INITIAL', p_part_num, 'PDE');

        --Add file to manifest list
        update_manifest_file(g_utl_file);

        --Add closing tag to the manifest file
        utl_file.put_line(g_manifest_file, '</dataSetManifest>');
        --Close the manifest file
        utl_file.fclose(g_manifest_file);

        --Create .done file to indicate to the file transfer script on the server
        --that the current file is ready to transfer
        create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      END IF;
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_pde - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_PDE Error: ');
      RAISE;
  END extract_pde;

  ---
  PROCEDURE insert_temp_pde_delta_by_part(pi_part_name     VARCHAR2,
                                          pi_bene_part_num NUMBER) IS
  BEGIN

    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_pde PARTITION (' ||
                      pi_part_name || ')
               SELECT /*+ parallel (16) */
         NULL AS combo_field, 
         REPLACE(REPLACE(REPLACE(version, ''^''), ''~''), ''01-JAN-1000'') version,
         REPLACE(REPLACE(REPLACE(dml_ind, ''^''), ''~''), ''01-JAN-1000'') dml_ind,
         REPLACE(REPLACE(REPLACE(pde_id, ''^''), ''~''), ''01-JAN-1000'') pde_id,
         clm_grp_id,
         REPLACE(REPLACE(REPLACE(bene_id, ''^''), ''~''), ''01-JAN-1000'') bene_id,
         REPLACE(REPLACE(REPLACE(srvc_dt, ''^''), ''~''), ''01-JAN-1000'') srvc_dt,
         REPLACE(REPLACE(REPLACE(pd_dt, ''^''), ''~''), ''01-JAN-1000'') pd_dt,
         REPLACE(REPLACE(REPLACE(srvc_prvdr_id_qlfyr_cd, ''^''), ''~''),
                 ''01-JAN-1000'') srvc_prvdr_id_qlfyr_cd,
         REPLACE(REPLACE(REPLACE(srvc_prvdr_id, ''^''), ''~''), ''01-JAN-1000'') srvc_prvdr_id,
         REPLACE(REPLACE(REPLACE(prscrbr_id_qlfyr_cd, ''^''), ''~''),
                 ''01-JAN-1000'') prscrbr_id_qlfyr_cd,
         REPLACE(REPLACE(REPLACE(prscrbr_id, ''^''), ''~''), ''01-JAN-1000'') prscrbr_id,
         REPLACE(REPLACE(REPLACE(rx_srvc_rfrnc_num, ''^''), ''~''),
                 ''01-JAN-1000'') rx_srvc_rfrnc_num,
         REPLACE(REPLACE(REPLACE(prod_srvc_id, ''^''), ''~''), ''01-JAN-1000'') prod_srvc_id,
         REPLACE(REPLACE(REPLACE(plan_cntrct_rec_id, ''^''), ''~''),
                 ''01-JAN-1000'') plan_cntrct_rec_id,
         REPLACE(REPLACE(REPLACE(plan_pbp_rec_num, ''^''), ''~''),
                 ''01-JAN-1000'') plan_pbp_rec_num,
         REPLACE(REPLACE(REPLACE(cmpnd_cd, ''^''), ''~''), ''01-JAN-1000'') cmpnd_cd,
         REPLACE(REPLACE(REPLACE(daw_prod_slctn_cd, ''^''), ''~''),
                 ''01-JAN-1000'') daw_prod_slctn_cd,
         REPLACE(REPLACE(REPLACE(qty_dspnsd_num, ''^''), ''~''), ''01-JAN-1000'') qty_dspnsd_num,
         REPLACE(REPLACE(REPLACE(days_suply_num, ''^''), ''~''), ''01-JAN-1000'') days_suply_num,
         REPLACE(REPLACE(REPLACE(fill_num, ''^''), ''~''), ''01-JAN-1000'') fill_num,
         REPLACE(REPLACE(REPLACE(dspnsng_stus_cd, ''^''), ''~''), ''01-JAN-1000'') dspnsng_stus_cd,
         REPLACE(REPLACE(REPLACE(drug_cvrg_stus_cd, ''^''), ''~''),
                 ''01-JAN-1000'') drug_cvrg_stus_cd,
         REPLACE(REPLACE(REPLACE(adjstmt_dltn_cd, ''^''), ''~''), ''01-JAN-1000'') adjstmt_dltn_cd,
         REPLACE(REPLACE(REPLACE(nstd_frmt_cd, ''^''), ''~''), ''01-JAN-1000'') nstd_frmt_cd,
         REPLACE(REPLACE(REPLACE(prcng_excptn_cd, ''^''), ''~''), ''01-JAN-1000'') prcng_excptn_cd,
         REPLACE(REPLACE(REPLACE(ctstrphc_cvrg_cd, ''^''), ''~''),
                 ''01-JAN-1000'') ctstrphc_cvrg_cd,
         REPLACE(REPLACE(REPLACE(gdc_blw_oopt_amt, ''^''), ''~''),
                 ''01-JAN-1000'') gdc_blw_oopt_amt,
         REPLACE(REPLACE(REPLACE(gdc_abv_oopt_amt, ''^''), ''~''),
                 ''01-JAN-1000'') gdc_abv_oopt_amt,
         REPLACE(REPLACE(REPLACE(ptnt_pay_amt, ''^''), ''~''), ''01-JAN-1000'') ptnt_pay_amt,
         REPLACE(REPLACE(REPLACE(othr_troop_amt, ''^''), ''~''), ''01-JAN-1000'') othr_troop_amt,
         REPLACE(REPLACE(REPLACE(lics_amt, ''^''), ''~''), ''01-JAN-1000'') lics_amt,
         REPLACE(REPLACE(REPLACE(plro_amt, ''^''), ''~''), ''01-JAN-1000'') plro_amt,
         REPLACE(REPLACE(REPLACE(cvrd_d_plan_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000'') cvrd_d_plan_pd_amt,
         REPLACE(REPLACE(REPLACE(ncvrd_plan_pd_amt, ''^''), ''~''),
                 ''01-JAN-1000'') ncvrd_plan_pd_amt,
         REPLACE(REPLACE(REPLACE(tot_rx_cst_amt, ''^''), ''~''), ''01-JAN-1000'') tot_rx_cst_amt,
         REPLACE(REPLACE(REPLACE(rx_orgn_cd, ''^''), ''~''), ''01-JAN-1000'') rx_orgn_cd,
         REPLACE(REPLACE(REPLACE(rptd_gap_dscnt_num, ''^''), ''~''),
                 ''01-JAN-1000'') rptd_gap_dscnt_num,
         REPLACE(REPLACE(REPLACE(brnd_gnrc_cd, ''^''), ''~''), ''01-JAN-1000'') brnd_gnrc_cd,
         REPLACE(REPLACE(REPLACE(phrmcy_srvc_type_cd, ''^''), ''~''),
                 ''01-JAN-1000'') phrmcy_srvc_type_cd,
         REPLACE(REPLACE(REPLACE(ptnt_rsdnc_cd, ''^''), ''~''), ''01-JAN-1000'') ptnt_rsdnc_cd,
         REPLACE(REPLACE(REPLACE(submsn_clr_cd, ''^''), ''~''), ''01-JAN-1000'') submsn_clr_cd,
         bene_part_num
         ,finl_actn_id
          FROM (SELECT /*+ parallel (16) */
                   ' || g_version ||
                      ' version,
                       ptd.dml_ind,    
                       ccw_pde_fact.bene_id,
                       ccw_pde_fact.pde_id,
                       ccw_pde_fact.rx_clm_cntl_id,
                       ccw_pde_fact.cardhldr_id AS crdhldr_id,
                       ccw_all_clm_dmgrphc_prfl.gndr_cd,
                       ccw_all_clm_dmgrphc_prfl.dob_dt,
                       ccw_pde_fact.srvc_dt,
                       ccw_pde_fact.pd_dt,
                       ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd,
                       ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id, /* <-- DUA 1 Encryption Applied */
                       ccw_pde_prscrbr_prfl.prscrbr_id_qlfyr_cd,
                       ccw_pde_prscrbr_prfl.prscrbr_id,
                       ccw_pde_fact.rx_srvc_rfrnc_num,
                       ccw_pde_prod_prfl.prod_srvc_id,
                       ccw_pde_plan_prfl.plan_cntrct_id, /* <-- DUA 1 Encryption Applied */
                       ccw_pde_plan_prfl.plan_cntrct_rec_id,
                       ccw_pde_plan_prfl.plan_pbp_rec_num,
                       ccw_pde_plan_prfl.plan_to_plan_rsn_cd,
                       ccw_pde_plan_prfl.pbp_id, /* <-- DUA 1 Encryption Applied */
                       ccw_pde_cd_prfl.cmpnd_cd,
                       ccw_pde_cd_prfl.daw_prod_slctn_cd,
                       ccw_pde_fact.qty_dspnsd_num,
                       ccw_pde_fact.days_suply_num,
                       ccw_pde_fact.fill_num,
                       ccw_pde_cd_prfl.dspnsng_stus_cd,
                       ccw_pde_cd_prfl.drug_cvrg_stus_cd,
                       ccw_pde_cd_prfl.adjstmt_dltn_cd,
                       ccw_pde_cd_prfl.nstd_frmt_cd,
                       ccw_pde_cd_prfl.prcng_excptn_cd,
                       ccw_pde_cd_prfl.ctstrphc_cvrg_cd,
                       ccw_pde_cd_prfl.rx_orgn_cd, /* <-- DUA 1 Encryption Applied */
                       ccw_pde_fact.ingrdnt_cst_pd_amt,
                       ccw_pde_fact.dspnsng_fee_pd_amt,
                       ccw_pde_fact.tot_amt_attr_sls_tax_amt,
                       ccw_pde_fact.gdc_blw_oopt_amt,
                       ccw_pde_fact.gdc_abv_oopt_amt,
                       ccw_pde_fact.ptnt_pay_amt,
                       ccw_pde_fact.othr_troop_amt,
                       ccw_pde_fact.lics_amt,
                       ccw_pde_fact.plro_amt,
                       ccw_pde_fact.cvrd_d_plan_pd_amt,
                       ccw_pde_fact.ncvrd_plan_pd_amt,
                       ccw_pde_fact.tot_rx_cst_amt,
                       ccw_pde_fact.rptd_gap_dscnt_num,
                       pde_drug_cd_prfl.brnd_gnrc_cd,
                       pde_misc_cd_prfl.phrmcy_srvc_type_cd,
                       pde_misc_cd_prfl.ptnt_rsdnc_cd,
                       pde_misc_cd_prfl.submsn_clr_cd,
                       NULL bn,
                       NULL gcdf,
                       NULL gcdf_desc,
                       NULL str,
                       NULL gnn,
                       NULL benefit_phase,
                       NULL formulary_id,
                       NULL frmlry_rx_id,
                       substr(ccw_pde_fact.bene_id,
                              length(ccw_pde_fact.bene_id) - 1,
                              2) bene_part_num,
                        ptd.clm_grp_id                
                       ,ptd.finl_actn_id
                  FROM ccw_owner.ccw_pde_fact,
                       ccw_owner.ccw_finl_actn_prfl,
                       ccw_owner.ccw_pde_srvc_prvdr_prfl,
                       ccw_owner.ccw_pde_cd_prfl,
                       ccw_owner.ccw_pde_prod_prfl,
                       ccw_owner.ccw_pde_plan_prfl,
                       ccw_owner.ccw_pde_prscrbr_prfl,
                       ccw_owner.pde_drug_cd_prfl,
                       ccw_owner.pde_misc_cd_prfl,
                       ccw_owner.ccw_all_clm_dmgrphc_prfl,
                       ccw_owner.fhir_ptd_ld_clm_status ptd
                 WHERE ccw_pde_fact.finl_actn_id =
                       ccw_finl_actn_prfl.finl_actn_id
                   AND ccw_finl_actn_prfl.finl_actn_cd = ''Y''
                   AND ccw_pde_fact.pde_srvc_prvdr_prfl_id =
                       ccw_pde_srvc_prvdr_prfl.pde_srvc_prvdr_prfl_id
                   AND ccw_pde_fact.pde_code_prfl_id =
                       ccw_pde_cd_prfl.pde_code_prfl_id
                   AND ccw_pde_fact.pde_prscrbr_prfl_id =
                       ccw_pde_prscrbr_prfl.pde_prscrbr_prfl_id
                   AND ccw_pde_fact.all_clm_dmgrphc_id =
                       ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                   AND ccw_pde_fact.pde_prod_prfl_id =
                       ccw_pde_prod_prfl.pde_prod_prfl_id
                   AND ccw_pde_fact.pde_plan_prfl_id =
                       ccw_pde_plan_prfl.pde_plan_prfl_id
                   AND ccw_pde_fact.pde_drug_cd_prfl_id =
                       pde_drug_cd_prfl.pde_drug_cd_prfl_id
                   AND ccw_pde_fact.pde_misc_cd_prfl_id =
                       pde_misc_cd_prfl.pde_misc_cd_prfl_id
                   AND substr(ptd.bene_id, length(ptd.bene_id) - 1, 2) =
                       nvl(' || pi_bene_part_num ||
                      ', substr(ptd.bene_id, length(ptd.bene_id) - 1, 2))
                 AND ptd.clm_grp_id IS NOT NULL
                 AND ccw_pde_fact.srvc_dt = ptd.srvc_dt
                 AND ccw_pde_fact.ccw_load_desc = ptd.ccw_ld_desc
                   AND ccw_pde_fact.pde_id = ptd.pde_id
                   AND ptd.job_ld_dt IS NULL
                   AND ccw_pde_fact.bene_id <> -1)');


  END insert_temp_pde_delta_by_part;

  ---
  PROCEDURE insert_pde_delta_by_part_fl(pi_part_name     VARCHAR2,
                                        pi_bene_part_num VARCHAR2, 
                                        pi_bene_ss_len   NUMBER ) 
  IS
     l_part_str VARCHAR2(64); 
  BEGIN
  
    --
    -- Set l_part_str var based on pi_part_name
    -- 
    IF pi_part_name IS NOT NULL THEN 
       l_part_str := ' PARTITION ( '||pi_part_name ||' ) '; 
    ELSE
       l_part_str := NULL; 
    END IF; 
                                
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'insert_pde_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);
                                              
  
    EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_pde '||l_part_str||       
        ' SELECT /*+ parallel (16) */
           NULL AS combo_field,
           REPLACE(REPLACE(REPLACE(version, ''^''), ''~''), ''01-JAN-1000'') version,
           REPLACE(REPLACE(REPLACE(dml_ind, ''^''), ''~''), ''01-JAN-1000'') dml_ind,
           REPLACE(REPLACE(REPLACE(pde_id, ''^''), ''~''), ''01-JAN-1000'') pde_id,
           clm_grp_id,
           REPLACE(REPLACE(REPLACE(bene_id, ''^''), ''~''), ''01-JAN-1000'') bene_id,
           REPLACE(REPLACE(REPLACE(srvc_dt, ''^''), ''~''), ''01-JAN-1000'') srvc_dt,
           REPLACE(REPLACE(REPLACE(pd_dt, ''^''), ''~''), ''01-JAN-1000'') pd_dt,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id_qlfyr_cd, ''^''), ''~''),
                   ''01-JAN-1000'') srvc_prvdr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(srvc_prvdr_id, ''^''), ''~''), ''01-JAN-1000'') srvc_prvdr_id,
           REPLACE(REPLACE(REPLACE(prscrbr_id_qlfyr_cd, ''^''), ''~''),
                   ''01-JAN-1000'') prscrbr_id_qlfyr_cd,
           REPLACE(REPLACE(REPLACE(prscrbr_id, ''^''), ''~''), ''01-JAN-1000'') prscrbr_id,
           REPLACE(REPLACE(REPLACE(rx_srvc_rfrnc_num, ''^''), ''~''),
                   ''01-JAN-1000'') rx_srvc_rfrnc_num,
           REPLACE(REPLACE(REPLACE(prod_srvc_id, ''^''), ''~''), ''01-JAN-1000'') prod_srvc_id,
           REPLACE(REPLACE(REPLACE(plan_cntrct_rec_id, ''^''), ''~''),
                   ''01-JAN-1000'') plan_cntrct_rec_id,
           REPLACE(REPLACE(REPLACE(plan_pbp_rec_num, ''^''), ''~''),
                   ''01-JAN-1000'') plan_pbp_rec_num,
           REPLACE(REPLACE(REPLACE(cmpnd_cd, ''^''), ''~''), ''01-JAN-1000'') cmpnd_cd,
           REPLACE(REPLACE(REPLACE(daw_prod_slctn_cd, ''^''), ''~''),
                   ''01-JAN-1000'') daw_prod_slctn_cd,
           REPLACE(REPLACE(REPLACE(qty_dspnsd_num, ''^''), ''~''),
                   ''01-JAN-1000'') qty_dspnsd_num,
           REPLACE(REPLACE(REPLACE(days_suply_num, ''^''), ''~''),
                   ''01-JAN-1000'') days_suply_num,
           REPLACE(REPLACE(REPLACE(fill_num, ''^''), ''~''), ''01-JAN-1000'') fill_num,
           REPLACE(REPLACE(REPLACE(dspnsng_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000'') dspnsng_stus_cd,
           REPLACE(REPLACE(REPLACE(drug_cvrg_stus_cd, ''^''), ''~''),
                   ''01-JAN-1000'') drug_cvrg_stus_cd,
           REPLACE(REPLACE(REPLACE(adjstmt_dltn_cd, ''^''), ''~''),
                   ''01-JAN-1000'') adjstmt_dltn_cd,
           REPLACE(REPLACE(REPLACE(nstd_frmt_cd, ''^''), ''~''), ''01-JAN-1000'') nstd_frmt_cd,
           REPLACE(REPLACE(REPLACE(prcng_excptn_cd, ''^''), ''~''),
                   ''01-JAN-1000'') prcng_excptn_cd,
           REPLACE(REPLACE(REPLACE(ctstrphc_cvrg_cd, ''^''), ''~''),
                   ''01-JAN-1000'') ctstrphc_cvrg_cd,
           REPLACE(REPLACE(REPLACE(gdc_blw_oopt_amt, ''^''), ''~''),
                   ''01-JAN-1000'') gdc_blw_oopt_amt,
           REPLACE(REPLACE(REPLACE(gdc_abv_oopt_amt, ''^''), ''~''),
                   ''01-JAN-1000'') gdc_abv_oopt_amt,
           REPLACE(REPLACE(REPLACE(ptnt_pay_amt, ''^''), ''~''), ''01-JAN-1000'') ptnt_pay_amt,
           REPLACE(REPLACE(REPLACE(othr_troop_amt, ''^''), ''~''),
                   ''01-JAN-1000'') othr_troop_amt,
           REPLACE(REPLACE(REPLACE(lics_amt, ''^''), ''~''), ''01-JAN-1000'') lics_amt,
           REPLACE(REPLACE(REPLACE(plro_amt, ''^''), ''~''), ''01-JAN-1000'') plro_amt,
           REPLACE(REPLACE(REPLACE(cvrd_d_plan_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000'') cvrd_d_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(ncvrd_plan_pd_amt, ''^''), ''~''),
                   ''01-JAN-1000'') ncvrd_plan_pd_amt,
           REPLACE(REPLACE(REPLACE(tot_rx_cst_amt, ''^''), ''~''),
                   ''01-JAN-1000'') tot_rx_cst_amt,
           REPLACE(REPLACE(REPLACE(rx_orgn_cd, ''^''), ''~''), ''01-JAN-1000'') rx_orgn_cd,
           REPLACE(REPLACE(REPLACE(rptd_gap_dscnt_num, ''^''), ''~''),
                   ''01-JAN-1000'') rptd_gap_dscnt_num,
           REPLACE(REPLACE(REPLACE(brnd_gnrc_cd, ''^''), ''~''), ''01-JAN-1000'') brnd_gnrc_cd,
           REPLACE(REPLACE(REPLACE(phrmcy_srvc_type_cd, ''^''), ''~''),
                   ''01-JAN-1000'') phrmcy_srvc_type_cd,
           REPLACE(REPLACE(REPLACE(ptnt_rsdnc_cd, ''^''), ''~''), ''01-JAN-1000'') ptnt_rsdnc_cd,
           REPLACE(REPLACE(REPLACE(submsn_clr_cd, ''^''), ''~''), ''01-JAN-1000'') submsn_clr_cd,
           bene_part_num,
           finl_actn_id         
            FROM (SELECT /*+ parallel (16) */
                   ' || g_version || ' version,
                   ptd.dml_ind, 
                   ccw_pde_fact.bene_id,
                   ccw_pde_fact.pde_id,
                   ccw_pde_fact.rx_clm_cntl_id,
                   ccw_pde_fact.cardhldr_id AS crdhldr_id,
                   ccw_all_clm_dmgrphc_prfl.gndr_cd,
                   ccw_all_clm_dmgrphc_prfl.dob_dt,
                   ccw_pde_fact.srvc_dt,
                   ccw_pde_fact.pd_dt,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id_qlfyr_cd,
                   ccw_pde_srvc_prvdr_prfl.srvc_prvdr_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_prscrbr_prfl.prscrbr_id_qlfyr_cd,
                   ccw_pde_prscrbr_prfl.prscrbr_id,
                   ccw_pde_fact.rx_srvc_rfrnc_num,
                   ccw_pde_prod_prfl.prod_srvc_id,
                   ccw_pde_plan_prfl.plan_cntrct_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_plan_prfl.plan_cntrct_rec_id,
                   ccw_pde_plan_prfl.plan_pbp_rec_num,
                   ccw_pde_plan_prfl.plan_to_plan_rsn_cd,
                   ccw_pde_plan_prfl.pbp_id, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_cd_prfl.cmpnd_cd,
                   ccw_pde_cd_prfl.daw_prod_slctn_cd,
                   ccw_pde_fact.qty_dspnsd_num,
                   ccw_pde_fact.days_suply_num,
                   ccw_pde_fact.fill_num,
                   ccw_pde_cd_prfl.dspnsng_stus_cd,
                   ccw_pde_cd_prfl.drug_cvrg_stus_cd,
                   ccw_pde_cd_prfl.adjstmt_dltn_cd,
                   ccw_pde_cd_prfl.nstd_frmt_cd,
                   ccw_pde_cd_prfl.prcng_excptn_cd,
                   ccw_pde_cd_prfl.ctstrphc_cvrg_cd,
                   ccw_pde_cd_prfl.rx_orgn_cd, /* <-- DUA 1 Encryption Applied */
                   ccw_pde_fact.ingrdnt_cst_pd_amt,
                   ccw_pde_fact.dspnsng_fee_pd_amt,
                   ccw_pde_fact.tot_amt_attr_sls_tax_amt,
                   ccw_pde_fact.gdc_blw_oopt_amt,
                   ccw_pde_fact.gdc_abv_oopt_amt,
                   ccw_pde_fact.ptnt_pay_amt,
                   ccw_pde_fact.othr_troop_amt,
                   ccw_pde_fact.lics_amt,
                   ccw_pde_fact.plro_amt,
                   ccw_pde_fact.cvrd_d_plan_pd_amt,
                   ccw_pde_fact.ncvrd_plan_pd_amt,
                   ccw_pde_fact.tot_rx_cst_amt,
                   ccw_pde_fact.rptd_gap_dscnt_num,
                   pde_drug_cd_prfl.brnd_gnrc_cd,
                   pde_misc_cd_prfl.phrmcy_srvc_type_cd,
                   pde_misc_cd_prfl.ptnt_rsdnc_cd,
                   pde_misc_cd_prfl.submsn_clr_cd,
                   NULL bn,
                   NULL gcdf,
                   NULL gcdf_desc,
                   NULL str,
                   NULL gnn,
                   NULL benefit_phase,
                   NULL formulary_id,
                   NULL frmlry_rx_id,
                   substr(ccw_pde_fact.bene_id,
                          length(ccw_pde_fact.bene_id) - '||pi_bene_ss_len||'  + 1,'||
                           pi_bene_ss_len|| ') bene_part_num,
                   ptd.clm_grp_id                
                  , ccw_pde_fact.finl_actn_id
                    FROM ( select /*+ parallel (16) */ * from  ccw_owner.fhir_ptd_ld_clm_status   ptd
                            where ptd.clm_grp_id IS NOT NULL
                              AND ptd.job_ld_dt IS NULL 
                              AND substr(bene_id,
                                        length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                        || pi_bene_ss_len|| ') 
                                        = nvl('||CHR(39)||
                                              pi_bene_part_num||CHR(39)||',
                                              substr(bene_id,
                                              length(bene_id) - '||pi_bene_ss_len||'  + 1,'
                                              || pi_bene_ss_len ||'))) ptd ,
                         ccw_owner.ccw_pde_fact,
                         ccw_owner.ccw_pde_srvc_prvdr_prfl,
                         ccw_owner.ccw_pde_cd_prfl,
                         ccw_owner.ccw_pde_prod_prfl,
                         ccw_owner.ccw_pde_plan_prfl,
                         ccw_owner.ccw_pde_prscrbr_prfl,
                         ccw_owner.pde_drug_cd_prfl,
                         ccw_owner.pde_misc_cd_prfl,
                         ccw_owner.ccw_all_clm_dmgrphc_prfl
                   WHERE ccw_pde_fact.pde_srvc_prvdr_prfl_id = ccw_pde_srvc_prvdr_prfl.pde_srvc_prvdr_prfl_id
                     AND ccw_pde_fact.pde_code_prfl_id = ccw_pde_cd_prfl.pde_code_prfl_id
                     AND ccw_pde_fact.pde_prscrbr_prfl_id = ccw_pde_prscrbr_prfl.pde_prscrbr_prfl_id
                     AND ccw_pde_fact.all_clm_dmgrphc_id = ccw_all_clm_dmgrphc_prfl.all_clm_dmgrphc_id
                     AND ccw_pde_fact.pde_prod_prfl_id = ccw_pde_prod_prfl.pde_prod_prfl_id
                     AND ccw_pde_fact.pde_plan_prfl_id = ccw_pde_plan_prfl.pde_plan_prfl_id
                     AND ccw_pde_fact.pde_drug_cd_prfl_id = pde_drug_cd_prfl.pde_drug_cd_prfl_id
                     AND ccw_pde_fact.pde_misc_cd_prfl_id = pde_misc_cd_prfl.pde_misc_cd_prfl_id
                     AND ccw_pde_fact.srvc_dt = ptd.srvc_dt
                     AND ccw_pde_fact.bene_id <> -1
                     AND ccw_pde_fact.pde_id = ptd.pde_id
                     )'); 
       
      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;           
  
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'FINISHED - insert_pde_delta_by_part_f: ' ||
                                              pi_part_name || ':' ||
                                              pi_bene_part_num|| ':  LEN - ' ||
                                              pi_bene_ss_len || 
                                              ' PartStr: '||l_part_str);
 
  END insert_pde_delta_by_part_fl; 
  -- 
  PROCEDURE extract_pde_changes(p_strt_dt      DATE,
                                p_end_dt       DATE,
                                p_prcsg_dt     DATE,
                                p_part_num     VARCHAR2,
                                pb_load_data   VARCHAR2, 
                                pb_new_version VARCHAR2 
                              , pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    p_load_data   BOOLEAN;
    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;
    l_bene_ss_len NUMBER;    -- 3.22 - use p_part_num(as a #) length to determine
                             -- substr length of bene_id in dynamic sql     
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_PDE_CHANGES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    END IF;

    g_tot_rows := 0;

    p_load_data   := truefalsetoboolean(pb_load_data);
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    l_bene_ss_len := LENGTH (p_part_num);
    -- 3.22 If l_bene_ss_len Is not 1 or 2 error if NULL set to 1
    IF l_bene_ss_len IS NULL THEN
       l_bene_ss_len := 1; 
    END IF;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len 
                                      || ' From p_part_num: '||p_part_num );

    
    IF l_bene_ss_len > 2 THEN 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'L_bene_ss_len = '|| l_bene_ss_len
                                 || ' this IS A PROBLEM' );
    END IF;      
    
    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true

    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'extract_pde_changes - started');

    dbms_application_info.set_client_info('extract_PDE_changes ()');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'pde_upd' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF p_load_data THEN
      --Truncates appropriate subpartitions for the table
      truncate_table(p_part_num, 'temp_pde');
      
      --get partition name
      g_part_name := get_part_name(pi_table_name => 'TEMP_PDE',         -- clm/fact table
                                   pi_value      => p_part_num);

      --insert by partition
      insert_pde_delta_by_part_fl(pi_part_name     => g_part_name,
                                     pi_bene_part_num => p_part_num, 
                                     pi_bene_ss_len   => l_bene_ss_len);
      
      COMMIT; 

      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_PDE',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        IF ccw_owner.src_ddl.anlyz_tbl_ptn(p_tbl_nm      => 'TEMP_PDE',
                                           p_ptn_nm      => 'BENE_PART' ||
                                                            to_number(p_part_num),
                                           p_granularity => 'PARTITION',
                                           p_ecode_out   => g_ecode,
                                           p_errm_out    => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      END IF;
      
      COMMIT;

    END IF;   -- IF p_load_data ()

    -- Moving output file writing to a common procedure, so delta pde can use as well.
    output_pde_file(p_part_num, booleantotruefalse(g_output_data));


    update_file_version(p_new_version);

    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN

      --Create manifest file
      create_manifest_file('DELTA', p_part_num, 'PDE');

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
      --Close the manifest file
      utl_file.fclose(g_manifest_file);

      --Create .done file to indicate to the file transfer script on the server
      --that the current file is ready to transfer
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze

    ELSE

      --Add file to manifest list
      update_manifest_file(g_utl_file);

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_pde_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_PDE_Changes Error: ');
      RAISE;
  END extract_pde_changes;
 
  -- Adding update for PDE_IDs where the bene_id has changed from -1 to a valid number  
  -- Copied from fhir_edb_updt (12/17)
  PROCEDURE fhir_pde_updt(pb_extrct_only VARCHAR2 DEFAULT 'TRUE')
  IS
  BEGIN
    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_EDB_UPDT',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_PDE_updt - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

   -- save info for FHIR -- this will include data selected from ccw_pde_fact
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pde_bene_updt
      (pde_id, process_ts, creat_ts)
      SELECT /*+ PARALLEL (16) */
       pbu.pde_id, NULL, SYSDATE --> leaving NULL to indicate to FHIR this is unprocessed
        FROM ccw_owner.ccw_pde_bene_updt pbu
       WHERE NOT EXISTS
       (SELECT /*+ PARALLEL (16) */
               fhir.pde_id
                FROM ccw_owner.fhir_pde_bene_updt fhir
               WHERE fhir.pde_id = pbu.pde_id);

    g_tot_rows := SQL%ROWCOUNT;

    COMMIT;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'fhir_pde_updt - Insert: ' ||
                                              g_tot_rows ||
                                              ' into fhir_pde_bene_updt');

    dbms_output.put_line('fhir_pde_updt - Insert: ' || g_tot_rows ||
                         ' into fhir_pde_bene_updt');

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_pde_updt - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_pde_updt Error: ');
      RAISE;

  END fhir_pde_updt;

  -- Clear FHIR staging table for EDB info
  PROCEDURE fhir_pde_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                         pb_truncate_tab VARCHAR2 DEFAULT 'FALSE') 
   IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PDE_CLR',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_pde_clr - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    IF pb_truncate_tab = 'TRUE' THEN
      truncate_table('', 'FHIR_PDE_BENE_UPDT');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_PDE_clr - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_PDE_clr Error: ');
      RAISE;

  END fhir_PDE_clr;
  

  -- Adding update for PDE_IDs where the bene_id has changed from -1 to a valid number 
  -----------------------------------------------------------------------
  -- Capturing the claims information to FHIR temp tables
  -- These procedures will be called during claims processing
  -----------------------------------------------------------------------

  PROCEDURE fhir_edb_updt(pb_extrct_only VARCHAR2 DEFAULT 'TRUE') 
   IS
  BEGIN
    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_EDB_UPDT',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_edb_updt - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- 3.13 -- save info for FHIR -- this will include data selected from ccw_pta_fact and ccw_ptb_fact

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_clm_bene_updt
      (clm_id, nch_clm_type_cd, process_ts, creat_ts)
      SELECT /*+ PARALLEL (16) */
       cbu.clm_id, cbu.nch_clm_type_cd, NULL, SYSDATE --> leaving NULL to indicate to FHIR this is unprocessed
        FROM ccw_owner.ccw_clm_bene_updt cbu
       WHERE NOT EXISTS
       (SELECT /*+ PARALLEL (16) */
               fhir.clm_id
                FROM ccw_owner.fhir_clm_bene_updt fhir
               WHERE fhir.clm_id = cbu.clm_id
                 AND fhir.nch_clm_type_cd = cbu.nch_clm_type_cd);

    g_tot_rows := SQL%ROWCOUNT;

    COMMIT;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'fhir_edb_updt - Insert: ' ||
                                              g_tot_rows ||
                                              ' into fhir_clm_bene_updt');

    dbms_output.put_line('fhir_edb_updt - Insert: ' || g_tot_rows ||
                         ' into fhir_clm_bene_updt');

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_edb_updt - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_edb_updt Error: ');
      RAISE;

  END fhir_edb_updt;

  -----------------------------------------------------------------------
  -- Capturing the claims information to FHIR temp tables
  -- These procedures will be called during claims processing
  -----------------------------------------------------------------------

  PROCEDURE fhir_part_A_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE') 
   IS
    l_max_meta_dtl     ccw_owner.meta_prcsng_dtl.meta_prcsng_dtl_id%TYPE;
    l_last_pta_ld_desc ccw_owner.meta_prcsng_dtl.prd_name%TYPE;
    l_tot_rows         NUMBER := 0; 
    
  BEGIN
    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_A_CLMS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_A_clms - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    get_latest_load_desc(p_grp_type_nm    => 'CLAIMS_NEW',
                         p_grp_nm         => 'CLM LOAD TO CCW_NEW',
                         p_latest_ld_desc => l_last_pta_ld_desc);

    -- 3.20 - Clear out anything that already exists from this ld_desc
    DELETE /*+ PARALLEL (16) */ FROM ccw_owner.fhir_pta_clm_updt WHERE ccw_ld_desc = l_last_pta_ld_desc;
    COMMIT;

    l_tot_rows := 0; 
    
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_clm_updt
      (CLM_ID, FINL_ACTN_ID, PROC_NUM, CCW_LD_DESC)
      SELECT /*+ parallel (16) */
       CLM_ID, FINL_ACTN_ID, PROC_NUM, l_last_pta_ld_desc
        FROM ccw_owner.hld_pta_finl_actn_p p
       WHERE -- 3.22 - partition 99 holds only date updates.
          proc_num <> 99   
         AND 
          NOT EXISTS
       (SELECT /*+ parallel (16) */
               1
                FROM ccw_owner.fhir_pta_clm_updt a
               WHERE p.clm_id = a.clm_id
                 AND p.finl_actn_id = a.finl_actn_id
       )
       -- 12/01
       AND 
        NOT EXISTS 
        (SELECT /*+ parallel (16) */ 1 
           FROM ccw_owner.pta_fa_dup_hist dup  
          WHERE p.clm_id = dup.clm_id 
        );                 
    
    l_tot_rows := SQL%ROWCOUNT; 

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'fhir_part_A_clms - '||l_tot_rows||' update rows inserted');
                                     
    g_tot_rows := g_tot_rows + l_tot_rows;

    COMMIT;
    
    -- Capture records being cloned -- 
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_clm_updt
      (CLM_ID, FINL_ACTN_ID, PROC_NUM, CCW_LD_DESC)
    SELECT p.CLM_ID, f.finl_actn_id, p.proc_num, p.ccw_ld_desc   --, f.ccw_ld_Desc, stus.finl_actn_id 
      FROM ccw_owner.ccw_pta_fact f, ccw_owner.pta_fa_dup_hist p, ccw_owner.meta_prcsng_dtl det, ccw_owner.fhir_pta_ld_clm_status stus
     WHERE f.clm_id = p.clm_id                         -- linking fact to dupHistUpdt
       AND f.clm_thru_dt = p.clm_thru_dt               -- linking fact to dupHistUpdt
       AND det.prd_name = f.ccw_ld_desc                -- valid (loaded fact) ccw_ld_desc
       AND stus.clm_id = p.clm_id                      -- linking stus to dupHistUpdt
       AND stus.clm_thru_dt = p.clm_thru_dt            -- linking stus to dupHistUpdt
       AND f.finl_actn_id <> stus.finl_actn_id         -- don't need updates where stus and fact already the same
       AND NOT EXISTS                                  -- don't need this claim and fact FA if already in updtTable
       (SELECT /*+ parallel (16) */
               1
                FROM ccw_owner.fhir_pta_clm_updt a
               WHERE p.clm_id = a.clm_id
                 AND f.finl_Actn_id = a.finl_actn_id
       );   

    l_tot_rows := SQL%ROWCOUNT; 

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'fhir_part_A_clms - '||l_tot_rows||' cloneUpdt rows inserted');
                                     
    g_tot_rows := g_tot_rows + l_tot_rows;

    COMMIT;
    -- (END) Capture records being cloned -- 
    
    -- Insert a new partition record, for an unprocessed delta, based on currently
    -- loading claims partition
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.meta_prcsng_dtl
      (META_PRCSNG_DTL_ID,
       PRD_NAME,
       PRD_PRCSNG_IND,
       PRD_TYPE,
       PRD_RUN_TYPE)
      SELECT /*+ PARALLEL (16) */
       ccw_owner.meta_prcsng_dtl_sq.nextval, l_last_pta_ld_desc, 'N', 'CLAIMS', 'DELTA'
        FROM DUAL d
       WHERE NOT EXISTS (SELECT /*+ PARALLEL (16) */
               1
                FROM ccw_owner.meta_prcsng_dtl me
               WHERE me.prd_name = l_last_pta_ld_desc);
    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_A_clms - finished');
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_A_clms Error: ');
      RAISE;

  END fhir_part_A_clms;

  PROCEDURE fhir_part_B_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE') 
   IS
    l_max_meta_dtl     ccw_owner.meta_prcsng_dtl.meta_prcsng_dtl_id%TYPE;
    l_last_ptb_ld_desc ccw_owner.meta_prcsng_dtl.prd_name%TYPE;
  BEGIN
    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_B_CLMS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_B_clms - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- save the current ccw_load_desc from Part B if it is not
    get_latest_load_desc(p_grp_type_nm    => 'CLAIMS_NEW',
                         p_grp_nm         => 'CLM LOAD TO CCW_NEW',
                         p_latest_ld_desc => l_last_ptb_ld_desc);

    -- 3.20 - Clear out anything that already exists from this ld_desc
    DELETE /*+ PARALLEL (16) */ FROM ccw_owner.fhir_ptb_clm_updt WHERE ccw_ld_desc = l_last_ptb_ld_desc;
    COMMIT;


    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_ptb_clm_updt
      (CLM_ID, FINL_ACTN_ID, CLM_THRU_DT, CCW_LD_DESC)
      SELECT /*+ parallel (16) */
       CLM_ID
       , decode(FINL_ACTN_ID,'21', '22', '22', '21', FINL_ACTN_ID) FINL_ACTN_ID
       , CLM_THRU_DT
       , l_last_ptb_ld_desc
        FROM CCW_OWNER.HLD_PTB_FINL_ACTN_UPDT u
       WHERE updt_typ_cd in ('B', 'F')  -- 3.22 B= Both and F = Flag only.  
                                        -- We are excluding D that is Date only         
         AND NOT EXISTS
       (SELECT /*+ parallel (16) */
               1
                FROM ccw_owner.fhir_ptb_clm_updt b
               WHERE u.clm_id = b.clm_id
                 AND decode(u.FINL_ACTN_ID,'21', '22', '22', '21', u.FINL_ACTN_ID) = b.finl_actn_id);

    g_tot_rows := SQL%ROWCOUNT;

    COMMIT;

    -- Insert a new partition record, for an unprocessed delta, based on currently
    -- loading claims partition
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.meta_prcsng_dtl
      (META_PRCSNG_DTL_ID,
       PRD_NAME,
       PRD_PRCSNG_IND,
       PRD_TYPE,
       PRD_RUN_TYPE)
      SELECT /*+ PARALLEL (16) */
       ccw_owner.meta_prcsng_dtl_sq.nextval, l_last_ptb_ld_desc, 'N', 'CLAIMS', 'DELTA'
        FROM DUAL d
       WHERE NOT EXISTS (SELECT /*+ PARALLEL (16) */
               1
                FROM ccw_owner.meta_prcsng_dtl me
               WHERE me.prd_name = l_last_ptb_ld_desc);
    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_B_clms - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_B_clms Error: ');
      RAISE;

  END fhir_part_B_clms;

  PROCEDURE fhir_part_D_clms(pb_extrct_only VARCHAR2 DEFAULT 'TRUE') 
   IS
    l_max_meta_dtl     ccw_owner.meta_prcsng_dtl.meta_prcsng_dtl_id%TYPE;
    l_last_ptd_ld_desc ccw_owner.meta_prcsng_dtl.prd_name%TYPE;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_D_CLMS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_D_clms - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';


    -- save the current ccw_load_desc from Part A if it is not
    -- in the ccw_owner.meta_prcsng_dtl, as a DELTA partition

    get_latest_load_desc(p_grp_type_nm    => 'PTD PDE',
                         p_grp_nm         => 'PTD PDE LOAD TO CCW',
                         p_latest_ld_desc => l_last_ptd_ld_desc);

    --l_last_ptd_ld_desc := TO_DATE (l_last_ptd_ld_Desc, 'MONTH YYYY'); 
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'L_last_ptd_ld_desc = '||l_last_ptd_ld_Desc); 

    -- 3.20 - Clear out anything that already exists from this ld_desc
    DELETE /*+ PARALLEL (16) */ FROM ccw_owner.fhir_ptd_clm_updt WHERE ccw_ld_desc = l_last_ptd_ld_desc;
    COMMIT;

    INSERT /*+ append parallel (16) */
    INTO CCW_OWNER.FHIR_PTD_CLM_UPDT
      (PDE_ID
      , FINL_ACTN_ID 
      , PRD_NAME, CCW_LD_DESC)
      SELECT /*+ parallel (16) */
       pde_id
       , decode(FINL_ACTN_ID,'21', '22', '22', '21', FINL_ACTN_ID) FINL_ACTN_ID    --11/29
       , prtn_name, l_last_ptd_ld_desc
        FROM CCW_OWNER.CCW_PTD_PDE_FINL_ACTN_UPDT U
       WHERE -- 3.17 -- U.FINL_ACTN_ID = g_finl_actn_id AND
          NOT EXISTS (SELECT /*+ parallel (16) */
               1
                FROM CCW_OWNER.FHIR_PTD_CLM_UPDT A
               WHERE U.pde_id = A.pde_id
                 AND decode(u.FINL_ACTN_ID,'21', '22', '22', '21', u.FINL_ACTN_ID) = A.finl_actn_id --11/29
                 AND U.prtn_name = A.prd_name);

    g_tot_rows := SQL%ROWCOUNT;

    COMMIT;

    -- Insert a new partition record, for an unprocessed delta, based on currently
    -- loading claims partition
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.meta_prcsng_dtl
      (META_PRCSNG_DTL_ID,
       PRD_NAME,
       PRD_PRCSNG_IND,
       PRD_TYPE,
       PRD_RUN_TYPE)
      SELECT /*+ PARALLEL (16) */
       ccw_owner.meta_prcsng_dtl_sq.nextval, l_last_ptd_ld_desc,     -- previously bad format to match with ccw_load_desc in D fact
                'N', 'PDE', 'DELTA'
        FROM DUAL d
       WHERE NOT EXISTS (SELECT /*+ PARALLEL (16) */
               1
                FROM ccw_owner.meta_prcsng_dtl me
               WHERE me.prd_name = l_last_ptd_ld_desc);
    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_D_clms - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_D_clms Error: ');
      RAISE;
  END fhir_part_D_clms;

  -------------------------------------------------------------------------------------------------
  -- Clear FHIR staging table for EDB info
  PROCEDURE fhir_edb_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                         pb_truncate_tab VARCHAR2 DEFAULT 'FALSE') 
   IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_EDB_CLR',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_edb_clr - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    IF pb_truncate_tab = 'TRUE' THEN
      truncate_table('', 'FHIR_CLM_BENE_UPDT');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_edb_clr - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_edb_clr Error: ');
      RAISE;

  END fhir_edb_clr;

  -------------------------------------------------------------------------------------------------
  -- Clear FHIR staging table for Part A claims info
  PROCEDURE fhir_part_A_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE') 
   IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_A_CLR',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_A_clr - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    IF pb_truncate_tab = 'TRUE' THEN
      truncate_table('', 'FHIR_PTA_CLM_UPDT');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_A_clr - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_A_clr Error: ');
      RAISE;
  END fhir_part_A_clr;

  -- Clear FHIR staging table for Part B claims info
  PROCEDURE fhir_part_B_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE') 
   IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_B_CLR',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_B_clr - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    IF pb_truncate_tab = 'TRUE' THEN
      truncate_table('', 'FHIR_PTB_CLM_UPDT');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_B_clr - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_B_clr Error: ');
      RAISE;
  END fhir_part_B_clr;

  -- Clear FHIR staging table for Part D claims info
  PROCEDURE fhir_part_D_clr(pb_extrct_only  VARCHAR2 DEFAULT 'TRUE',
                            pb_truncate_tab VARCHAR2 DEFAULT 'FALSE') 
   IS
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.FHIR_PART_D_CLR',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_D_clr - started');
    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    IF pb_truncate_tab = 'TRUE' THEN
      truncate_table('', 'FHIR_PTD_CLM_UPDT');
    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'fhir_part_D_clr - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'FHIR_Part_D_clr Error: ');
      RAISE;
  END fhir_part_D_clr;

  -----------------------------------------------------------------------
  -- End of claims processing procedures
  -----------------------------------------------------------------------

  PROCEDURE extract_updates(p_part_num     VARCHAR2,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE',
                            pb_extrct_only VARCHAR2 DEFAULT 'FALSE') IS

    p_new_version BOOLEAN;
    p_extrct_only BOOLEAN;

    l_tot_rows NUMBER;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.EXTRACT_UPDATES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'U',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_updates - started');
    END IF;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';
    p_new_version := truefalsetoboolean(pb_new_version);
    p_extrct_only := truefalsetoboolean(pb_extrct_only);

    l_tot_rows := 0;

    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';
    dbms_application_info.set_client_info('extract_updates- PtA ');

    --Set separator if needed for the file name
    set_file_separator(p_part_num);

    --Declare file name and partition number to process
    g_utl_file := 'updPtA' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    --Get File Version Number
    get_file_version(p_new_version);

    IF g_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'UPD'
                       ORDER BY rec_order) LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record - PtA
      FOR updpta_rec IN (SELECT /*+ parallel (16) */
                          a.clm_id,
                          a.version,
                          a.dml_ind,
                          a.bene_id,
                          a.finl_actn_id,
                          a.ccw_ld_desc,
                          a.job_ld_dt,
                          a.proc_num,
                          a.clm_grp_id
                           FROM ccw_owner.fhir_pta_ld_clm_status a
                          WHERE a.dml_ind = 'UPDATE'
                            AND a.job_ld_dt IS NULL
                          ORDER BY version, bene_id, clm_id) LOOP
        utl_file.put_line(g_file,
                          updpta_rec.clm_grp_id || '|' || 
                          updpta_rec.version || '|' || updpta_rec.dml_ind || '|' ||
                          updpta_rec.bene_id || '|' ||
                          updpta_rec.finl_actn_id); 

        l_tot_rows := l_tot_rows + 1;

      END LOOP;

      utl_file.fclose(g_file);

    END IF; -- if g_output_data

    update_file_version(p_new_version);

    ---------------------------------------------------------------------------------------------
    -- Updates currently in separate files by Part - A,B, D
    ---------------------------------------------------------------------------------------------

    dbms_application_info.set_client_info('extract_updates- PtB ');

    -- Declare file name and partition number to process
    g_utl_file := 'updPtB' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    -- Get File Version Number
    get_file_version(p_new_version);

    IF g_output_data THEN

      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'UPD') LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record - PtB
      FOR updptb_rec IN (SELECT /*+ parallel (16) */
                          b.clm_id,
                          b.version,
                          b.dml_ind,
                          b.bene_id,
                          b.finl_actn_id,
                          b.ccw_ld_desc,
                          b.job_ld_dt,
                          b.proc_num,
                          b.clm_grp_id
                           FROM ccw_owner.fhir_ptb_ld_clm_status b
                          WHERE b.dml_ind = 'UPDATE'
                            AND b.job_ld_dt IS NULL
                          ORDER BY version, bene_id, clm_id) LOOP
        utl_file.put_line(g_file,
                          updptb_rec.clm_grp_id || '|' || 
                          updptb_rec.version || '|' || updptb_rec.dml_ind || '|' ||
                          updptb_rec.bene_id || '|' ||
                          updptb_rec.finl_actn_id); 

        l_tot_rows := l_tot_rows + 1;
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

    update_file_version(p_new_version);

    dbms_application_info.set_client_info('extract_updates- PtD ');

    -- Declare file name and partition number to process
    g_utl_file := 'updPtD' || g_separator || p_part_num || g_separator ||
                  delta_file_nm_dt || '.txt';

    -- Get File Version Number
    get_file_version(p_new_version);

    IF g_output_data THEN

      -- Header?
      g_file := utl_file.fopen(g_utl_file_dir, g_utl_file, 'w', 6000);

      --Write Header Record
      FOR hdr_rec IN (SELECT l.column_name
                        FROM ccw_owner.temp_rec_layout l
                       WHERE file_name = 'UPD') LOOP
        IF NOT g_first_column THEN
          utl_file.put(g_file, g_column_name || '|');
        ELSE
          g_first_column := FALSE;
        END IF;

        g_column_name := hdr_rec.column_name;
      END LOOP;

      utl_file.put_line(g_file, g_column_name);
      g_first_column := TRUE;

      --Write Detail Record - PtD
      FOR updptd_rec IN (SELECT /*+ parallel (16) */
                          d.pde_id,
                          d.version,
                          d.dml_ind,
                          d.bene_id,
                          d.finl_actn_id,
                          d.ccw_ld_desc,
                          d.job_ld_dt,
                          d.proc_num,
                          d.clm_grp_id
                           FROM ccw_owner.fhir_ptd_ld_clm_status d
                          WHERE d.dml_ind = 'UPDATE'
                            AND d.job_ld_dt IS NULL
                          ORDER BY version, bene_id, pde_id) LOOP
        utl_file.put_line(g_file,
                          updptd_rec.clm_grp_id || '|' || 
                          updptd_rec.version || '|' || updptd_rec.dml_ind || '|' ||
                          updptd_rec.bene_id || '|' ||
                          updptd_rec.finl_actn_id); 

        l_tot_rows := l_tot_rows + 1;
      END LOOP;

      utl_file.fclose(g_file);

    END IF;

    update_file_version(p_new_version);

    ---------------------------------------------------------------------------------------------
    -- Enrollment updates ?? - bene data !
    ---------------------------------------------------------------------------------------------

    g_tot_rows := g_tot_rows + l_tot_rows;

    --Create manifest file
    create_manifest_file('DNU', NULL, NULL);

    --Add file to manifest list
    update_manifest_file('updPtA' || g_separator || p_part_num ||
                         g_separator || delta_file_nm_dt || '.txt');
    update_manifest_file('updPtB' || g_separator || p_part_num ||
                         g_separator || delta_file_nm_dt || '.txt');
    update_manifest_file('updPtD' || g_separator || p_part_num ||
                         g_separator || delta_file_nm_dt || '.txt');

    --Add closing tag to the manifest file
    utl_file.put_line(g_manifest_file, '</dataSetManifest>');
    --Close the manifest file
    utl_file.fclose(g_manifest_file);

    --Create .done file to indicate to the file transfer script on the server
    --that the current file is ready to transfer
    create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
    --If this is called from load_all_tables the manifest file will be created
    --if we run extract bene by itself we need to create the manifest file
    IF p_extrct_only THEN

      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => l_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'extract_updates_changes - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'Extract_Updates Error: ');

      RAISE;
  END extract_updates;

  -- Load the initial loaded claim ids to the appropriate clm_status tables
  PROCEDURE ld_ld_clm_status(pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    l_cnt NUMBER := 0;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.LD_LD_CLM_STATUS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'ld_ld_clm_status - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('insert from temp_bcarrier');

    -- 3.12 - truncate before initial load --
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ld_ld_clm_status - truncating ld_clm_status tables - started');
    truncate_table(NULL, 'fhir_pta_ld_clm_status');
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ld_ld_clm_status - truncated fhir_pta_ld_clm_status');

    truncate_table(NULL, 'fhir_ptb_ld_clm_status');
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ld_ld_clm_status - truncated fhir_ptb_ld_clm_status');

    truncate_table(NULL, 'fhir_ptd_ld_clm_status');
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ld_ld_clm_status - truncated fhir_ptd_ld_clm_status');
    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'ld_ld_clm_status - truncating ld_clm_status tables - finished');

    SELECT COUNT(*) INTO l_cnt FROM CCW_OWNER.fhir_ptd_ld_clm_status;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'cnt: ' || l_cnt ||
                                              ' from fhir_ptd_ld_clm_status after truncation');

    -- bcarrier to ptb_ld_clm_status
    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_ptb_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc, 
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_BC'
      , t.clm_thru_dt         
      , t.nch_clm_type_cd      
        FROM ccw_owner.temp_bcarrier t,
             ccw_owner.temp_fhir_ptb_fact f   
   WHERE t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_dme');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_ptb_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc, 
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_DM'
      , t.clm_thru_dt        
      , t.nch_clm_type_cd      
        FROM ccw_owner.temp_dme t,
             ccw_owner.temp_fhir_ptb_fact f   
   WHERE t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_hha');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc, 
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_HH'
      , t.clm_thru_dt         
      , t.nch_clm_type_cd      
        FROM ccw_owner.temp_hha t,
             ccw_owner.temp_fhir_pta_fact f    
   WHERE t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_hospic');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc,
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_HS'
      , t.clm_thru_dt        
      , t.nch_clm_type_cd    
        FROM ccw_owner.temp_hospice t,
             ccw_owner.temp_fhir_pta_fact f  
   WHERE  t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_inpatient');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc, 
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_IN'
      , t.clm_thru_dt        
      , t.nch_clm_type_cd     
        FROM ccw_owner.temp_inpatient t,
             ccw_owner.temp_fhir_pta_fact f   
   WHERE t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_outpatient');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc,
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_OP'
      , t.clm_thru_dt          
      , t.nch_clm_type_cd     
        FROM ccw_owner.temp_outpatient t,
             ccw_owner.temp_fhir_pta_fact f    
   WHERE  t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_snf');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_pta_ld_clm_status
      (clm_id,  version,  dml_ind,  bene_id,  finl_actn_id,  ccw_ld_desc,  job_ld_dt,
proc_num,  clm_grp_id,  dml_status,
clm_thru_dt,
nch_clm_type_cd)
      SELECT /*+ parallel (16) */
       UNIQUE t.clm_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_ld_desc, 
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
      ,'LD_SN'
      , t.clm_thru_dt        
      , t.nch_clm_type_cd      
        FROM ccw_owner.temp_snf t,
             ccw_owner.temp_fhir_pta_fact f   
   WHERE t.clm_id = f.clm_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    dbms_application_info.set_client_info('insert from temp_pde');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.fhir_ptd_ld_clm_status
        (pde_id, version, dml_ind, bene_id, finl_actn_id, ccw_ld_desc,
        job_ld_dt,proc_num, clm_grp_id, dml_status,  srvc_dt
        )
      SELECT /*+ parallel (16) */
       UNIQUE t.pde_id,
       t.version,
       t.dml_ind,
       t.bene_id,
       21 /*Const or link from ccw_owner.ccw_finl_actn_prfl */,
       f.ccw_load_desc,  
       trunc(SYSDATE),
       t.bene_part_num,
       t.clm_grp_id
       ,'LD_PD'
       , t.srvc_dt
        FROM ccw_owner.temp_pde t
          , ccw_owner.ccw_pde_fact    f
     WHERE t.pde_id = f.pde_id;

    g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'ld_ld_clm_status - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'ld_ld_clm_status Error: ');

      RAISE;

  END ld_ld_clm_status;

  -- 3.20 -- Bene_ids for pt(abd)_ld_clm_status records inserted in updated_claims, up to this version,
  -- have NULL bene_ids as this field was not in the INSERT/SELECT. That is corrected in 3.20, this
  -- procedure will be added to log (clm_ids) and correct any NULL bene_id found in the pt(abd)_ld_clm_status
  -- tables
  -- NOTE: Delta has not run on PROD, no NULL bene_id's noted (7/27/17)
  --
  PROCEDURE update_NULL_bene_ids (pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_apex_log_info IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_pta       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptb       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptd       IN VARCHAR2 DEFAULT 'TRUE')
  IS
     NULL_bene_file  utl_file.file_type;
     a_bene_cnt      NUMBER := 0;
     b_bene_cnt      NUMBER := 0;
     d_bene_cnt      NUMBER := 0;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.UPDATE_NULL_BENE_IDS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_NULL_bene_ids - started');
    END IF;

    -- 3.21
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    --------------------------------------------------------------------------------------------------
    -- Handle PartA --
    --------------------------------------------------------------------------------------------------
    IF pb_run_pta = 'TRUE' THEN

      -- PRE-fix --
      NULL_bene_file := utl_file.fopen(g_utl_file_dir, 'NULL_beneA_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_bene_file, 'CLM_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullBene IN ( SELECT /*+ parallel(16) */ ps.clm_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_pta_ld_clm_status ps
                         WHERE ps.bene_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_bene_file, nullBene.CLM_ID||'|'||
                                      nullBene.DML_IND||'|'||nullBene.BENE_ID||'|'||
                                      nullBene.PS_FINL_ACTN_ID||'|'||nullBene.CCW_LD_DESC||'|'||
                                      nullBene.JOB_LD_DT||'|'||nullBene.PROC_NUM||'|'||nullBene.CLM_GRP_ID||'|'||
                                      nullBene.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL bene_id for clm_id (A): '||nullBene.CLM_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_bene_file);


      -- Execute Fix
      UPDATE /*+ parallel */  ccw_owner.fhir_pta_ld_clm_status pta
         SET pta.bene_id = ( SELECT /*+ parallel */ bene_id FROM ccw_owner.ccw_pta_fact f where f.clm_id = pta.clm_id )
            , job_Ld_dt = NULL
       WHERE pta.bene_id IS NULL;

      COMMIT;    -- 3.21

      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO a_bene_cnt
        FROM ccw_owner.fhir_pta_ld_clm_status ps
       WHERE ps.bene_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL bene_id cnt-A for clm_id after fix: '||a_bene_cnt);

    END IF;
    --------------------------------------------------------------------------------------------------
    -- Handle PartB--
    --------------------------------------------------------------------------------------------------
    IF pb_run_ptb = 'TRUE' THEN

      -- PRE-fix --
      NULL_bene_file := utl_file.fopen(g_utl_file_dir, 'NULL_beneB_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_bene_file, 'CLM_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullBene IN ( SELECT /*+ parallel(16) */ ps.clm_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_ptb_ld_clm_status ps
                         WHERE ps.bene_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_bene_file, nullBene.CLM_ID||'|'||
                                      nullBene.DML_IND||'|'||nullBene.BENE_ID||'|'||
                                      nullBene.PS_FINL_ACTN_ID||'|'||nullBene.CCW_LD_DESC||'|'||
                                      nullBene.JOB_LD_DT||'|'||nullBene.PROC_NUM||'|'||nullBene.CLM_GRP_ID||'|'||
                                      nullBene.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL bene_id for clm_id (B): '||nullBene.CLM_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_bene_file);

      -- Execute Fix
      UPDATE /*+ parallel */  ccw_owner.fhir_ptb_ld_clm_status ptb
         SET ptb.bene_id = ( SELECT /*+ parallel */ bene_id FROM ccw_owner.ccw_ptb_fact f where f.clm_id = ptb.clm_id )
           , job_Ld_dt = NULL
       WHERE ptb.bene_id IS NULL;

      COMMIT;    -- 3.21

      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO b_bene_cnt
        FROM ccw_owner.fhir_ptb_ld_clm_status ps
       WHERE ps.bene_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL bene_id cnt-B for clm_id after fix: '||b_bene_cnt);
    END IF;
    --------------------------------------------------------------------------------------------------
    -- Handle PartD --
    --------------------------------------------------------------------------------------------------
    IF pb_run_ptd = 'TRUE' THEN

      -- PRE-fix --
      NULL_bene_file := utl_file.fopen(g_utl_file_dir, 'NULL_beneD_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_bene_file, 'PDE_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullBene IN ( SELECT /*+ parallel(16) */ ps.pde_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_ptd_ld_clm_status ps
                         WHERE ps.bene_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_bene_file, nullBene.PDE_ID||'|'||
                                      nullBene.DML_IND||'|'||nullBene.BENE_ID||'|'||
                                      nullBene.PS_FINL_ACTN_ID||'|'||nullBene.CCW_LD_DESC||'|'||
                                      nullBene.JOB_LD_DT||'|'||nullBene.PROC_NUM||'|'||nullBene.CLM_GRP_ID||'|'||
                                      nullBene.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL bene_id for pde_id (D): '||nullBene.PDE_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_bene_file);

      -- Execute Fix
      UPDATE /*+ parallel */  ccw_owner.fhir_ptd_ld_clm_status ptd
         SET ptd.bene_id = ( SELECT /*+ parallel */ bene_id FROM ccw_owner.ccw_pde_fact f where f.pde_id = ptd.pde_id )
           , job_Ld_dt = NULL
       WHERE ptd.bene_id IS NULL;

      COMMIT;    -- 3.21

      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO d_bene_cnt
        FROM ccw_owner.fhir_ptd_ld_clm_status ps
       WHERE ps.bene_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL bene_id cnt-D for clm_id after fix: '||d_bene_cnt);
    END IF;
    --------------------------------------------------------------------------------------------------

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_NULL_bene_ids - finished');
    END IF;
    --------------------------------------------------------------------------------------------------
  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'update_NULL_bene_ids Error: ');
      RAISE;

  END update_NULL_bene_ids;

  -- 3.20 -- CLM_GRP_ids for pt(abd)_ld_clm_status records inserted in updated_claims, up to this version,
  -- have NULL clm_grp_ids That is corrected in 3.20, this procedure will be added to log (clm_ids) and correct
  -- any NULL clm_grp_id found in the pt(abd)_ld_clm_status tables
  --
  -- NOTE: Delta has not run on PROD, no NULL bene_id's noted (7/27/17)
  --
  PROCEDURE update_NULL_clm_grp_ids (pb_extrct_only   IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_apex_log_info IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_pta       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptb       IN VARCHAR2 DEFAULT 'TRUE'
                                , pb_run_ptd       IN VARCHAR2 DEFAULT 'TRUE')
  IS
     NULL_clm_file  utl_file.file_type;
     a_clm_cnt      NUMBER := 0;
     b_clm_cnt      NUMBER := 0;
     d_clm_cnt      NUMBER := 0;
  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.UPDATE_NULL_CLM_GRP_IDS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);

    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_NULL_clm_grp_ids - started');
    END IF;

    --3.21
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    --------------------------------------------------------------------------------------------------
    -- Handle PartA --
    --------------------------------------------------------------------------------------------------
    IF pb_run_pta = 'TRUE' THEN

      -- PRE-fix --
      NULL_clm_file := utl_file.fopen(g_utl_file_dir, 'NULL_clmGrpIdA_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_clm_file, 'CLM_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullClm IN ( SELECT /*+ parallel(16) */ ps.clm_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_pta_ld_clm_status ps
                         WHERE ps.clm_grp_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_clm_file, nullClm.CLM_ID||'|'||
                                      nullClm.DML_IND||'|'||nullClm.BENE_ID||'|'||
                                      nullClm.PS_FINL_ACTN_ID||'|'||nullClm.CCW_LD_DESC||'|'||
                                      nullClm.JOB_LD_DT||'|'||nullClm.PROC_NUM||'|'||nullClm.CLM_GRP_ID||'|'||
                                      nullClm.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL clm_grp_id for clm_id (A): '||nullClm.CLM_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_clm_file);


      -- Execute Fix
UPDATE /*+ PARALLEL (16) */ ccw_owner.fhir_pta_ld_clm_status pta
   SET pta.clm_grp_id = ( SELECT /*+ PARALLEL (16) */  pg.CLM_GRP_ID
                            FROM ccw_owner.ccw_pta_fact f
                               , ccw_owner.meta_prcsng_dtl        pd
                               , ccw_owner.fhir_pta_ld_clm_status l_pta
                , ccw_owner.fhir_pta_clm_grp         pg
                , ccw_owner.ccw_prvdr_at_time_of_clm pr
                , ccw_owner.ccw_all_clm_prfl         acp
           WHERE f.ccw_ld_desc = pd.prd_name 
             AND pd.prd_type = 'CLAIMS'
             AND acp.nch_clm_type_cd IN ('10',
                                         '50',
                                         '60',
                                         '61',
                                         '62',
                                         '40',
                                         '41',
                                         '42',
                                         '20',
                                         '30')
             AND f.prvdr_at_time_of_clm_id = pr.prvdr_id 
             AND acp.clm_type_id = f.clm_type_id
             AND pg.prvdr_num(+) = pr.prvdr_num
             AND pg.clm_thru_dt(+) = f.clm_thru_dt
             AND pg.clm_from_dt(+) = f.clm_from_dt
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd
             AND pg.nch_clm_type_cd(+) = acp.nch_clm_type_cd
             AND l_pta.clm_id = f.clm_id
            AND l_pta.clm_id = pta.clm_id
             AND f.clm_id = pta.clm_Id
                )
             WHERE pta.clm_grp_id IS NULL;

      COMMIT;    -- 3.21

      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO a_clm_cnt
        FROM ccw_owner.fhir_pta_ld_clm_status ps
       WHERE ps.clm_grp_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL clm_grp_id cnt-A for clm_id after fix: '||a_clm_cnt);

    END IF;
    --------------------------------------------------------------------------------------------------
    -- Handle PartB--
    --------------------------------------------------------------------------------------------------
    IF pb_run_ptb = 'TRUE' THEN

      -- PRE-fix --
      NULL_clm_file := utl_file.fopen(g_utl_file_dir, 'NULL_clmGrpIdB_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_clm_file, 'CLM_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullClm IN ( SELECT /*+ parallel(16) */ ps.clm_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_ptb_ld_clm_status ps
                         WHERE ps.clm_grp_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_clm_file, nullClm.CLM_ID||'|'||
                                      nullClm.DML_IND||'|'||nullClm.BENE_ID||'|'||
                                      nullClm.PS_FINL_ACTN_ID||'|'||nullClm.CCW_LD_DESC||'|'||
                                      nullClm.JOB_LD_DT||'|'||nullClm.PROC_NUM||'|'||nullClm.CLM_GRP_ID||'|'||
                                      nullClm.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL clm_grp_id for clm_id (B): '||nullClm.CLM_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_clm_file);

      -- Execute Fix
UPDATE /*+ PARALLEL (16) */ ccw_owner.fhir_ptb_ld_clm_status ptb
   SET ptb.clm_grp_id = ( SELECT /*+ PARALLEL (16) */  pg.CLM_GRP_ID
                            FROM ccw_owner.ccw_ptb_fact        f
                               , ccw_owner.fhir_ptb_ld_clm_status l_ptb
                               , ccw_owner.fhir_ptb_clm_grp pg
                               ,  ccw_owner.ccw_all_clm_prfl acp
                               , ccw_owner.meta_prcsng_dtl pd
           WHERE f.ccw_ld_desc = pd.prd_name 
             AND f.clm_thru_dt BETWEEN nvl('', f.clm_thru_dt) AND
                 nvl('', f.clm_thru_dt)
             AND substr(f.bene_id, length(f.bene_id), 1) =
                 nvl('', substr(f.bene_id, length(f.bene_id), 1))
             AND pd.prd_type = 'CLAIMS'
             AND acp.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
             AND acp.clm_type_id = f.clm_type_id
             AND pg.bene_clm_acnt_num(+) = f.bene_clm_acnt_num
             AND pg.eqtbl_bic_cd(+) = acp.eqtbl_bic_cd 
             AND pg.carr_clm_cntl_num(+) = f.carr_clm_cntl_num
             AND l_ptb.clm_id  = f.clm_id
            AND l_ptb.clm_id = ptb.clm_id
             AND f.clm_id = ptb.clm_Id
                    )
             WHERE ptb.clm_grp_id IS NULL;

      COMMIT;    -- 3.21

      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO b_clm_cnt
        FROM ccw_owner.fhir_ptb_ld_clm_status ps
       WHERE ps.clm_grp_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL clm_grp_id cnt-B for clm_id after fix: '||b_clm_cnt);
    END IF;
    --------------------------------------------------------------------------------------------------
    -- Handle PartD --
    --------------------------------------------------------------------------------------------------
    IF pb_run_ptd = 'TRUE' THEN

      -- PRE-fix --
      NULL_clm_file := utl_file.fopen(g_utl_file_dir, 'NULL_clmGrpIdD_toFIX.txt', 'w', 6000);
      -- header --
      utl_file.put_line(NULL_clm_file, 'PDE_ID'||'|'||'DML_IND'||'|'||'BENE_ID'||'|'||
                                        'LD FINL_ACTN_ID'||'|'||'CCW_LD_DESC'||'|'||
                                        'JOB_LD_DT'||'|'||'PROC_NUM'||'|'||'CLM_GRP_ID'||'DML_STATUS');

      FOR nullClm IN ( SELECT /*+ parallel(16) */ ps.pde_id, ps.version, ps.dml_ind, ps.bene_id
                                                 , ps.finl_actn_id ps_finl_actn_id, ps.ccw_ld_desc
                                                 , ps.job_ld_dt, ps.proc_num, ps.clm_grp_id, ps.dml_status
                          FROM ccw_owner.fhir_ptd_ld_clm_status ps
                         WHERE ps.clm_grp_ID IS NULL
                    )
      LOOP
        -- data --
        utl_file.put_line(NULL_clm_file, nullClm.PDE_ID||'|'||
                                      nullClm.DML_IND||'|'||nullClm.BENE_ID||'|'||
                                      nullClm.PS_FINL_ACTN_ID||'|'||nullClm.CCW_LD_DESC||'|'||
                                      nullClm.JOB_LD_DT||'|'||nullClm.PROC_NUM||'|'||nullClm.CLM_GRP_ID||'|'||
                                      nullClm.DML_STATUS);
        IF pb_apex_log_info = 'TRUE' THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'NULL clm_grp_id for pde_id (D): '||nullClm.PDE_ID||' will update');
        END IF;

      END LOOP;

      utl_file.fclose(NULL_clm_file);

      -- Execute Fix


      -- Are there any left?
      SELECT /*+ parallel (16) */ COUNT(*)
        INTO d_clm_cnt
        FROM ccw_owner.fhir_ptd_ld_clm_status ps
       WHERE ps.clm_grp_ID IS NULL;

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                   p_err_info  => 'NULL clm_Grp_id cnt-D for clm_id after fix: '||d_clm_cnt);
    END IF;
    --------------------------------------------------------------------------------------------------

    COMMIT;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'update_NULL_clm_grp_ids - finished');
    END IF;
    --------------------------------------------------------------------------------------------------
  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'update_NULL_clm_grp_ids Error: ');


      RAISE;

  END update_NULL_clm_grp_ids;

  -----------------------------------------------------------------------------------
  -- 3.21 - ERROR if duplicate claim IDs are found in one of the FHIR_PT(ABD)_LD_CLM_STATUS tables
  -----------------------------------------------------------------------------------
  PROCEDURE chk_dup_FHIR_clm_ids (pb_run_pta     IN VARCHAR2,
                                  pb_run_ptb     IN VARCHAR2,
                                  pb_run_ptd     IN VARCHAR2,
                                  pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE')
  IS
    p_run_pta BOOLEAN;
    p_run_ptb BOOLEAN;
    p_run_ptd BOOLEAN;

    l_tot_rows NUMBER;
    l_partErr_Log_Cnt NUMBER := 20;   -- Only log the 1st "#" errors for each part. So the log
                                      -- messages are visible
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.CHK_DUP_FHIR_CLM_IDS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'chk_dup_FHIR_clm_ids - started');

    END IF;

    p_run_pta := truefalsetoboolean(pb_run_pta);
    p_run_ptb := truefalsetoboolean(pb_run_ptb);
    p_run_ptd := truefalsetoboolean(pb_run_ptd);

    l_tot_rows := 0;
    IF p_run_pta THEN
      FOR dupClm IN ( SELECT /*+ PARALLEL */ COUNT(*) clm_cnt, clm_id
                        FROM ccw_owner.fhir_pta_ld_clm_status
                    GROUP BY clm_id HAVING COUNT (*) > 1
                    )
      LOOP
        IF l_tot_rows < l_partErr_Log_Cnt THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Duplicate Part A claimID in FHIR_PTA_ld_clm_status: '
                                        ||dupClm.clm_id||'. Found '||dupClm.clm_cnt||' instances. ');
        END IF;

        l_tot_rows := l_tot_rows + 1;
      END LOOP;

      IF l_tot_rows > 0
      THEN
         sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                    p_err_info  => 'Duplicate Part A claimIDs in FHIR_PTA_ld_clm_status: '
                                     ||'. Found '||l_tot_rows||' instances of duplicates. Exiting...');

         RAISE g_DUPLICATE_CLAIM_ERROR;
      END IF;
    END IF;  -- if p_run_pta

    l_tot_rows := 0;
    IF p_run_ptb THEN
      FOR dupClm IN ( SELECT /*+ PARALLEL */ COUNT(*) clm_cnt, clm_id
                        FROM ccw_owner.fhir_ptb_ld_clm_status
                    GROUP BY clm_id HAVING COUNT (*) > 1
                    )
      LOOP
        IF l_tot_rows < l_partErr_Log_Cnt THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Duplicate Part B claimID in FHIR_PTB_ld_clm_status: '
                                        ||dupClm.clm_id||'. Found '||dupClm.clm_cnt||' instances. ');
        END IF;

        l_tot_rows := l_tot_rows + 1;
      END LOOP;

      IF l_tot_rows > 0
      THEN
         sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                    p_err_info  => 'Duplicate Part B claimIDs in FHIR_PTB_ld_clm_status: '
                                     ||'. Found '||l_tot_rows||' instances of duplicates. Exiting...');

         RAISE g_DUPLICATE_CLAIM_ERROR;
      END IF;
    END IF;   -- if p_run_ptb

    l_tot_rows := 0;
    IF p_run_ptd THEN
      FOR dupClm IN ( SELECT /*+ PARALLEL */ COUNT(*) pde_cnt, pde_id
                        FROM ccw_owner.fhir_ptd_ld_clm_status
                    GROUP BY pde_id HAVING COUNT (*) > 1
                    )
      LOOP
        IF l_tot_rows < l_partErr_Log_Cnt THEN
          sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                     p_err_info  => 'Duplicate Part D pdeID in FHIR_PTD_ld_clm_status: '
                                        ||dupClm.pde_id||'. Found '||dupClm.pde_cnt||' instances. ');
        END IF;

        l_tot_rows := l_tot_rows + 1;
      END LOOP;

      IF l_tot_rows > 0
      THEN
         sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                    p_err_info  => 'Duplicate Part D pdeIDs in FHIR_PTD_ld_clm_status: '
                                     ||'. Found '||l_tot_rows||' instances of duplicates. Exiting...');

         RAISE g_DUPLICATE_CLAIM_ERROR;
      END IF;
    END IF;  -- if p_run_ptd

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'chk_dup_FHIR_clm_ids - finished');
    END IF;

  ---------
  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'chk_dup_FHIR_clm_ids Error: ');

      RAISE;
  END chk_dup_FHIR_clm_ids;

  -----------------------------------------------------------------------------------
  PROCEDURE updatefhir_ld_clm_status(pb_run_pta     IN VARCHAR2,
                                     pb_run_ptb     IN VARCHAR2,
                                     pb_run_ptd     IN VARCHAR2,
                                     pb_extrct_only IN VARCHAR2 DEFAULT 'TRUE') IS

    p_run_pta BOOLEAN;
    p_run_ptb BOOLEAN;
    p_run_ptd BOOLEAN;

    l_tot_rows NUMBER;
    l_rc NUMBER := 0; 
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.UPDATEFHIR_LD_CLM_STATUS',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status - started');

    END IF;

    p_run_pta := truefalsetoboolean(pb_run_pta);
    p_run_ptb := truefalsetoboolean(pb_run_ptb);
    p_run_ptd := truefalsetoboolean(pb_run_ptd);

    l_tot_rows := 0;

    IF p_run_pta THEN

     truncate_table ('', 'FHIR_PTA_LD_CLM_STATUS_UPDT'); -- clear existing recs from temp table;
     -- Pending - new temp "STUS_UPDT" table
     INSERT /*+ append parallel (16) */ INTO CCW_OWNER.FHIR_PTA_LD_CLM_STATUS_UPDT  
     (clm_id, 
      version, 
      dml_ind, 
      bene_id, 
      finl_actn_id, 
      ccw_ld_desc, 
      job_ld_dt, 
      proc_num, 
      clm_grp_id, 
      dml_status, 
      nch_clm_type_cd, 
      clm_thru_dt
      )
      SELECT /* parallel (16) */ clm_id, 
            version, 
            dml_ind, 
            bene_id, 
            finl_actn_id, 
            ccw_ld_desc, 
            TRUNC(SYSDATE),     -- will be populated to "close" these records 
            proc_num, 
            clm_grp_id, 
            dml_status, 
            nch_clm_type_cd, 
            clm_thru_dt
      FROM CCW_OWNER.FHIR_PTA_LD_CLM_STATUS
      WHERE JOB_LD_DT IS NULL; 

      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(A) - updt: '
                                    ||l_rc||' rows');
                                 
      COMMIT; 
      
      -- remove the inserted above records from STUS 
      DELETE /* parallel (16) */ FROM CCW_OWNER.FHIR_PTA_LD_CLM_STATUS 
       WHERE job_ld_dt IS NULL;
 
      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(A) - del: '
                                    ||l_rc||' rows');
      
      COMMIT; 
      
      -- replace the inserted above records, back into STUS with CLOSED status 
      INSERT /*+ append parallel (16) */ INTO CCW_OWNER.FHIR_PTA_LD_CLM_STATUS 
          ( 
          clm_id, 
          version, 
          dml_ind, 
          bene_id, 
          finl_actn_id, 
          ccw_ld_desc, 
          job_ld_dt, 
          proc_num, 
          clm_grp_id, 
          dml_status, 
          clm_thru_dt, 
          nch_clm_type_cd
          )
         SELECT clm_id, 
          version, 
          dml_ind, 
          bene_id, 
          finl_actn_id, 
          ccw_ld_desc, 
          job_ld_dt, 
          proc_num, 
          clm_grp_id, 
          dml_status, 
          clm_thru_dt, 
          nch_clm_type_cd
         FROM CCW_OWNER.FHIR_PTA_LD_CLM_STATUS_UPDT;
      
      l_rc := SQL%ROWCOUNT; 
      l_tot_rows := l_tot_rows + l_rc;
      
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(A) - ins: '
                                    ||l_rc||' rows');
      COMMIT;    -- 3.21

    END IF;

    IF p_run_ptb THEN
      
     truncate_table ('', 'FHIR_PTB_LD_CLM_STATUS_UPDT'); -- clear existing recs from temp table;
     -- Pending - new temp "STUS_UPDT" table
     INSERT /*+ append parallel (16) */ INTO CCW_OWNER.FHIR_PTB_LD_CLM_STATUS_UPDT  
     (clm_id, 
      version, 
      dml_ind, 
      bene_id, 
      finl_actn_id, 
      ccw_ld_desc, 
      job_ld_dt, 
      proc_num, 
      clm_grp_id, 
      dml_status, 
      nch_clm_type_cd, 
      clm_thru_dt
      )
      SELECT /* parallel (16) */ clm_id, 
            version, 
            dml_ind, 
            bene_id, 
            finl_actn_id, 
            ccw_ld_desc, 
            TRUNC(SYSDATE),     -- will be populated to "close" these records 
            proc_num, 
            clm_grp_id, 
            dml_status, 
            nch_clm_type_cd, 
            clm_thru_dt
      FROM CCW_OWNER.FHIR_PTB_LD_CLM_STATUS
      WHERE JOB_LD_DT IS NULL; 

      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(B) - updt: '
                                    ||l_rc||' rows');
      
      COMMIT; 
      
      -- remove the inserted above records from STUS 
      DELETE /* parallel (16) */ FROM CCW_OWNER.FHIR_PTB_LD_CLM_STATUS 
       WHERE job_ld_dt IS NULL;

      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(B) - del: '
                                    ||l_rc||' rows');
      
      COMMIT; 
      
      -- replace the inserted above records, back into STUS with CLOSED status 
      INSERT /*+ append parallel (16) */ 
        INTO CCW_OWNER.FHIR_PTB_LD_CLM_STATUS 
          (
          clm_id, 
          version, 
          dml_ind, 
          bene_id, 
          finl_actn_id, 
          ccw_ld_desc, 
          job_ld_dt, 
          proc_num, 
          clm_grp_id, 
          dml_status, 
          clm_thru_dt, 
          nch_clm_type_cd
          )
      SELECT clm_id, 
              version, 
              dml_ind, 
              bene_id, 
              finl_actn_id, 
              ccw_ld_desc, 
              job_ld_dt, 
              proc_num, 
              clm_grp_id, 
              dml_status, 
              clm_thru_dt, 
              nch_clm_type_cd
      FROM CCW_OWNER.FHIR_PTB_LD_CLM_STATUS_UPDT;
      
      l_rc := SQL%ROWCOUNT; 
      l_tot_rows := l_tot_rows + l_rc;
      
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(B) - ins: '
                                    ||l_rc||' rows');

      COMMIT;    

    END IF;

    IF p_run_ptd THEN

     truncate_table ('', 'FHIR_PTD_LD_CLM_STATUS_UPDT'); -- clear existing recs from temp table;
     -- Pending - new temp "STUS_UPDT" table
     INSERT /*+ append parallel (16) */ INTO CCW_OWNER.FHIR_PTD_LD_CLM_STATUS_UPDT  
     (pde_id, 
      version, 
      dml_ind, 
      bene_id, 
      finl_actn_id, 
      ccw_ld_desc, 
      job_ld_dt, 
      proc_num, 
      clm_grp_id, 
      dml_status, 
      srvc_dt
      )
      SELECT /* parallel (16) */ pde_id, 
        version, 
        dml_ind, 
        bene_id, 
        finl_actn_id, 
        ccw_ld_desc, 
        TRUNC(SYSDATE),     -- will be populated to "close" these records 
        proc_num, 
        clm_grp_id, 
        dml_status, 
        srvc_dt
      FROM CCW_OWNER.FHIR_PTD_LD_CLM_STATUS
      WHERE JOB_LD_DT IS NULL; 

      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(D) - updt: '
                                    ||l_rc||' rows');
      
      COMMIT; 
      
      -- remove the inserted above records from STUS 
      DELETE /* parallel (16) */ FROM CCW_OWNER.FHIR_PTD_LD_CLM_STATUS 
       WHERE job_ld_dt IS NULL;

      l_rc := SQL%ROWCOUNT; 
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(D) - del: '
                                    ||l_rc||' rows');
      
      COMMIT; 
      
      -- replace the inserted above records, back into STUS with CLOSED status 
      INSERT /*+ append parallel (16) */ 
        INTO CCW_OWNER.FHIR_PTD_LD_CLM_STATUS 
          (
            pde_id, 
            version, 
            dml_ind, 
            bene_id, 
            finl_actn_id, 
            ccw_ld_desc, 
            job_ld_dt, 
            proc_num, 
            clm_grp_id, 
            dml_status, 
            srvc_dt
          )
      SELECT pde_id, 
          version, 
          dml_ind, 
          bene_id, 
          finl_actn_id, 
          ccw_ld_desc, 
          job_ld_dt, 
          proc_num, 
          clm_grp_id, 
          dml_status, 
          srvc_dt
      FROM CCW_OWNER.FHIR_PTD_LD_CLM_STATUS_UPDT;

      l_rc := SQL%ROWCOUNT; 
      l_tot_rows := l_tot_rows + l_rc;
      
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status(D) - ins: '
                                    ||l_rc||' rows');
      COMMIT;        

    END IF;   -- END part D

    g_tot_rows := g_tot_rows + l_tot_rows;

    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => l_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'updateFHIR_ld_clm_status - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'updateFHIR_ld_clm_status Error: ');

      RAISE;
  END updatefhir_ld_clm_status;

  PROCEDURE load_sample_tables IS
  BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('load_sample_tables ()');

    truncate_table(NULL, 'temp_fhir_ptb_line_fact');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_fhir_ptb_line_fact
      SELECT /*+ parallel (16) */
       clm_id,
       line_num,
       ptb.bene_id,
       ptb.carr_uf_id,
       ptb.clm_type_id,
       hcpcs_id,
       othr_flds_clm_id,
       othr_fld_clms_dtl_id,
       physn_at_time_of_clm_id,
       rfrng_ordrg_physn_id,
       clm_from_dt,
       clm_thru_dt,
       nch_wkly_proc_dt,
       cwf_clm_acrtn_dt,
       prvdr_at_time_of_clm_id,
       mdfr_prfl_id,
       line_1st_expns_dt,
       line_last_expns_dt,
       finl_actn_id,
       carr_line_mtus_cnt,
       dmerc_line_mtus_cnt,
       line_srvc_cnt,
       carr_line_prfrmng,
       dmerc_line_scrn_svgs_amt,
       line_alowd_chrg_amt,
       line_bene_pmt_amt,
       line_bene_ptb_ddctbl_amt,
       line_bene_prmry_pyr_pd_amt,
       line_coinsrnc_amt,
       line_dme_prchs_price_amt,
       line_nch_pmt_amt,
       line_prmry_alowd_chrg_amt,
       line_prvdr_pmt_amt,
       line_sbmtd_chrg_amt,
       bene_clm_acnt_num,
       carr_num,
       ndc_cd,
       run_dt,
       link_num,
       cwf_clm_acrtn_num,
       carr_clm_rfrng_pin_num,
       carr_prfrng_pin_num,
       carr_clm_cntl_num,
       carr_clm_rcpt_dt,
       carr_line_rx_num,
       ccw_ld_desc,
       line_hct_hgb_type_cd,
       line_hct_hgb_rslt_num,
       line_dgns_cd,
       line_dgns_vrsn_cd,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       saf_finl_actn_id,
       carr_line_clia_lab_num,
       carr_line_ansthsa_unit_cnt,
       line_pwk_cd,
       line_pmd_uniq_trkng_num,
       fraud_line_prvnttv_sys_id,
       clm_line_thrpy_cap_ind_id,
       clm_line_othr_apld_ind_id,
       line_othr_apld_1_amt,
       line_othr_apld_2_amt,
       line_othr_apld_3_amt,
       line_othr_apld_4_amt,
       line_othr_apld_5_amt,
       line_othr_apld_6_amt,
       line_othr_apld_7_amt,
       clm_line_pos_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       line_point_of_pckp_zip_id,
       line_drop_off_zip_id,
       clm_dmerc_cd_id,
       clm_line_misc_cd_id,
       line_intrst_amt,
       line_10_pct_pnlty_rdctn_amt,
       carr_line_psych_ot_pt_lmt_amt,
       line_blood_ddctbl_pnts_qty_num,
       carr_line_cl_chrg_amt,
       carr_line_dme_cvrg_prd_strt_dt,
       line_dme_mdcl_ncsty_mo_cnt_num,
       dmerc_line_noc_hcpcs_cd_txt,
       line_cba_dt,
       clm_next_gnrtn_aco_ind_cd_id,
       --------------
       fb.bene_id new_bene_id,
       fb.key,
       substr(ptb.bene_id, length(ptb.bene_id), 1) bene_part_num,
       prfl.nch_clm_type_cd,
       prfl.nch_near_line_rec_ident_cd ,
       efctv_bgn_dt,
       efctv_end_dt,
       old_finl_actn_id,
       old_saf_finl_actn_id
        FROM ccw_owner.ccw_ptb_line_fact ptb,
             ccw_owner.ccw_all_clm_prfl     prfl,
             ccw_owner.temp_fhir_bene       fb,
             ccw_owner.meta_prcsng_dtl      pd
       WHERE ptb.bene_id = fb.key
         AND ptb.clm_type_id = prfl.clm_type_id
         AND ptb.ccw_ld_desc = pd.prd_name
         AND pd.prd_type = 'CLAIMS'
         AND pd.prd_prcsng_ind = 'N'
         AND ptb.finl_actn_id = 21
         AND ptb.bene_id <> -1
         AND ptb.clm_thru_dt >= g_3_yr_dt;

    COMMIT;

    dbms_application_info.set_client_info('ptaLine - load_sample_tables ()');

    truncate_table(NULL, 'temp_fhir_pta_rev_line_fact');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_fhir_pta_rev_line_fact
      SELECT /*+ parallel (16) */
       clm_id,
       clm_line_num,
       pta.clm_type_id,
       drg_id,
       hcpcs_id,
       ip_snf_clm_fields_id,
       isohh_clm_fields_id,
       prvdr_id,
       rev_prfl_id,
       rev_cntr_id,
       rev_cntr_dt,
       rev_cntr_apc_id,
       pta.prvdr_at_time_of_clm_id a_patoci,
       pta.bene_id,
       ansi_prfl_id,
       mdfr_prfl_id,
       physn_at_time_of_clm_id,
       rev_cntr_ide_ndc_upc_num,
       rev_cntr_unit_cnt,
       rev_cntr_ptnt_rspnsblty_pmt,
       rev_cntr_1st_msp_pd_amt,
       rev_cntr_2nd_msp_pd_amt,
       rev_cntr_bene_pmt_amt,
       rev_cntr_blood_ddctbl_amt,
       rev_cntr_cash_ddctbl_amt,
       rev_cntr_coinsrnc_wge_adjstd_c,
       rev_cntr_ncvrd_chrg_amt,
       rev_cntr_pmt_amt_amt,
       rev_cntr_prvdr_pmt_amt,
       rev_cntr_rate_amt,
       rev_cntr_rdcd_coinsrnc_amt,
       rev_cntr_tot_chrg_amt,
       clm_admsn_dt,
       clm_hha_care_start_dt,
       clm_hospc_start_dt,
       clm_from_dt,
       clm_thru_dt,
       cwf_clm_acrtn_dt,
       nch_actv_or_cvrd_lvl_care_thru,
       nch_bene_dschrg_dt,
       nch_bene_mdcr_bnfts_exhtd_dt,
       nch_qlfyd_stay_from_dt,
       nch_qlfyd_stay_thru_dt,
       nch_vrfd_ncvrd_stay_from_dt,
       nch_vrfd_ncvrd_stay_thru_dt,
       nch_wkly_proc_dt,
       finl_actn_id,
       run_dt,
       link_num,
       fi_clm_rcpt_dt,
       ccw_ld_desc,
       rev_cntr_ndc_qty_qlfr_cd,
       rev_cntr_ndc_qty,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       fst_dgns_e_cd,
       fst_dgns_e_vrsn_cd,
       admtg_dgns_cd,
       admtg_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_1_poa_ind_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_2_poa_ind_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_3_poa_ind_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_4_poa_ind_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_5_poa_ind_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_6_poa_ind_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_7_poa_ind_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_8_poa_ind_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_9_poa_ind_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_10_poa_ind_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_11_poa_ind_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       dgns_12_poa_ind_cd,
       dgns_13_cd,
       dgns_13_vrsn_cd,
       dgns_13_poa_ind_cd,
       dgns_14_cd,
       dgns_14_vrsn_cd,
       dgns_14_poa_ind_cd,
       dgns_15_cd,
       dgns_15_vrsn_cd,
       dgns_15_poa_ind_cd,
       dgns_16_cd,
       dgns_16_vrsn_cd,
       dgns_16_poa_ind_cd,
       dgns_17_cd,
       dgns_17_vrsn_cd,
       dgns_17_poa_ind_cd,
       dgns_18_cd,
       dgns_18_vrsn_cd,
       dgns_18_poa_ind_cd,
       dgns_19_cd,
       dgns_19_vrsn_cd,
       dgns_19_poa_ind_cd,
       dgns_20_cd,
       dgns_20_vrsn_cd,
       dgns_20_poa_ind_cd,
       dgns_21_cd,
       dgns_21_vrsn_cd,
       dgns_21_poa_ind_cd,
       dgns_22_cd,
       dgns_22_vrsn_cd,
       dgns_22_poa_ind_cd,
       dgns_23_cd,
       dgns_23_vrsn_cd,
       dgns_23_poa_ind_cd,
       dgns_24_cd,
       dgns_24_vrsn_cd,
       dgns_24_poa_ind_cd,
       dgns_25_cd,
       dgns_25_vrsn_cd,
       dgns_25_poa_ind_cd,
       dgns_e_cd_grp_id,
       prcdr_1_cd,
       prcdr_1_vrsn_cd,
       prcdr_1_dt,
       prcdr_2_cd,
       prcdr_2_vrsn_cd,
       prcdr_2_dt,
       prcdr_3_cd,
       prcdr_3_vrsn_cd,
       prcdr_3_dt,
       prcdr_4_cd,
       prcdr_4_vrsn_cd,
       prcdr_4_dt,
       prcdr_5_cd,
       prcdr_5_vrsn_cd,
       prcdr_5_dt,
       prcdr_6_cd,
       prcdr_6_vrsn_cd,
       prcdr_6_dt,
       prcdr_7_cd,
       prcdr_7_vrsn_cd,
       prcdr_7_dt,
       prcdr_8_cd,
       prcdr_8_vrsn_cd,
       prcdr_8_dt,
       prcdr_9_cd,
       prcdr_9_vrsn_cd,
       prcdr_9_dt,
       prcdr_10_cd,
       prcdr_10_vrsn_cd,
       prcdr_10_dt,
       prcdr_11_cd,
       prcdr_11_vrsn_cd,
       prcdr_11_dt,
       prcdr_12_cd,
       prcdr_12_vrsn_cd,
       prcdr_12_dt,
       prcdr_13_cd,
       prcdr_13_vrsn_cd,
       prcdr_13_dt,
       prcdr_14_cd,
       prcdr_14_vrsn_cd,
       prcdr_14_dt,
       prcdr_15_cd,
       prcdr_15_vrsn_cd,
       prcdr_15_dt,
       prcdr_16_cd,
       prcdr_16_vrsn_cd,
       prcdr_16_dt,
       prcdr_17_cd,
       prcdr_17_vrsn_cd,
       prcdr_17_dt,
       prcdr_18_cd,
       prcdr_18_vrsn_cd,
       prcdr_18_dt,
       prcdr_19_cd,
       prcdr_19_vrsn_cd,
       prcdr_19_dt,
       prcdr_20_cd,
       prcdr_20_vrsn_cd,
       prcdr_20_dt,
       prcdr_21_cd,
       prcdr_21_vrsn_cd,
       prcdr_21_dt,
       prcdr_22_cd,
       prcdr_22_vrsn_cd,
       prcdr_22_dt,
       prcdr_23_cd,
       prcdr_23_vrsn_cd,
       prcdr_23_dt,
       prcdr_24_cd,
       prcdr_24_vrsn_cd,
       prcdr_24_dt,
       prcdr_25_cd,
       prcdr_25_vrsn_cd,
       prcdr_25_dt,
       saf_finl_actn_id,
       rsn_visit_cd_grp_id,
       rndrng_physn_id,
       rev_cntr_pwk_cd,
       fraud_line_prvnttv_sys_id,
       clm_line_thrpy_cap_ind_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       rc_uniq_trkng_num,
       rc_ptnt_add_on_pymt_amt,
       --
       fb.bene_id new_bene_id,
       fb.key,
       substr(pta.bene_id, length(pta.bene_id), 1) bene_part_num,
       prfl.nch_clm_type_cd,
       prfl.nch_near_line_rec_ident_cd,
       p.physn_upin,
       p.physn_npi ,
       efctv_bgn_dt,
       efctv_end_dt,
       old_finl_actn_id,
       old_saf_finl_actn_id
        FROM ccw_owner.ccw_pta_rev_line_fact pta,
             ccw_owner.ccw_all_clm_prfl         prfl,
             ccw_owner.temp_fhir_bene           fb,
             ccw_owner.meta_prcsng_dtl          pd,
             ccw_owner.ccw_phys_at_time_of_clm  p
       WHERE pta.bene_id = fb.key
         AND pta.clm_type_id = prfl.clm_type_id
         AND pta.ccw_ld_desc = pd.prd_name
         AND pta.physn_at_time_of_clm_id = p.physn_id 
         AND pd.prd_type = 'CLAIMS'
         AND pd.prd_prcsng_ind = 'N'
         AND pta.finl_actn_id = 21
         AND pta.bene_id <> -1
         AND pta.clm_thru_dt >= g_3_yr_dt;

    COMMIT;

    dbms_application_info.set_client_info('ptaFact - load_sample_tables ()');

    truncate_table(NULL, 'temp_fhir_pta_fact');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_fhir_pta_fact
      WITH phy AS
       (SELECT /*+ parallel (16) */
         pt.physn_id, pt.physn_upin, pt.physn_npi
          FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
      SELECT /*+ parallel (16) */
       clm_id,
       pta.bene_id a_bene_id,
       pta.clm_type_id,
       drg_id,
       ip_snf_clm_fields_id,
       isohh_clm_fields_id,
       clm_admsn_dt,
       clm_hha_care_start_dt_id,
       clm_hospc_start_dt_id,
       clm_from_dt,
       clm_thru_dt,
       cwf_clm_acrtn_dt,
       nch_actv_or_cvrd_lvl_care_thru,
       nch_bene_dschrg_dt,
       nch_bene_mdcr_bnfts_exhtd_dt_i,
       nch_qlfyd_stay_from_dt,
       nch_qlfyd_stay_thru_dt,
       nch_vrfd_ncvrd_stay_from_dt,
       nch_vrfd_ncvrd_stay_thru_dt,
       nch_wkly_proc_dt,
       prvdr_at_time_of_clm_id,
       atndg_physn_id,
       clm_oprtg_physn_id,
       clm_other_physn_id,
       bene_clm_acnt_num,
       cwf_clm_acrtn_num,
       clm_pps_cptl_drg_wt_num,
       bene_hospc_prd_cnt,
       bene_tot_coinsrnc_days_cnt,
       clm_non_utlztn_days_cnt,
       clm_utlztn_day_cnt,
       clm_hha_tot_visit_cnt,
       clm_op_bene_pmt_amt,
       clm_op_prvdr_pmt_amt,
       clm_pmt_amt,
       clm_pass_thru_per_diem_amt,
       clm_pps_cptl_fsp_amt,
       clm_pps_cptl_outlier_amt,
       clm_pps_cptl_dsprprtnt_shr_amt,
       clm_pps_cptl_ime_amt,
       clm_pps_cptl_excptn_amt,
       clm_pps_old_cptl_hld_hrmls_amt,
       clm_tot_chrg_amt,
       clm_tot_pps_cptl_amt,
       nch_bene_blood_ddctbl_lblty_am,
       nch_bene_ip_ddctbl_amt,
       nch_bene_pta_coinsrnc_lblty_am,
       nch_bene_ptb_ddctbl_amt,
       nch_bene_ptb_coinsrnc_amt,
       nch_drg_outlier_aprvd_pmt_amt,
       nch_ip_ncvrd_chrg_amt,
       nch_ip_tot_ddctn_amt,
       nch_prmry_pyr_clm_pd_amt,
       nch_profnl_cmpnt_chrg_amt,
       fi_num,
       finl_actn_id,
       run_dt,
       link_num,
       nch_blood_pnts_frnshd_qty,
       bene_lrd_used_cnt,
       cmrbdty_grp_id,
       fi_doc_clm_cntl_num,
       fi_orig_clm_cntl_num,
       orgnl_clm_thru_dt,
       nch_daily_proc_dt,
       fi_clm_rcpt_dt,
       nch_sgmt_link_num,
       ccw_ld_desc,
       all_clm_dmgrphc_id,
       ccw_geo_id,
       dgns_e_cd_grp_id,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       fst_dgns_e_cd,
       fst_dgns_e_vrsn_cd,
       admtg_dgns_cd,
       admtg_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_1_poa_ind_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_2_poa_ind_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_3_poa_ind_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_4_poa_ind_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_5_poa_ind_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_6_poa_ind_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_7_poa_ind_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_8_poa_ind_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_9_poa_ind_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_10_poa_ind_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_11_poa_ind_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       dgns_12_poa_ind_cd,
       dgns_13_cd,
       dgns_13_vrsn_cd,
       dgns_13_poa_ind_cd,
       dgns_14_cd,
       dgns_14_vrsn_cd,
       dgns_14_poa_ind_cd,
       dgns_15_cd,
       dgns_15_vrsn_cd,
       dgns_15_poa_ind_cd,
       dgns_16_cd,
       dgns_16_vrsn_cd,
       dgns_16_poa_ind_cd,
       dgns_17_cd,
       dgns_17_vrsn_cd,
       dgns_17_poa_ind_cd,
       dgns_18_cd,
       dgns_18_vrsn_cd,
       dgns_18_poa_ind_cd,
       dgns_19_cd,
       dgns_19_vrsn_cd,
       dgns_19_poa_ind_cd,
       dgns_20_cd,
       dgns_20_vrsn_cd,
       dgns_20_poa_ind_cd,
       dgns_21_cd,
       dgns_21_vrsn_cd,
       dgns_21_poa_ind_cd,
       dgns_22_cd,
       dgns_22_vrsn_cd,
       dgns_22_poa_ind_cd,
       dgns_23_cd,
       dgns_23_vrsn_cd,
       dgns_23_poa_ind_cd,
       dgns_24_cd,
       dgns_24_vrsn_cd,
       dgns_24_poa_ind_cd,
       dgns_25_cd,
       dgns_25_vrsn_cd,
       dgns_25_poa_ind_cd,
       prcdr_1_cd,
       prcdr_1_vrsn_cd,
       prcdr_1_dt,
       prcdr_2_cd,
       prcdr_2_vrsn_cd,
       prcdr_2_dt,
       prcdr_3_cd,
       prcdr_3_vrsn_cd,
       prcdr_3_dt,
       prcdr_4_cd,
       prcdr_4_vrsn_cd,
       prcdr_4_dt,
       prcdr_5_cd,
       prcdr_5_vrsn_cd,
       prcdr_5_dt,
       prcdr_6_cd,
       prcdr_6_vrsn_cd,
       prcdr_6_dt,
       prcdr_7_cd,
       prcdr_7_vrsn_cd,
       prcdr_7_dt,
       prcdr_8_cd,
       prcdr_8_vrsn_cd,
       prcdr_8_dt,
       prcdr_9_cd,
       prcdr_9_vrsn_cd,
       prcdr_9_dt,
       prcdr_10_cd,
       prcdr_10_vrsn_cd,
       prcdr_10_dt,
       prcdr_11_cd,
       prcdr_11_vrsn_cd,
       prcdr_11_dt,
       prcdr_12_cd,
       prcdr_12_vrsn_cd,
       prcdr_12_dt,
       prcdr_13_cd,
       prcdr_13_vrsn_cd,
       prcdr_13_dt,
       prcdr_14_cd,
       prcdr_14_vrsn_cd,
       prcdr_14_dt,
       prcdr_15_cd,
       prcdr_15_vrsn_cd,
       prcdr_15_dt,
       prcdr_16_cd,
       prcdr_16_vrsn_cd,
       prcdr_16_dt,
       prcdr_17_cd,
       prcdr_17_vrsn_cd,
       prcdr_17_dt,
       prcdr_18_cd,
       prcdr_18_vrsn_cd,
       prcdr_18_dt,
       prcdr_19_cd,
       prcdr_19_vrsn_cd,
       prcdr_19_dt,
       prcdr_20_cd,
       prcdr_20_vrsn_cd,
       prcdr_20_dt,
       prcdr_21_cd,
       prcdr_21_vrsn_cd,
       prcdr_21_dt,
       prcdr_22_cd,
       prcdr_22_vrsn_cd,
       prcdr_22_dt,
       prcdr_23_cd,
       prcdr_23_vrsn_cd,
       prcdr_23_dt,
       prcdr_24_cd,
       prcdr_24_vrsn_cd,
       prcdr_24_dt,
       prcdr_25_cd,
       prcdr_25_vrsn_cd,
       prcdr_25_dt,
       saf_finl_actn_id,
       fi_clm_proc_dt,
       clm_mdcl_rec,
       rsn_visit_cd_grp_id,
       clm_pwk_cd,
       clm_ip_low_vol_pmt_amt,
       clm_bndld_model_1_dscnt_pct,
       clm_base_oprtg_drg_amt,
       clm_oprtg_hsp_amt,
       clm_vbp_adjstmt_pct,
       clm_hrr_adjstmt_pct,
       rndrng_physn_id,
       rfrg_physn_id,
       clm_misc_cd_id,
       fraud_prvnttv_sys_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       fi_schld_pymt_dt,
       cwf_frwrd_dt,
       cwf_clm_asgned_num,
       clm_pro_proc_dt,
       clm_pro_cntl_num,
       ptnt_cntl_num,
       clm_trtmt_authrztn_num,
       nch_ip_pro_aprvl_srvc_from_dt,
       nch_ip_pro_aprvl_srvc_thru_dt,
       nch_blood_tot_chrg_amt,
       nch_blood_non_cvrd_chrg_amt,
       nch_ip_pro_aprvl_grc_day_cnt,
       pps_cptl_hsp_amt,
       clm_cr_day_cnt,
       pps_cptl_dschrg_frctn_pct_num,
       clm_coinsrnc_yr_1_day_cnt,
       nch_coinsrnc_yr_1_rate_amt,
       clm_coinsrnc_yr_2_day_cnt,
       nch_coinsrnc_yr_2_rate_amt,
       bene_prior_psych_day_cnt,
       nch_blood_pnts_rplcd_qty_num,
       nch_blood_pnts_nrplc_qty_num,
       nch_blood_ddctbl_pnts_qty_num,
       nch_prvdr_guntd_pymt_strt_dt,
       nch_ur_ntc_rcvd_dt,
       clm_op_bene_intrm_ddctbl_amt,
       all_clm_misc_cd_id,
       clm_pta_cd_id,
       clm_bene_id,
       op_cd_id,
       cwf_trnsmsn_batch_num,
       ip_flex_pymt_1_amt,
       ip_flex_pymt_2_amt,
       ip_flex_pymt_3_amt,
       ip_flex_pymt_4_amt,
       ehr_pymt_adjstmt_amt,
       ip_flex_pymt_6_amt,
       ip_flex_pymt_7_amt,
       gaf_pct,
       pps_std_val_pymt_amt,
       finl_std_amt,
       uniq_trkng_num,
       clm_site_ntrl_pymt_cst_amt,
       clm_site_ntrl_pymt_ipps_amt,
       clm_full_std_pymt_amt,
       clm_ss_outlier_std_pymt_amt,
       clm_next_gnrtn_aco_ind_cd_id,
       fb.bene_id new_bene_id,
       fb.key,
       substr(pta.bene_id, length(pta.bene_id), 1) bene_part_num,
       prfl.nch_clm_type_cd,
       prfl.nch_near_line_rec_ident_cd,
       atphi.physn_upin at_physn_upin,
       atphi.physn_npi at_physn_npi, 
       opphi.physn_upin op_physn_upin,
       opphi.physn_npi op_physn_npi,
       otphi.physn_upin ot_physn_upin, 
       otphi.physn_npi ot_physn_npi,
       r.physn_upin ot_physn_upin, 
       r.physn_npi ot_physn_npi  ,
       efctv_bgn_dt,
       efctv_end_dt,
       old_finl_actn_id,
       old_saf_finl_actn_id
        FROM ccw_owner.ccw_pta_fact  pta,
             ccw_owner.ccw_all_clm_prfl prfl,
             ccw_owner.temp_fhir_bene   fb,
             ccw_owner.meta_prcsng_dtl  pd,
             phy                        atphi,
             phy                        opphi, 
             phy                        otphi, 
             phy                        r 
       WHERE pta.bene_id = fb.key
         AND pta.clm_type_id = prfl.clm_type_id
         AND pta.ccw_ld_desc = pd.prd_name
         AND pta.atndg_physn_id = atphi.physn_id 
         AND pta.clm_oprtg_physn_id = opphi.physn_id 
         AND pta.clm_other_physn_id = otphi.physn_id 
         AND pta.rndrng_physn_id = r.physn_id 
         AND pd.prd_type = 'CLAIMS'
         AND pd.prd_prcsng_ind = 'N'
         AND pta.finl_actn_id = 21
         AND pta.bene_id <> -1
         AND pta.clm_thru_dt >= g_3_yr_dt;

    COMMIT;

    dbms_application_info.set_client_info('ptbFact - load_sample_tables ()');

    truncate_table(NULL, 'temp_fhir_ptb_fact');

    INSERT /*+ append parallel (16) */
    INTO ccw_owner.temp_fhir_ptb_fact
      SELECT /*+ parallel (16) */
       clm_id,
       ptb.bene_id b_bene_id,
       ptb.clm_type_id,
       othr_flds_clm_id,
       physn_at_time_of_clm_id,
       rfrg_ordrg_physn_id,
       clm_from_dt,
       clm_thru_dt,
       nch_wkly_prcsg_dt,
       cwf_clm_acrtn_dt,
       finl_actn_id,
       bene_clm_acnt_num,
       carr_num,
       run_dt,
       link_num,
       cwf_clm_acrtn_num,
       carr_clm_rfrg_pin_num,
       clm_pymt_amt,
       clm_prmry_pyr_pd_amt,
       clm_prvdr_pymt_amt,
       clm_bene_pymt_amt,
       clm_sbmtd_chrg_amt,
       clm_alowd_amt,
       clm_cash_ddctbl_apld_amt,
       carr_clm_prvdr_asgnmt_ind_sw,
       dmerc_clm_ordrg_physn_npi_num,
       carr_clm_cntl_num,
       orgnl_clm_thru_dt,
       nch_daily_proc_dt,
       carr_clm_rcpt_dt,
       nch_sgmt_link_num,
       ccw_ld_desc,
       all_clm_dmgrphc_id,
       clm_clncl_tril_num,
       ccw_geo_id,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       saf_finl_actn_id,
       clm_pwk_cd,
       clm_misc_cd_id,
       fraud_prvnttv_sys_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       prvdr_id,
       all_clm_misc_cd_id,
       clm_bene_id,
       cwf_frwrd_dt,
       carr_clm_schld_pymt_dt,
       clm_bene_pd_amt,
       blood_pnts_frnsh_qty_num,
       blood_ddctbl_pnts_qty_num,
       cwf_trnsmsn_batch_num,
       --
       fb.bene_id new_bene_id,
       fb.key,
       substr(ptb.bene_id, length(ptb.bene_id), 1) bene_part_num,
       prfl.nch_clm_type_cd,
       prfl.nch_near_line_rec_ident_cd,
       efctv_bgn_dt,
       efctv_end_dt,
       old_finl_actn_id,
       old_saf_finl_actn_id
        FROM ccw_owner.ccw_ptb_fact  ptb,
             ccw_owner.ccw_all_clm_prfl prfl,
             ccw_owner.temp_fhir_bene   fb,
             ccw_owner.meta_prcsng_dtl  pd
       WHERE ptb.bene_id = fb.key
         AND ptb.clm_type_id = prfl.clm_type_id
         AND ptb.ccw_ld_desc = pd.prd_name
         AND pd.prd_type = 'CLAIMS'
         AND pd.prd_prcsng_ind = 'N'
         AND ptb.finl_actn_id = 21
         AND ptb.bene_id <> -1
         AND ptb.clm_thru_dt >= g_3_yr_dt;

    COMMIT;


    IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTB_LINE_FACT',
                                   p_ecode_out => g_ecode,
                                   p_errm_out  => g_errm) = FALSE THEN
      RAISE cannot_annlz_tbl;
    END IF;
    IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTA_REV_LINE_FACT',
                                   p_ecode_out => g_ecode,
                                   p_errm_out  => g_errm) = FALSE THEN
      RAISE cannot_annlz_tbl;
    END IF;
    IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTA_FACT',
                                   p_ecode_out => g_ecode,
                                   p_errm_out  => g_errm) = FALSE THEN
      RAISE cannot_annlz_tbl;
    END IF;
    IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTB_FACT',
                                   p_ecode_out => g_ecode,
                                   p_errm_out  => g_errm) = FALSE THEN
      RAISE cannot_annlz_tbl;
    END IF;

  END;

  PROCEDURE load_pta_fact_tables(p_part_num     VARCHAR2 DEFAULT NULL,
                                 pb_stats       VARCHAR2 DEFAULT 'FALSE',
                                 pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS
    v_date_char VARCHAR2(8);
    p_stats     BOOLEAN;
    p_100_parts BOOLEAN;

    l_pta_line_cnt NUMBER;
    l_pta_cnt      NUMBER;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.LOAD_PTA_FACT_TABLES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_pta_fact_tables - started');

    END IF;

    g_tot_rows := 0;

    v_date_char := to_char(g_3_yr_dt, 'MMDDYYYY');
    p_100_parts := truefalsetoboolean(pb_100_parts);
    p_stats     := truefalsetoboolean(pb_stats);

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('load_fact_tables ()');

    dbms_application_info.set_client_info('ptaLine - load_sample_tables ()');

    IF p_100_parts THEN
      --subpartition load
      FOR v_recs IN (SELECT /*+ parallel (16) */
                     DISTINCT t.nch_clm_type_cd
                       FROM ccw_owner.ccw_all_clm_prfl t
                      WHERE t.nch_clm_type_cd < '71') LOOP
        g_sub_part_name := get_subpart_name(pi_table_name => 'TEMP_FHIR_PTA_REV_LINE_FACT',
                                            pi_value      => p_part_num,
                                            pi_part_name  => get_part_name(pi_table_name => 'TEMP_FHIR_PTA_REV_LINE_FACT',
                                                                           pi_value      => v_recs.nch_clm_type_cd));
        IF g_sub_part_name IS NOT NULL THEN
      
          truncate_table(p_part_num,
                         'TEMP_FHIR_PTA_REV_LINE_FACT',
                         v_recs.nch_clm_type_cd);

          EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_pta_rev_line_fact subpartition (' ||
                            g_sub_part_name || ')
        SELECT /*+ parallel (16) */
       clm_id,
       clm_line_num,
       pta.clm_type_id,
       drg_id,
       hcpcs_id,
       ip_snf_clm_fields_id,
       isohh_clm_fields_id,
       prvdr_id,
       rev_prfl_id,
       rev_cntr_id,
       rev_cntr_dt,
       rev_cntr_apc_id,
       pta.prvdr_at_time_of_clm_id a_patoci,
       pta.bene_id,
       ansi_prfl_id,
       mdfr_prfl_id,
       physn_at_time_of_clm_id,
       rev_cntr_ide_ndc_upc_num,
       rev_cntr_unit_cnt,
       rev_cntr_ptnt_rspnsblty_pmt,
       rev_cntr_1st_msp_pd_amt,
       rev_cntr_2nd_msp_pd_amt,
       rev_cntr_bene_pmt_amt,
       rev_cntr_blood_ddctbl_amt,
       rev_cntr_cash_ddctbl_amt,
       rev_cntr_coinsrnc_wge_adjstd_c,
       rev_cntr_ncvrd_chrg_amt,
       rev_cntr_pmt_amt_amt,
       rev_cntr_prvdr_pmt_amt,
       rev_cntr_rate_amt,
       rev_cntr_rdcd_coinsrnc_amt,
       rev_cntr_tot_chrg_amt,
       clm_admsn_dt,
       clm_hha_care_start_dt,
       clm_hospc_start_dt,
       clm_from_dt,
       clm_thru_dt,
       cwf_clm_acrtn_dt,
       nch_actv_or_cvrd_lvl_care_thru,
       nch_bene_dschrg_dt,
       nch_bene_mdcr_bnfts_exhtd_dt,
       nch_qlfyd_stay_from_dt,
       nch_qlfyd_stay_thru_dt,
       nch_vrfd_ncvrd_stay_from_dt,
       nch_vrfd_ncvrd_stay_thru_dt,
       nch_wkly_proc_dt,
       finl_actn_id,
       run_dt,
       link_num,
       fi_clm_rcpt_dt,
       ccw_ld_desc,
       rev_cntr_ndc_qty_qlfr_cd,
       rev_cntr_ndc_qty,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       fst_dgns_e_cd,
       fst_dgns_e_vrsn_cd,
       admtg_dgns_cd,
       admtg_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_1_poa_ind_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_2_poa_ind_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_3_poa_ind_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_4_poa_ind_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_5_poa_ind_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_6_poa_ind_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_7_poa_ind_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_8_poa_ind_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_9_poa_ind_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_10_poa_ind_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_11_poa_ind_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       dgns_12_poa_ind_cd,
       dgns_13_cd,
       dgns_13_vrsn_cd,
       dgns_13_poa_ind_cd,
       dgns_14_cd,
       dgns_14_vrsn_cd,
       dgns_14_poa_ind_cd,
       dgns_15_cd,
       dgns_15_vrsn_cd,
       dgns_15_poa_ind_cd,
       dgns_16_cd,
       dgns_16_vrsn_cd,
       dgns_16_poa_ind_cd,
       dgns_17_cd,
       dgns_17_vrsn_cd,
       dgns_17_poa_ind_cd,
       dgns_18_cd,
       dgns_18_vrsn_cd,
       dgns_18_poa_ind_cd,
       dgns_19_cd,
       dgns_19_vrsn_cd,
       dgns_19_poa_ind_cd,
       dgns_20_cd,
       dgns_20_vrsn_cd,
       dgns_20_poa_ind_cd,
       dgns_21_cd,
       dgns_21_vrsn_cd,
       dgns_21_poa_ind_cd,
       dgns_22_cd,
       dgns_22_vrsn_cd,
       dgns_22_poa_ind_cd,
       dgns_23_cd,
       dgns_23_vrsn_cd,
       dgns_23_poa_ind_cd,
       dgns_24_cd,
       dgns_24_vrsn_cd,
       dgns_24_poa_ind_cd,
       dgns_25_cd,
       dgns_25_vrsn_cd,
       dgns_25_poa_ind_cd,
       dgns_e_cd_grp_id,
       prcdr_1_cd,
       prcdr_1_vrsn_cd,
       prcdr_1_dt,
       prcdr_2_cd,
       prcdr_2_vrsn_cd,
       prcdr_2_dt,
       prcdr_3_cd,
       prcdr_3_vrsn_cd,
       prcdr_3_dt,
       prcdr_4_cd,
       prcdr_4_vrsn_cd,
       prcdr_4_dt,
       prcdr_5_cd,
       prcdr_5_vrsn_cd,
       prcdr_5_dt,
       prcdr_6_cd,
       prcdr_6_vrsn_cd,
       prcdr_6_dt,
       prcdr_7_cd,
       prcdr_7_vrsn_cd,
       prcdr_7_dt,
       prcdr_8_cd,
       prcdr_8_vrsn_cd,
       prcdr_8_dt,
       prcdr_9_cd,
       prcdr_9_vrsn_cd,
       prcdr_9_dt,
       prcdr_10_cd,
       prcdr_10_vrsn_cd,
       prcdr_10_dt,
       prcdr_11_cd,
       prcdr_11_vrsn_cd,
       prcdr_11_dt,
       prcdr_12_cd,
       prcdr_12_vrsn_cd,
       prcdr_12_dt,
       prcdr_13_cd,
       prcdr_13_vrsn_cd,
       prcdr_13_dt,
       prcdr_14_cd,
       prcdr_14_vrsn_cd,
       prcdr_14_dt,
       prcdr_15_cd,
       prcdr_15_vrsn_cd,
       prcdr_15_dt,
       prcdr_16_cd,
       prcdr_16_vrsn_cd,
       prcdr_16_dt,
       prcdr_17_cd,
       prcdr_17_vrsn_cd,
       prcdr_17_dt,
       prcdr_18_cd,
       prcdr_18_vrsn_cd,
       prcdr_18_dt,
       prcdr_19_cd,
       prcdr_19_vrsn_cd,
       prcdr_19_dt,
       prcdr_20_cd,
       prcdr_20_vrsn_cd,
       prcdr_20_dt,
       prcdr_21_cd,
       prcdr_21_vrsn_cd,
       prcdr_21_dt,
       prcdr_22_cd,
       prcdr_22_vrsn_cd,
       prcdr_22_dt,
       prcdr_23_cd,
       prcdr_23_vrsn_cd,
       prcdr_23_dt,
       prcdr_24_cd,
       prcdr_24_vrsn_cd,
       prcdr_24_dt,
       prcdr_25_cd,
       prcdr_25_vrsn_cd,
       prcdr_25_dt,
       saf_finl_actn_id,
       rsn_visit_cd_grp_id,
       rndrng_physn_id,
       rev_cntr_pwk_cd,
       fraud_line_prvnttv_sys_id,
       clm_line_thrpy_cap_ind_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       rc_uniq_trkng_num,
       rc_ptnt_add_on_pymt_amt,
         pta.bene_id new_bene_id,
         pta.bene_id key,
         substr(pta.bene_id, length(pta.bene_id)-1, 2) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd,
         p.physn_upin,
         p.physn_npi,
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_pta_rev_line_fact pta,
               ccw_owner.temp_fhir_bene        fb,
               ccw_owner.ccw_all_clm_prfl      prfl,
               ccw_owner.meta_prcsng_dtl         pd,
               ccw_owner.ccw_phys_at_time_of_clm p 
         WHERE pta.bene_id = fb.key
               AND pta.ccw_ld_desc = pd.prd_name
               AND pta.clm_type_id = prfl.clm_type_id
               AND pta.rndrng_physn_id = p.physn_id         
               --AND pta.physn_at_time_of_clm_id = p.physn_id 
               AND pd.prd_type = ''CLAIMS''
               AND pd.prd_prcsng_ind = ''N''
               AND
               prfl.nch_clm_type_cd = ''' ||
                            v_recs.nch_clm_type_cd || '''
               AND pta.finl_actn_id = 21
               AND pta.bene_id <> -1
               AND pta.clm_thru_dt >= to_date(''' ||
                            v_date_char || ''', ''MMDDYYYY'')
               AND substr(pta.bene_id, length(pta.bene_id) - 1, 2) =
               nvl(' || p_part_num || ',
                       substr(pta.bene_id, length(pta.bene_id) - 1, 2))');

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

          COMMIT;
        END IF; --IF g_sub_part_name IS NOT NULL THEN
      END LOOP;
      dbms_application_info.set_client_info('ptaFact - load_sample_tables ()');

      FOR v_recs IN (SELECT /*+ parallel (16) */
                     DISTINCT t.nch_clm_type_cd
                       FROM ccw_owner.ccw_all_clm_prfl t
                      WHERE t.nch_clm_type_cd < '71') LOOP
        g_sub_part_name := get_subpart_name(pi_table_name => 'TEMP_FHIR_PTA_FACT',
                                            pi_value      => p_part_num,
                                            pi_part_name  => get_part_name(pi_table_name => 'TEMP_FHIR_PTA_FACT',
                                                                           pi_value      => v_recs.nch_clm_type_cd));
        IF g_sub_part_name IS NOT NULL THEN

          truncate_table(p_part_num,
                         'TEMP_FHIR_PTA_FACT',
                         v_recs.nch_clm_type_cd);

          EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_pta_fact subpartition (' ||
                            g_sub_part_name || ')
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
        SELECT /*+ parallel (16) */
       clm_id,
       pta.bene_id a_bene_id,
       pta.clm_type_id,
       drg_id,
       ip_snf_clm_fields_id,
       isohh_clm_fields_id,
       clm_admsn_dt,
       clm_hha_care_start_dt_id,
       clm_hospc_start_dt_id,
       clm_from_dt,
       clm_thru_dt,
       cwf_clm_acrtn_dt,
       nch_actv_or_cvrd_lvl_care_thru,
       nch_bene_dschrg_dt,
       nch_bene_mdcr_bnfts_exhtd_dt_i,
       nch_qlfyd_stay_from_dt,
       nch_qlfyd_stay_thru_dt,
       nch_vrfd_ncvrd_stay_from_dt,
       nch_vrfd_ncvrd_stay_thru_dt,
       nch_wkly_proc_dt,
       prvdr_at_time_of_clm_id,
       atndg_physn_id,
       clm_oprtg_physn_id,
       clm_other_physn_id,
       bene_clm_acnt_num,
       cwf_clm_acrtn_num,
       clm_pps_cptl_drg_wt_num,
       bene_hospc_prd_cnt,
       bene_tot_coinsrnc_days_cnt,
       clm_non_utlztn_days_cnt,
       clm_utlztn_day_cnt,
       clm_hha_tot_visit_cnt,
       clm_op_bene_pmt_amt,
       clm_op_prvdr_pmt_amt,
       clm_pmt_amt,
       clm_pass_thru_per_diem_amt,
       clm_pps_cptl_fsp_amt,
       clm_pps_cptl_outlier_amt,
       clm_pps_cptl_dsprprtnt_shr_amt,
       clm_pps_cptl_ime_amt,
       clm_pps_cptl_excptn_amt,
       clm_pps_old_cptl_hld_hrmls_amt,
       clm_tot_chrg_amt,
       clm_tot_pps_cptl_amt,
       nch_bene_blood_ddctbl_lblty_am,
       nch_bene_ip_ddctbl_amt,
       nch_bene_pta_coinsrnc_lblty_am,
       nch_bene_ptb_ddctbl_amt,
       nch_bene_ptb_coinsrnc_amt,
       nch_drg_outlier_aprvd_pmt_amt,
       nch_ip_ncvrd_chrg_amt,
       nch_ip_tot_ddctn_amt,
       nch_prmry_pyr_clm_pd_amt,
       nch_profnl_cmpnt_chrg_amt,
       fi_num,
       finl_actn_id,
       run_dt,
       link_num,
       nch_blood_pnts_frnshd_qty,
       bene_lrd_used_cnt,
       cmrbdty_grp_id,
       fi_doc_clm_cntl_num,
       fi_orig_clm_cntl_num,
       orgnl_clm_thru_dt,
       nch_daily_proc_dt,
       fi_clm_rcpt_dt,
       nch_sgmt_link_num,
       ccw_ld_desc,
       all_clm_dmgrphc_id,
       ccw_geo_id,
       dgns_e_cd_grp_id,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       fst_dgns_e_cd,
       fst_dgns_e_vrsn_cd,
       admtg_dgns_cd,
       admtg_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_1_poa_ind_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_2_poa_ind_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_3_poa_ind_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_4_poa_ind_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_5_poa_ind_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_6_poa_ind_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_7_poa_ind_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_8_poa_ind_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_9_poa_ind_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_10_poa_ind_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_11_poa_ind_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       dgns_12_poa_ind_cd,
       dgns_13_cd,
       dgns_13_vrsn_cd,
       dgns_13_poa_ind_cd,
       dgns_14_cd,
       dgns_14_vrsn_cd,
       dgns_14_poa_ind_cd,
       dgns_15_cd,
       dgns_15_vrsn_cd,
       dgns_15_poa_ind_cd,
       dgns_16_cd,
       dgns_16_vrsn_cd,
       dgns_16_poa_ind_cd,
       dgns_17_cd,
       dgns_17_vrsn_cd,
       dgns_17_poa_ind_cd,
       dgns_18_cd,
       dgns_18_vrsn_cd,
       dgns_18_poa_ind_cd,
       dgns_19_cd,
       dgns_19_vrsn_cd,
       dgns_19_poa_ind_cd,
       dgns_20_cd,
       dgns_20_vrsn_cd,
       dgns_20_poa_ind_cd,
       dgns_21_cd,
       dgns_21_vrsn_cd,
       dgns_21_poa_ind_cd,
       dgns_22_cd,
       dgns_22_vrsn_cd,
       dgns_22_poa_ind_cd,
       dgns_23_cd,
       dgns_23_vrsn_cd,
       dgns_23_poa_ind_cd,
       dgns_24_cd,
       dgns_24_vrsn_cd,
       dgns_24_poa_ind_cd,
       dgns_25_cd,
       dgns_25_vrsn_cd,
       dgns_25_poa_ind_cd,
       prcdr_1_cd,
       prcdr_1_vrsn_cd,
       prcdr_1_dt,
       prcdr_2_cd,
       prcdr_2_vrsn_cd,
       prcdr_2_dt,
       prcdr_3_cd,
       prcdr_3_vrsn_cd,
       prcdr_3_dt,
       prcdr_4_cd,
       prcdr_4_vrsn_cd,
       prcdr_4_dt,
       prcdr_5_cd,
       prcdr_5_vrsn_cd,
       prcdr_5_dt,
       prcdr_6_cd,
       prcdr_6_vrsn_cd,
       prcdr_6_dt,
       prcdr_7_cd,
       prcdr_7_vrsn_cd,
       prcdr_7_dt,
       prcdr_8_cd,
       prcdr_8_vrsn_cd,
       prcdr_8_dt,
       prcdr_9_cd,
       prcdr_9_vrsn_cd,
       prcdr_9_dt,
       prcdr_10_cd,
       prcdr_10_vrsn_cd,
       prcdr_10_dt,
       prcdr_11_cd,
       prcdr_11_vrsn_cd,
       prcdr_11_dt,
       prcdr_12_cd,
       prcdr_12_vrsn_cd,
       prcdr_12_dt,
       prcdr_13_cd,
       prcdr_13_vrsn_cd,
       prcdr_13_dt,
       prcdr_14_cd,
       prcdr_14_vrsn_cd,
       prcdr_14_dt,
       prcdr_15_cd,
       prcdr_15_vrsn_cd,
       prcdr_15_dt,
       prcdr_16_cd,
       prcdr_16_vrsn_cd,
       prcdr_16_dt,
       prcdr_17_cd,
       prcdr_17_vrsn_cd,
       prcdr_17_dt,
       prcdr_18_cd,
       prcdr_18_vrsn_cd,
       prcdr_18_dt,
       prcdr_19_cd,
       prcdr_19_vrsn_cd,
       prcdr_19_dt,
       prcdr_20_cd,
       prcdr_20_vrsn_cd,
       prcdr_20_dt,
       prcdr_21_cd,
       prcdr_21_vrsn_cd,
       prcdr_21_dt,
       prcdr_22_cd,
       prcdr_22_vrsn_cd,
       prcdr_22_dt,
       prcdr_23_cd,
       prcdr_23_vrsn_cd,
       prcdr_23_dt,
       prcdr_24_cd,
       prcdr_24_vrsn_cd,
       prcdr_24_dt,
       prcdr_25_cd,
       prcdr_25_vrsn_cd,
       prcdr_25_dt,
       saf_finl_actn_id,
       fi_clm_proc_dt,
       clm_mdcl_rec,
       rsn_visit_cd_grp_id,
       clm_pwk_cd,
       clm_ip_low_vol_pmt_amt,
       clm_bndld_model_1_dscnt_pct,
       clm_base_oprtg_drg_amt,
       clm_oprtg_hsp_amt,
       clm_vbp_adjstmt_pct,
       clm_hrr_adjstmt_pct,
       rndrng_physn_id,
       rfrg_physn_id,
       clm_misc_cd_id,
       fraud_prvnttv_sys_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       fi_schld_pymt_dt,
       cwf_frwrd_dt,
       cwf_clm_asgned_num,
       clm_pro_proc_dt,
       clm_pro_cntl_num,
       ptnt_cntl_num,
       clm_trtmt_authrztn_num,
       nch_ip_pro_aprvl_srvc_from_dt,
       nch_ip_pro_aprvl_srvc_thru_dt,
       nch_blood_tot_chrg_amt,
       nch_blood_non_cvrd_chrg_amt,
       nch_ip_pro_aprvl_grc_day_cnt,
       pps_cptl_hsp_amt,
       clm_cr_day_cnt,
       pps_cptl_dschrg_frctn_pct_num,
       clm_coinsrnc_yr_1_day_cnt,
       nch_coinsrnc_yr_1_rate_amt,
       clm_coinsrnc_yr_2_day_cnt,
       nch_coinsrnc_yr_2_rate_amt,
       bene_prior_psych_day_cnt,
       nch_blood_pnts_rplcd_qty_num,
       nch_blood_pnts_nrplc_qty_num,
       nch_blood_ddctbl_pnts_qty_num,
       nch_prvdr_guntd_pymt_strt_dt,
       nch_ur_ntc_rcvd_dt,
       clm_op_bene_intrm_ddctbl_amt,
       all_clm_misc_cd_id,
       clm_pta_cd_id,
       clm_bene_id,
       op_cd_id,
       cwf_trnsmsn_batch_num,
       ip_flex_pymt_1_amt,
       ip_flex_pymt_2_amt,
       ip_flex_pymt_3_amt,
       ip_flex_pymt_4_amt,
       ehr_pymt_adjstmt_amt,
       ip_flex_pymt_6_amt,
       ip_flex_pymt_7_amt,
       gaf_pct,
       pps_std_val_pymt_amt,
       finl_std_amt,
       uniq_trkng_num,
       clm_site_ntrl_pymt_cst_amt,
       clm_site_ntrl_pymt_ipps_amt,
       clm_full_std_pymt_amt,
       clm_ss_outlier_std_pymt_amt,
       clm_next_gnrtn_aco_ind_cd_id,
         pta.bene_id new_bene_id,
         pta.bene_id key,
         substr(pta.bene_id, length(pta.bene_id) - 1, 2) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd,
         atphi.physn_upin at_physn_upin,
         atphi.physn_npi at_physn_npi, 
         opphi.physn_upin op_physn_upin, 
         opphi.physn_npi op_physn_npi, 
         otphi.physn_upin ot_physn_upin, 
         otphi.physn_npi ot_physn_npi,
         r.physn_upin ot_physn_upin, 
         r.physn_npi ot_physn_npi , 
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_pta_fact     pta,
               ccw_owner.temp_fhir_bene   fb,
               ccw_owner.ccw_all_clm_prfl prfl,
               ccw_owner.meta_prcsng_dtl  pd,
               phy                        atphi, 
               phy                        opphi, 
               phy                        otphi, 
               phy                        r
         WHERE pta.bene_id = fb.key
               AND pta.ccw_ld_desc = pd.prd_name
               AND pta.clm_type_id = prfl.clm_type_id
           AND pta.atndg_physn_id = atphi.physn_id 
           AND pta.clm_oprtg_physn_id = opphi.physn_id
           AND pta.clm_other_physn_id = otphi.physn_id 
           AND pta.rndrng_physn_id = r.physn_id 
           AND pd.prd_type = ''CLAIMS''
           AND pd.prd_prcsng_ind = ''N''
           AND prfl.nch_clm_type_cd = ''' ||
                            v_recs.nch_clm_type_cd || '''
               AND pta.finl_actn_id = 21
               AND pta.bene_id <> -1
           AND pta.clm_thru_dt >= to_date(''' ||
                            v_date_char || ''', ''MMDDYYYY'')
               AND substr(pta.bene_id, length(pta.bene_id) - 1, 2) =
               nvl(' || p_part_num || ',
                   substr(pta.bene_id, length(pta.bene_id) - 1, 2))');

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

          COMMIT;
        END IF; --IF g_sub_part_name IS NOT NULL THEN
      END LOOP;

    ELSE
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_pta_rev_line_fact
        SELECT /*+ parallel (16) */
         clm_id,
         clm_line_num,
         pta.clm_type_id,
         drg_id,
         hcpcs_id,
         ip_snf_clm_fields_id,
         isohh_clm_fields_id,
         prvdr_id,
         rev_prfl_id,
         rev_cntr_id,
         rev_cntr_dt,
         rev_cntr_apc_id,
         pta.prvdr_at_time_of_clm_id a_patoci,
         pta.bene_id,
         ansi_prfl_id,
         mdfr_prfl_id,
         physn_at_time_of_clm_id,
         rev_cntr_ide_ndc_upc_num,
         rev_cntr_unit_cnt,
         rev_cntr_ptnt_rspnsblty_pmt,
         rev_cntr_1st_msp_pd_amt,
         rev_cntr_2nd_msp_pd_amt,
         rev_cntr_bene_pmt_amt,
         rev_cntr_blood_ddctbl_amt,
         rev_cntr_cash_ddctbl_amt,
         rev_cntr_coinsrnc_wge_adjstd_c,
         rev_cntr_ncvrd_chrg_amt,
         rev_cntr_pmt_amt_amt,
         rev_cntr_prvdr_pmt_amt,
         rev_cntr_rate_amt,
         rev_cntr_rdcd_coinsrnc_amt,
         rev_cntr_tot_chrg_amt,
         clm_admsn_dt,
         clm_hha_care_start_dt,
         clm_hospc_start_dt,
         clm_from_dt,
         clm_thru_dt,
         cwf_clm_acrtn_dt,
         nch_actv_or_cvrd_lvl_care_thru,
         nch_bene_dschrg_dt,
         nch_bene_mdcr_bnfts_exhtd_dt,
         nch_qlfyd_stay_from_dt,
         nch_qlfyd_stay_thru_dt,
         nch_vrfd_ncvrd_stay_from_dt,
         nch_vrfd_ncvrd_stay_thru_dt,
         nch_wkly_proc_dt,
         finl_actn_id,
         run_dt,
         link_num,
         fi_clm_rcpt_dt,
         ccw_ld_desc,
         rev_cntr_ndc_qty_qlfr_cd,
         rev_cntr_ndc_qty,
         prncpal_dgns_cd,
         prncpal_dgns_vrsn_cd,
         fst_dgns_e_cd,
         fst_dgns_e_vrsn_cd,
         admtg_dgns_cd,
         admtg_dgns_vrsn_cd,
         dgns_1_cd,
         dgns_1_vrsn_cd,
         dgns_1_poa_ind_cd,
         dgns_2_cd,
         dgns_2_vrsn_cd,
         dgns_2_poa_ind_cd,
         dgns_3_cd,
         dgns_3_vrsn_cd,
         dgns_3_poa_ind_cd,
         dgns_4_cd,
         dgns_4_vrsn_cd,
         dgns_4_poa_ind_cd,
         dgns_5_cd,
         dgns_5_vrsn_cd,
         dgns_5_poa_ind_cd,
         dgns_6_cd,
         dgns_6_vrsn_cd,
         dgns_6_poa_ind_cd,
         dgns_7_cd,
         dgns_7_vrsn_cd,
         dgns_7_poa_ind_cd,
         dgns_8_cd,
         dgns_8_vrsn_cd,
         dgns_8_poa_ind_cd,
         dgns_9_cd,
         dgns_9_vrsn_cd,
         dgns_9_poa_ind_cd,
         dgns_10_cd,
         dgns_10_vrsn_cd,
         dgns_10_poa_ind_cd,
         dgns_11_cd,
         dgns_11_vrsn_cd,
         dgns_11_poa_ind_cd,
         dgns_12_cd,
         dgns_12_vrsn_cd,
         dgns_12_poa_ind_cd,
         dgns_13_cd,
         dgns_13_vrsn_cd,
         dgns_13_poa_ind_cd,
         dgns_14_cd,
         dgns_14_vrsn_cd,
         dgns_14_poa_ind_cd,
         dgns_15_cd,
         dgns_15_vrsn_cd,
         dgns_15_poa_ind_cd,
         dgns_16_cd,
         dgns_16_vrsn_cd,
         dgns_16_poa_ind_cd,
         dgns_17_cd,
         dgns_17_vrsn_cd,
         dgns_17_poa_ind_cd,
         dgns_18_cd,
         dgns_18_vrsn_cd,
         dgns_18_poa_ind_cd,
         dgns_19_cd,
         dgns_19_vrsn_cd,
         dgns_19_poa_ind_cd,
         dgns_20_cd,
         dgns_20_vrsn_cd,
         dgns_20_poa_ind_cd,
         dgns_21_cd,
         dgns_21_vrsn_cd,
         dgns_21_poa_ind_cd,
         dgns_22_cd,
         dgns_22_vrsn_cd,
         dgns_22_poa_ind_cd,
         dgns_23_cd,
         dgns_23_vrsn_cd,
         dgns_23_poa_ind_cd,
         dgns_24_cd,
         dgns_24_vrsn_cd,
         dgns_24_poa_ind_cd,
         dgns_25_cd,
         dgns_25_vrsn_cd,
         dgns_25_poa_ind_cd,
         dgns_e_cd_grp_id,
         prcdr_1_cd,
         prcdr_1_vrsn_cd,
         prcdr_1_dt,
         prcdr_2_cd,
         prcdr_2_vrsn_cd,
         prcdr_2_dt,
         prcdr_3_cd,
         prcdr_3_vrsn_cd,
         prcdr_3_dt,
         prcdr_4_cd,
         prcdr_4_vrsn_cd,
         prcdr_4_dt,
         prcdr_5_cd,
         prcdr_5_vrsn_cd,
         prcdr_5_dt,
         prcdr_6_cd,
         prcdr_6_vrsn_cd,
         prcdr_6_dt,
         prcdr_7_cd,
         prcdr_7_vrsn_cd,
         prcdr_7_dt,
         prcdr_8_cd,
         prcdr_8_vrsn_cd,
         prcdr_8_dt,
         prcdr_9_cd,
         prcdr_9_vrsn_cd,
         prcdr_9_dt,
         prcdr_10_cd,
         prcdr_10_vrsn_cd,
         prcdr_10_dt,
         prcdr_11_cd,
         prcdr_11_vrsn_cd,
         prcdr_11_dt,
         prcdr_12_cd,
         prcdr_12_vrsn_cd,
         prcdr_12_dt,
         prcdr_13_cd,
         prcdr_13_vrsn_cd,
         prcdr_13_dt,
         prcdr_14_cd,
         prcdr_14_vrsn_cd,
         prcdr_14_dt,
         prcdr_15_cd,
         prcdr_15_vrsn_cd,
         prcdr_15_dt,
         prcdr_16_cd,
         prcdr_16_vrsn_cd,
         prcdr_16_dt,
         prcdr_17_cd,
         prcdr_17_vrsn_cd,
         prcdr_17_dt,
         prcdr_18_cd,
         prcdr_18_vrsn_cd,
         prcdr_18_dt,
         prcdr_19_cd,
         prcdr_19_vrsn_cd,
         prcdr_19_dt,
         prcdr_20_cd,
         prcdr_20_vrsn_cd,
         prcdr_20_dt,
         prcdr_21_cd,
         prcdr_21_vrsn_cd,
         prcdr_21_dt,
         prcdr_22_cd,
         prcdr_22_vrsn_cd,
         prcdr_22_dt,
         prcdr_23_cd,
         prcdr_23_vrsn_cd,
         prcdr_23_dt,
         prcdr_24_cd,
         prcdr_24_vrsn_cd,
         prcdr_24_dt,
         prcdr_25_cd,
         prcdr_25_vrsn_cd,
         prcdr_25_dt,
         saf_finl_actn_id,
         rsn_visit_cd_grp_id,
         rndrng_physn_id,
         rev_cntr_pwk_cd,
         fraud_line_prvnttv_sys_id,
         clm_line_thrpy_cap_ind_id,
         clm_sbstnc_abuse_and_mh_ind_id,
         rc_uniq_trkng_num,
         rc_ptnt_add_on_pymt_amt,
         pta.bene_id new_bene_id,
         pta.bene_id key,
         substr(pta.bene_id, length(pta.bene_id), 1) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd,
         p.physn_upin, 
         p.physn_npi ,
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_pta_rev_line_fact pta,
               ccw_owner.temp_fhir_bene           fb,
               ccw_owner.ccw_all_clm_prfl         prfl,
               ccw_owner.meta_prcsng_dtl          pd,
               ccw_owner.ccw_phys_at_time_of_clm  p 
         WHERE pta.bene_id = fb.key
           AND pta.ccw_ld_desc = pd.prd_name
           AND pta.clm_type_id = prfl.clm_type_id
           AND pta.rndrng_physn_id = p.physn_id 
           AND pd.prd_type = 'CLAIMS'
           AND pd.prd_prcsng_ind = 'N'
           AND prfl.nch_clm_type_cd IN
               ('10', '50', '60', '61', '62', '40', '41', '42', '20', '30')
           AND pta.finl_actn_id = 21
           AND pta.bene_id <> -1
           AND pta.clm_thru_dt >= g_3_yr_dt
           AND substr(pta.bene_id, length(pta.bene_id), 1) =
               nvl(p_part_num, substr(pta.bene_id, length(pta.bene_id), 1));

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

      dbms_application_info.set_client_info('ptaFact - load_sample_tables ()');

      truncate_table(NULL, 'TEMP_FHIR_PTA_FACT');

      INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_pta_fact
        WITH phy AS
         (SELECT /*+ parallel (16) */
           pt.physn_id, pt.physn_upin, pt.physn_npi
            FROM ccw_owner.ccw_phys_at_time_of_clm pt) 
        SELECT /*+ parallel (16) */
         clm_id,
         pta.bene_id a_bene_id,
         pta.clm_type_id,
         drg_id,
         ip_snf_clm_fields_id,
         isohh_clm_fields_id,
         clm_admsn_dt,
         clm_hha_care_start_dt_id,
         clm_hospc_start_dt_id,
         clm_from_dt,
         clm_thru_dt,
         cwf_clm_acrtn_dt,
         nch_actv_or_cvrd_lvl_care_thru,
         nch_bene_dschrg_dt,
         nch_bene_mdcr_bnfts_exhtd_dt_i,
         nch_qlfyd_stay_from_dt,
         nch_qlfyd_stay_thru_dt,
         nch_vrfd_ncvrd_stay_from_dt,
         nch_vrfd_ncvrd_stay_thru_dt,
         nch_wkly_proc_dt,
         prvdr_at_time_of_clm_id,
         atndg_physn_id,
         clm_oprtg_physn_id,
         clm_other_physn_id,
         bene_clm_acnt_num,
         cwf_clm_acrtn_num,
         clm_pps_cptl_drg_wt_num,
         bene_hospc_prd_cnt,
         bene_tot_coinsrnc_days_cnt,
         clm_non_utlztn_days_cnt,
         clm_utlztn_day_cnt,
         clm_hha_tot_visit_cnt,
         clm_op_bene_pmt_amt,
         clm_op_prvdr_pmt_amt,
         clm_pmt_amt,
         clm_pass_thru_per_diem_amt,
         clm_pps_cptl_fsp_amt,
         clm_pps_cptl_outlier_amt,
         clm_pps_cptl_dsprprtnt_shr_amt,
         clm_pps_cptl_ime_amt,
         clm_pps_cptl_excptn_amt,
         clm_pps_old_cptl_hld_hrmls_amt,
         clm_tot_chrg_amt,
         clm_tot_pps_cptl_amt,
         nch_bene_blood_ddctbl_lblty_am,
         nch_bene_ip_ddctbl_amt,
         nch_bene_pta_coinsrnc_lblty_am,
         nch_bene_ptb_ddctbl_amt,
         nch_bene_ptb_coinsrnc_amt,
         nch_drg_outlier_aprvd_pmt_amt,
         nch_ip_ncvrd_chrg_amt,
         nch_ip_tot_ddctn_amt,
         nch_prmry_pyr_clm_pd_amt,
         nch_profnl_cmpnt_chrg_amt,
         fi_num,
         finl_actn_id,
         run_dt,
         link_num,
         nch_blood_pnts_frnshd_qty,
         bene_lrd_used_cnt,
         cmrbdty_grp_id,
         fi_doc_clm_cntl_num,
         fi_orig_clm_cntl_num,
         orgnl_clm_thru_dt,
         nch_daily_proc_dt,
         fi_clm_rcpt_dt,
         nch_sgmt_link_num,
         ccw_ld_desc,
         all_clm_dmgrphc_id,
         ccw_geo_id,
         dgns_e_cd_grp_id,
         prncpal_dgns_cd,
         prncpal_dgns_vrsn_cd,
         fst_dgns_e_cd,
         fst_dgns_e_vrsn_cd,
         admtg_dgns_cd,
         admtg_dgns_vrsn_cd,
         dgns_1_cd,
         dgns_1_vrsn_cd,
         dgns_1_poa_ind_cd,
         dgns_2_cd,
         dgns_2_vrsn_cd,
         dgns_2_poa_ind_cd,
         dgns_3_cd,
         dgns_3_vrsn_cd,
         dgns_3_poa_ind_cd,
         dgns_4_cd,
         dgns_4_vrsn_cd,
         dgns_4_poa_ind_cd,
         dgns_5_cd,
         dgns_5_vrsn_cd,
         dgns_5_poa_ind_cd,
         dgns_6_cd,
         dgns_6_vrsn_cd,
         dgns_6_poa_ind_cd,
         dgns_7_cd,
         dgns_7_vrsn_cd,
         dgns_7_poa_ind_cd,
         dgns_8_cd,
         dgns_8_vrsn_cd,
         dgns_8_poa_ind_cd,
         dgns_9_cd,
         dgns_9_vrsn_cd,
         dgns_9_poa_ind_cd,
         dgns_10_cd,
         dgns_10_vrsn_cd,
         dgns_10_poa_ind_cd,
         dgns_11_cd,
         dgns_11_vrsn_cd,
         dgns_11_poa_ind_cd,
         dgns_12_cd,
         dgns_12_vrsn_cd,
         dgns_12_poa_ind_cd,
         dgns_13_cd,
         dgns_13_vrsn_cd,
         dgns_13_poa_ind_cd,
         dgns_14_cd,
         dgns_14_vrsn_cd,
         dgns_14_poa_ind_cd,
         dgns_15_cd,
         dgns_15_vrsn_cd,
         dgns_15_poa_ind_cd,
         dgns_16_cd,
         dgns_16_vrsn_cd,
         dgns_16_poa_ind_cd,
         dgns_17_cd,
         dgns_17_vrsn_cd,
         dgns_17_poa_ind_cd,
         dgns_18_cd,
         dgns_18_vrsn_cd,
         dgns_18_poa_ind_cd,
         dgns_19_cd,
         dgns_19_vrsn_cd,
         dgns_19_poa_ind_cd,
         dgns_20_cd,
         dgns_20_vrsn_cd,
         dgns_20_poa_ind_cd,
         dgns_21_cd,
         dgns_21_vrsn_cd,
         dgns_21_poa_ind_cd,
         dgns_22_cd,
         dgns_22_vrsn_cd,
         dgns_22_poa_ind_cd,
         dgns_23_cd,
         dgns_23_vrsn_cd,
         dgns_23_poa_ind_cd,
         dgns_24_cd,
         dgns_24_vrsn_cd,
         dgns_24_poa_ind_cd,
         dgns_25_cd,
         dgns_25_vrsn_cd,
         dgns_25_poa_ind_cd,
         prcdr_1_cd,
         prcdr_1_vrsn_cd,
         prcdr_1_dt,
         prcdr_2_cd,
         prcdr_2_vrsn_cd,
         prcdr_2_dt,
         prcdr_3_cd,
         prcdr_3_vrsn_cd,
         prcdr_3_dt,
         prcdr_4_cd,
         prcdr_4_vrsn_cd,
         prcdr_4_dt,
         prcdr_5_cd,
         prcdr_5_vrsn_cd,
         prcdr_5_dt,
         prcdr_6_cd,
         prcdr_6_vrsn_cd,
         prcdr_6_dt,
         prcdr_7_cd,
         prcdr_7_vrsn_cd,
         prcdr_7_dt,
         prcdr_8_cd,
         prcdr_8_vrsn_cd,
         prcdr_8_dt,
         prcdr_9_cd,
         prcdr_9_vrsn_cd,
         prcdr_9_dt,
         prcdr_10_cd,
         prcdr_10_vrsn_cd,
         prcdr_10_dt,
         prcdr_11_cd,
         prcdr_11_vrsn_cd,
         prcdr_11_dt,
         prcdr_12_cd,
         prcdr_12_vrsn_cd,
         prcdr_12_dt,
         prcdr_13_cd,
         prcdr_13_vrsn_cd,
         prcdr_13_dt,
         prcdr_14_cd,
         prcdr_14_vrsn_cd,
         prcdr_14_dt,
         prcdr_15_cd,
         prcdr_15_vrsn_cd,
         prcdr_15_dt,
         prcdr_16_cd,
         prcdr_16_vrsn_cd,
         prcdr_16_dt,
         prcdr_17_cd,
         prcdr_17_vrsn_cd,
         prcdr_17_dt,
         prcdr_18_cd,
         prcdr_18_vrsn_cd,
         prcdr_18_dt,
         prcdr_19_cd,
         prcdr_19_vrsn_cd,
         prcdr_19_dt,
         prcdr_20_cd,
         prcdr_20_vrsn_cd,
         prcdr_20_dt,
         prcdr_21_cd,
         prcdr_21_vrsn_cd,
         prcdr_21_dt,
         prcdr_22_cd,
         prcdr_22_vrsn_cd,
         prcdr_22_dt,
         prcdr_23_cd,
         prcdr_23_vrsn_cd,
         prcdr_23_dt,
         prcdr_24_cd,
         prcdr_24_vrsn_cd,
         prcdr_24_dt,
         prcdr_25_cd,
         prcdr_25_vrsn_cd,
         prcdr_25_dt,
         saf_finl_actn_id,
         fi_clm_proc_dt,
         clm_mdcl_rec,
         rsn_visit_cd_grp_id,
         clm_pwk_cd,
         clm_ip_low_vol_pmt_amt,
         clm_bndld_model_1_dscnt_pct,
         clm_base_oprtg_drg_amt,
         clm_oprtg_hsp_amt,
         clm_vbp_adjstmt_pct,
         clm_hrr_adjstmt_pct,
         rndrng_physn_id,
         rfrg_physn_id,
         clm_misc_cd_id,
         fraud_prvnttv_sys_id,
         clm_sbstnc_abuse_and_mh_ind_id,
         fi_schld_pymt_dt,
         cwf_frwrd_dt,
         cwf_clm_asgned_num,
         clm_pro_proc_dt,
         clm_pro_cntl_num,
         ptnt_cntl_num,
         clm_trtmt_authrztn_num,
         nch_ip_pro_aprvl_srvc_from_dt,
         nch_ip_pro_aprvl_srvc_thru_dt,
         nch_blood_tot_chrg_amt,
         nch_blood_non_cvrd_chrg_amt,
         nch_ip_pro_aprvl_grc_day_cnt,
         pps_cptl_hsp_amt,
         clm_cr_day_cnt,
         pps_cptl_dschrg_frctn_pct_num,
         clm_coinsrnc_yr_1_day_cnt,
         nch_coinsrnc_yr_1_rate_amt,
         clm_coinsrnc_yr_2_day_cnt,
         nch_coinsrnc_yr_2_rate_amt,
         bene_prior_psych_day_cnt,
         nch_blood_pnts_rplcd_qty_num,
         nch_blood_pnts_nrplc_qty_num,
         nch_blood_ddctbl_pnts_qty_num,
         nch_prvdr_guntd_pymt_strt_dt,
         nch_ur_ntc_rcvd_dt,
         clm_op_bene_intrm_ddctbl_amt,
         all_clm_misc_cd_id,
         clm_pta_cd_id,
         clm_bene_id,
         op_cd_id,
         cwf_trnsmsn_batch_num,
         ip_flex_pymt_1_amt,
         ip_flex_pymt_2_amt,
         ip_flex_pymt_3_amt,
         ip_flex_pymt_4_amt,
         ehr_pymt_adjstmt_amt,
         ip_flex_pymt_6_amt,
         ip_flex_pymt_7_amt,
         gaf_pct,
         pps_std_val_pymt_amt,
         finl_std_amt,
         uniq_trkng_num,
         clm_site_ntrl_pymt_cst_amt,
         clm_site_ntrl_pymt_ipps_amt,
         clm_full_std_pymt_amt,
         clm_ss_outlier_std_pymt_amt,
         clm_next_gnrtn_aco_ind_cd_id,
         pta.bene_id new_bene_id,
         pta.bene_id key,
         substr(pta.bene_id, length(pta.bene_id), 1) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd,
         atphi.physn_upin at_physn_upin,
         atphi.physn_npi at_physn_npi, 
         opphi.physn_upin op_physn_upin, 
         opphi.physn_npi op_physn_npi, 
         otphi.physn_upin ot_physn_upin, 
         otphi.physn_npi ot_physn_npi, 
         r.physn_upin ot_physn_upin, 
         r.physn_npi ot_physn_npi  ,
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_pta_fact  pta,
               ccw_owner.temp_fhir_bene   fb,
               ccw_owner.ccw_all_clm_prfl prfl,
               ccw_owner.meta_prcsng_dtl  pd,
               phy                        atphi, 
               phy                        opphi, 
               phy                        otphi,
               phy                        r 
         WHERE pta.bene_id = fb.key
           AND pta.ccw_ld_desc = pd.prd_name
           AND pta.clm_type_id = prfl.clm_type_id
           AND pta.atndg_physn_id = atphi.physn_id 
           AND pta.clm_oprtg_physn_id = opphi.physn_id 
           AND pta.clm_other_physn_id = otphi.physn_id 
           AND pta.rndrng_physn_id = r.physn_id 
           AND pd.prd_type = 'CLAIMS'
           AND pd.prd_prcsng_ind = 'N'
           AND prfl.nch_clm_type_cd IN
               ('10', '50', '60', '61', '62', '40', '41', '42', '20', '30')
           AND pta.finl_actn_id = 21
           AND pta.bene_id <> -1
           AND pta.clm_thru_dt >= g_3_yr_dt
           AND substr(pta.bene_id, length(pta.bene_id), 1) =
               nvl(p_part_num, substr(pta.bene_id, length(pta.bene_id), 1));

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

    END IF;

    --Only calc stats when necessary, ususally adds 3-4 hours processing time for full run
    IF p_stats THEN
      IF p_part_num IS NULL THEN
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTA_REV_LINE_FACT',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
        IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTA_FACT',
                                       p_ecode_out => g_ecode,
                                       p_errm_out  => g_errm) = FALSE THEN
          RAISE cannot_annlz_tbl;
        END IF;
      ELSE
        -- Partition level - analyze -?
        NULL;
      END IF;
      -----

    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_pta_fact_tables - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'LoadPTA Error: ');
      RAISE;
  END load_pta_fact_tables;

  PROCEDURE load_ptb_fact_tables(p_part_num     VARCHAR2 DEFAULT NULL,
                                 pb_stats       VARCHAR2 DEFAULT 'FALSE',
                                 pb_100_parts   VARCHAR2 DEFAULT 'FALSE',
                                 pb_extrct_only VARCHAR2 DEFAULT 'TRUE') IS

    v_date_char VARCHAR2(8);
    p_stats     BOOLEAN;
    p_100_parts BOOLEAN;

  BEGIN

    -- If running this by itself, it will need to log the starting and ending of the procedure.
    IF pb_extrct_only = 'TRUE' THEN
      sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.LOAD_PTB_FACT_TABLES',
                              p_tbl_name   => upper('NONE'),
                              p_prcdr_type => 'I',
                              p_ld_dtl_id  => g_ld_dtl_id);
    ELSE

      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_ptb_fact_tables - started');

    END IF;

    g_tot_rows := 0;

    --Added to each individual run in case we run them independently from the load all
    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true
    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    dbms_application_info.set_client_info('ptbFact - load_sample_tables ()');

    p_100_parts := truefalsetoboolean(pb_100_parts);
    p_stats     := truefalsetoboolean(pb_stats);

    IF p_100_parts THEN
      v_date_char := to_char(g_3_yr_dt, 'MMDDYYYY');
      FOR v_recs IN (SELECT /*+ parallel (16) */
                     DISTINCT t.nch_clm_type_cd
                       FROM ccw_owner.ccw_all_clm_prfl t
                      WHERE t.nch_clm_type_cd >= '71') LOOP
        g_sub_part_name := ccw_src.fhir_data_extract_pkg.get_subpart_name(pi_table_name => 'TEMP_FHIR_PTB_LINE_FACT',
                                                                          pi_value      => p_part_num,
                                                                          pi_part_name  => ccw_src.fhir_data_extract_pkg.get_part_name(pi_table_name => 'TEMP_FHIR_PTB_LINE_FACT',
                                                                                                                                       pi_value      => v_recs.nch_clm_type_cd));
        IF g_sub_part_name IS NOT NULL THEN

          truncate_table(p_part_num,
                         'TEMP_FHIR_PTB_LINE_FACT',
                         v_recs.nch_clm_type_cd);

          EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_ptb_line_fact subpartition(' ||
                            g_sub_part_name || ')
        SELECT /*+ parallel (16) */
       clm_id,
       line_num,
       ptb.bene_id,
       ptb.carr_uf_id,
       ptb.clm_type_id,
       hcpcs_id,
       othr_flds_clm_id,
       othr_fld_clms_dtl_id,
       physn_at_time_of_clm_id,
       rfrng_ordrg_physn_id,
       clm_from_dt,
       clm_thru_dt,
       nch_wkly_proc_dt,
       cwf_clm_acrtn_dt,
       prvdr_at_time_of_clm_id,
       mdfr_prfl_id,
       line_1st_expns_dt,
       line_last_expns_dt,
       finl_actn_id,
       carr_line_mtus_cnt,
       dmerc_line_mtus_cnt,
       line_srvc_cnt,
       carr_line_prfrmng,
       dmerc_line_scrn_svgs_amt,
       line_alowd_chrg_amt,
       line_bene_pmt_amt,
       line_bene_ptb_ddctbl_amt,
       line_bene_prmry_pyr_pd_amt,
       line_coinsrnc_amt,
       line_dme_prchs_price_amt,
       line_nch_pmt_amt,
       line_prmry_alowd_chrg_amt,
       line_prvdr_pmt_amt,
       line_sbmtd_chrg_amt,
       bene_clm_acnt_num,
       carr_num,
       ndc_cd,
       run_dt,
       link_num,
       cwf_clm_acrtn_num,
       carr_clm_rfrng_pin_num,
       carr_prfrng_pin_num,
       carr_clm_cntl_num,
       carr_clm_rcpt_dt,
       carr_line_rx_num,
       ccw_ld_desc,
       line_hct_hgb_type_cd,
       line_hct_hgb_rslt_num,
       line_dgns_cd,
       line_dgns_vrsn_cd,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       saf_finl_actn_id,
       carr_line_clia_lab_num,
       carr_line_ansthsa_unit_cnt,
       line_pwk_cd,
       line_pmd_uniq_trkng_num,
       fraud_line_prvnttv_sys_id,
       clm_line_thrpy_cap_ind_id,
       clm_line_othr_apld_ind_id,
       line_othr_apld_1_amt,
       line_othr_apld_2_amt,
       line_othr_apld_3_amt,
       line_othr_apld_4_amt,
       line_othr_apld_5_amt,
       line_othr_apld_6_amt,
       line_othr_apld_7_amt,
       clm_line_pos_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       line_point_of_pckp_zip_id,
       line_drop_off_zip_id,
       clm_dmerc_cd_id,
       clm_line_misc_cd_id,
       line_intrst_amt,
       line_10_pct_pnlty_rdctn_amt,
       carr_line_psych_ot_pt_lmt_amt,
       line_blood_ddctbl_pnts_qty_num,
       carr_line_cl_chrg_amt,
       carr_line_dme_cvrg_prd_strt_dt,
       line_dme_mdcl_ncsty_mo_cnt_num,
       dmerc_line_noc_hcpcs_cd_txt,
       line_cba_dt,
       clm_next_gnrtn_aco_ind_cd_id,
         ptb.bene_id new_bene_id,
         ptb.bene_id key,
         substr(ptb.bene_id, length(ptb.bene_id) - 1, 2) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd , 
         efctv_bgn_dt,
       efctv_end_dt,
       old_finl_actn_id,
       old_saf_finl_actn_id
          FROM ccw_owner.ccw_ptb_line_fact ptb,
               ccw_owner.temp_fhir_bene    fb,
               ccw_owner.ccw_all_clm_prfl  prfl,
               ccw_owner.meta_prcsng_dtl   pd
         WHERE ptb.bene_id = fb.key
               AND ptb.ccw_ld_desc = pd.prd_name
               AND pd.prd_type = ''CLAIMS''
               AND pd.prd_prcsng_ind = ''N''
               AND ptb.clm_type_id = prfl.clm_type_id
               AND ptb.finl_actn_id = 21
               AND ptb.bene_id <> -1
               AND prfl.nch_clm_type_cd = ''' ||
                            v_recs.nch_clm_type_cd || '''
               AND ptb.clm_thru_dt >= to_date(''' ||
                            v_date_char || ''', ''MMDDYYYY'')
               AND substr(ptb.bene_id, length(ptb.bene_id) - 1, 2) =
               nvl(' || p_part_num || ',
                       substr(ptb.bene_id, length(ptb.bene_id) - 1, 2))');

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

          COMMIT;
        END IF;
      END LOOP;

      FOR v_recs IN (SELECT /*+ parallel (16) */
                     DISTINCT t.nch_clm_type_cd
                       FROM ccw_owner.ccw_all_clm_prfl t
                      WHERE t.nch_clm_type_cd >= '71') LOOP
        g_sub_part_name := ccw_src.fhir_data_extract_pkg.get_subpart_name(pi_table_name => 'TEMP_FHIR_PTB_FACT',
                                                                          pi_value      => p_part_num,
                                                                          pi_part_name  => ccw_src.fhir_data_extract_pkg.get_part_name(pi_table_name => 'TEMP_FHIR_PTB_FACT',
                                                                                                                                       pi_value      => v_recs.nch_clm_type_cd));
        IF g_sub_part_name IS NOT NULL THEN
          truncate_table(p_part_num,
                         'TEMP_FHIR_PTB_FACT',
                         v_recs.nch_clm_type_cd);

          EXECUTE IMMEDIATE ('INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_ptb_fact subpartition(' ||
                            g_sub_part_name || ')
        SELECT /*+ parallel (16) */
       clm_id,
       ptb.bene_id b_bene_id,
       ptb.clm_type_id,
       othr_flds_clm_id,
       physn_at_time_of_clm_id,
       rfrg_ordrg_physn_id,
       clm_from_dt,
       clm_thru_dt,
       nch_wkly_prcsg_dt,
       cwf_clm_acrtn_dt,
       finl_actn_id,
       bene_clm_acnt_num,
       carr_num,
       run_dt,
       link_num,
       cwf_clm_acrtn_num,
       carr_clm_rfrg_pin_num,
       clm_pymt_amt,
       clm_prmry_pyr_pd_amt,
       clm_prvdr_pymt_amt,
       clm_bene_pymt_amt,
       clm_sbmtd_chrg_amt,
       clm_alowd_amt,
       clm_cash_ddctbl_apld_amt,
       carr_clm_prvdr_asgnmt_ind_sw,
       dmerc_clm_ordrg_physn_npi_num,
       carr_clm_cntl_num,
       orgnl_clm_thru_dt,
       nch_daily_proc_dt,
       carr_clm_rcpt_dt,
       nch_sgmt_link_num,
       ccw_ld_desc,
       all_clm_dmgrphc_id,
       clm_clncl_tril_num,
       ccw_geo_id,
       prncpal_dgns_cd,
       prncpal_dgns_vrsn_cd,
       dgns_1_cd,
       dgns_1_vrsn_cd,
       dgns_2_cd,
       dgns_2_vrsn_cd,
       dgns_3_cd,
       dgns_3_vrsn_cd,
       dgns_4_cd,
       dgns_4_vrsn_cd,
       dgns_5_cd,
       dgns_5_vrsn_cd,
       dgns_6_cd,
       dgns_6_vrsn_cd,
       dgns_7_cd,
       dgns_7_vrsn_cd,
       dgns_8_cd,
       dgns_8_vrsn_cd,
       dgns_9_cd,
       dgns_9_vrsn_cd,
       dgns_10_cd,
       dgns_10_vrsn_cd,
       dgns_11_cd,
       dgns_11_vrsn_cd,
       dgns_12_cd,
       dgns_12_vrsn_cd,
       saf_finl_actn_id,
       clm_pwk_cd,
       clm_misc_cd_id,
       fraud_prvnttv_sys_id,
       clm_sbstnc_abuse_and_mh_ind_id,
       prvdr_id,
       all_clm_misc_cd_id,
       clm_bene_id,
       cwf_frwrd_dt,
       carr_clm_schld_pymt_dt,
       clm_bene_pd_amt,
       blood_pnts_frnsh_qty_num,
       blood_ddctbl_pnts_qty_num,
       cwf_trnsmsn_batch_num,
       --
         ptb.bene_id new_bene_id,
         ptb.bene_id key,
         substr(ptb.bene_id, length(ptb.bene_id) - 1, 2) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd, 
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_ptb_fact     ptb,
               ccw_owner.temp_fhir_bene   fb,
               ccw_owner.ccw_all_clm_prfl prfl,
               ccw_owner.meta_prcsng_dtl  pd
         WHERE ptb.bene_id = fb.key
               AND ptb.ccw_ld_desc = pd.prd_name
               AND ptb.clm_type_id = prfl.clm_type_id
               AND pd.prd_type = ''CLAIMS''
               AND pd.prd_prcsng_ind = ''N''
               AND ptb.finl_actn_id = 21
               AND ptb.bene_id <> -1
               AND prfl.nch_clm_type_cd = ''' ||
                            v_recs.nch_clm_type_cd || '''
               AND ptb.clm_thru_dt >= to_date(''' ||
                            v_date_char || ''', ''MMDDYYYY'')
               AND substr(ptb.bene_id, length(ptb.bene_id) - 1, 2) =
               nvl(' || p_part_num || ',
                       substr(ptb.bene_id, length(ptb.bene_id) - 1, 2))');
          dbms_output.put_line(v_recs.nch_clm_type_cd || ' ' ||
                               SQL%ROWCOUNT);

          g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

          COMMIT;
        END IF;
      END LOOP;
    ELSE
      INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_ptb_line_fact
        SELECT /*+ parallel (16) */
         clm_id,
         line_num,
         ptb.bene_id,
         ptb.carr_uf_id cui,
         ptb.clm_type_id,
         hcpcs_id,
         othr_flds_clm_id,
         othr_fld_clms_dtl_id,
         physn_at_time_of_clm_id,
         rfrng_ordrg_physn_id,
         clm_from_dt,
         clm_thru_dt,
         nch_wkly_proc_dt,
         cwf_clm_acrtn_dt,
         prvdr_at_time_of_clm_id,
         mdfr_prfl_id,
         line_1st_expns_dt,
         line_last_expns_dt,
         finl_actn_id,
         carr_line_mtus_cnt,
         dmerc_line_mtus_cnt,
         line_srvc_cnt,
         carr_line_prfrmng,
         dmerc_line_scrn_svgs_amt,
         line_alowd_chrg_amt,
         line_bene_pmt_amt,
         line_bene_ptb_ddctbl_amt,
         line_bene_prmry_pyr_pd_amt,
         line_coinsrnc_amt,
         line_dme_prchs_price_amt,
         line_nch_pmt_amt,
         line_prmry_alowd_chrg_amt,
         line_prvdr_pmt_amt,
         line_sbmtd_chrg_amt,
         bene_clm_acnt_num,
         carr_num,
         ndc_cd,
         run_dt,
         link_num,
         cwf_clm_acrtn_num,
         carr_clm_rfrng_pin_num,
         carr_prfrng_pin_num,
         carr_clm_cntl_num,
         carr_clm_rcpt_dt,
         carr_line_rx_num,
         ccw_ld_desc,
         line_hct_hgb_type_cd,
         line_hct_hgb_rslt_num,
         line_dgns_cd,
         line_dgns_vrsn_cd,
         prncpal_dgns_cd,
         prncpal_dgns_vrsn_cd,
         dgns_1_cd,
         dgns_1_vrsn_cd,
         dgns_2_cd,
         dgns_2_vrsn_cd,
         dgns_3_cd,
         dgns_3_vrsn_cd,
         dgns_4_cd,
         dgns_4_vrsn_cd,
         dgns_5_cd,
         dgns_5_vrsn_cd,
         dgns_6_cd,
         dgns_6_vrsn_cd,
         dgns_7_cd,
         dgns_7_vrsn_cd,
         dgns_8_cd,
         dgns_8_vrsn_cd,
         dgns_9_cd,
         dgns_9_vrsn_cd,
         dgns_10_cd,
         dgns_10_vrsn_cd,
         dgns_11_cd,
         dgns_11_vrsn_cd,
         dgns_12_cd,
         dgns_12_vrsn_cd,
         saf_finl_actn_id,
         carr_line_clia_lab_num,
         carr_line_ansthsa_unit_cnt,
         line_pwk_cd,
         line_pmd_uniq_trkng_num,
         fraud_line_prvnttv_sys_id,
         clm_line_thrpy_cap_ind_id,
         clm_line_othr_apld_ind_id,
         line_othr_apld_1_amt,
         line_othr_apld_2_amt,
         line_othr_apld_3_amt,
         line_othr_apld_4_amt,
         line_othr_apld_5_amt,
         line_othr_apld_6_amt,
         line_othr_apld_7_amt,
         clm_line_pos_id,
         clm_sbstnc_abuse_and_mh_ind_id,
         line_point_of_pckp_zip_id,
         line_drop_off_zip_id,
         clm_dmerc_cd_id,
         clm_line_misc_cd_id,
         line_intrst_amt,
         line_10_pct_pnlty_rdctn_amt,
         carr_line_psych_ot_pt_lmt_amt,
         line_blood_ddctbl_pnts_qty_num,
         carr_line_cl_chrg_amt,
         carr_line_dme_cvrg_prd_strt_dt,
         line_dme_mdcl_ncsty_mo_cnt_num,
         dmerc_line_noc_hcpcs_cd_txt,
         line_cba_dt,
         clm_next_gnrtn_aco_ind_cd_id,
         --
         ptb.bene_id new_bene_id,
         ptb.bene_id key,
         substr(ptb.bene_id, length(ptb.bene_id), 1) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd,
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_ptb_line_fact ptb,
               ccw_owner.temp_fhir_bene       fb,
               ccw_owner.ccw_all_clm_prfl     prfl,
               ccw_owner.meta_prcsng_dtl      pd
         WHERE ptb.bene_id = fb.key
           AND ptb.ccw_ld_desc = pd.prd_name
           AND pd.prd_type = 'CLAIMS'
           AND pd.prd_prcsng_ind = 'N'
           AND ptb.clm_type_id = prfl.clm_type_id
           AND ptb.finl_actn_id = 21
           AND ptb.bene_id <> -1
           AND prfl.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
           AND ptb.clm_thru_dt >= g_3_yr_dt
           AND substr(ptb.bene_id, length(ptb.bene_id), 1) =
               nvl(p_part_num, substr(ptb.bene_id, length(ptb.bene_id), 1));

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;

      truncate_table(NULL, 'TEMP_FHIR_PTB_FACT');

      INSERT /*+ append parallel (16) */
      INTO ccw_owner.temp_fhir_ptb_fact
        SELECT /*+ parallel (16) */
         clm_id,
         ptb.bene_id b_bene_id,
         ptb.clm_type_id,
         othr_flds_clm_id,
         physn_at_time_of_clm_id,
         rfrg_ordrg_physn_id,
         clm_from_dt,
         clm_thru_dt,
         nch_wkly_prcsg_dt,
         cwf_clm_acrtn_dt,
         finl_actn_id,
         bene_clm_acnt_num,
         carr_num,
         run_dt,
         link_num,
         cwf_clm_acrtn_num,
         carr_clm_rfrg_pin_num,
         clm_pymt_amt,
         clm_prmry_pyr_pd_amt,
         clm_prvdr_pymt_amt,
         clm_bene_pymt_amt,
         clm_sbmtd_chrg_amt,
         clm_alowd_amt,
         clm_cash_ddctbl_apld_amt,
         carr_clm_prvdr_asgnmt_ind_sw,
         dmerc_clm_ordrg_physn_npi_num,
         carr_clm_cntl_num,
         orgnl_clm_thru_dt,
         nch_daily_proc_dt,
         carr_clm_rcpt_dt,
         nch_sgmt_link_num,
         ccw_ld_desc,
         all_clm_dmgrphc_id,
         clm_clncl_tril_num,
         ccw_geo_id,
         prncpal_dgns_cd,
         prncpal_dgns_vrsn_cd,
         dgns_1_cd,
         dgns_1_vrsn_cd,
         dgns_2_cd,
         dgns_2_vrsn_cd,
         dgns_3_cd,
         dgns_3_vrsn_cd,
         dgns_4_cd,
         dgns_4_vrsn_cd,
         dgns_5_cd,
         dgns_5_vrsn_cd,
         dgns_6_cd,
         dgns_6_vrsn_cd,
         dgns_7_cd,
         dgns_7_vrsn_cd,
         dgns_8_cd,
         dgns_8_vrsn_cd,
         dgns_9_cd,
         dgns_9_vrsn_cd,
         dgns_10_cd,
         dgns_10_vrsn_cd,
         dgns_11_cd,
         dgns_11_vrsn_cd,
         dgns_12_cd,
         dgns_12_vrsn_cd,
         saf_finl_actn_id,
         clm_pwk_cd,
         clm_misc_cd_id,
         fraud_prvnttv_sys_id,
         clm_sbstnc_abuse_and_mh_ind_id,
         prvdr_id,
         all_clm_misc_cd_id,
         clm_bene_id,
         cwf_frwrd_dt,
         carr_clm_schld_pymt_dt,
         clm_bene_pd_amt,
         blood_pnts_frnsh_qty_num,
         blood_ddctbl_pnts_qty_num,
         cwf_trnsmsn_batch_num,
         --
         ptb.bene_id new_bene_id,
         ptb.bene_id key,
         substr(ptb.bene_id, length(ptb.bene_id), 1) bene_part_num,
         prfl.nch_clm_type_cd,
         prfl.nch_near_line_rec_ident_cd ,
         efctv_bgn_dt,
         efctv_end_dt,
         old_finl_actn_id,
         old_saf_finl_actn_id
          FROM ccw_owner.ccw_ptb_fact  ptb,
               ccw_owner.temp_fhir_bene   fb,
               ccw_owner.ccw_all_clm_prfl prfl,
               ccw_owner.meta_prcsng_dtl  pd
         WHERE ptb.bene_id = fb.key
           AND ptb.ccw_ld_desc = pd.prd_name
           AND ptb.clm_type_id = prfl.clm_type_id
           AND pd.prd_type = 'CLAIMS'
           AND pd.prd_prcsng_ind = 'N'
           AND prfl.nch_clm_type_cd IN ('71', '72', '73', '81', '82')
           AND ptb.finl_actn_id = 21
           AND ptb.bene_id <> -1
           AND ptb.clm_thru_dt >= g_3_yr_dt
           AND substr(ptb.bene_id, length(ptb.bene_id), 1) =
               nvl(p_part_num, substr(ptb.bene_id, length(ptb.bene_id), 1));

      g_tot_rows := g_tot_rows + SQL%ROWCOUNT;

      COMMIT;
    END IF;
    --Only calc stats when necessary, ususally adds 3-4 hours processing time for full run
    IF p_stats THEN

      IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTB_LINE_FACT',
                                     p_ecode_out => g_ecode,
                                     p_errm_out  => g_errm) = FALSE THEN
        RAISE cannot_annlz_tbl;
      END IF;
      IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_FHIR_PTB_FACT',
                                     p_ecode_out => g_ecode,
                                     p_errm_out  => g_errm) = FALSE THEN
        RAISE cannot_annlz_tbl;
      END IF;

    END IF;

    -- End procedure based on p_extrct_only
    IF pb_extrct_only = 'TRUE' THEN
      -- Successful end of job
      sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                             p_num_rows  => g_tot_rows,
                             p_annlz     => FALSE); -- analyze
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_ptb_fact_tables - finished');
    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      g_errm_out  := SQLERRM;
      g_ecode_out := SQLCODE;
      ccw_src.sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                                      p_err_cd    => g_ecode_out,
                                      p_err_msg   => g_errm_out,
                                      p_err_info  => 'LoadPTB Error: ');
      RAISE;
  END load_ptb_fact_tables;

  -----------------------------------------------------------------------------------------

  PROCEDURE load_all_tables(p_strt_dt      DATE DEFAULT NULL,
                            p_end_dt       DATE DEFAULT NULL,
                            p_prcsg_dt     DATE DEFAULT NULL,
                            p_part_num     VARCHAR2 DEFAULT NULL,
                            pb_new_version VARCHAR2 DEFAULT 'FALSE', 
                            pb_load_all    VARCHAR2 DEFAULT 'FALSE',  
                            pb_load_data   VARCHAR2 DEFAULT 'TRUE',  
                            p_file         VARCHAR2 DEFAULT NULL,     -- Runs only BENE - not any other files 
                            pb_run_bene    VARCHAR2 DEFAULT 'TRUE',  
                            pb_run_pta     VARCHAR2 DEFAULT 'FALSE',  
                            pb_run_ptb     VARCHAR2 DEFAULT 'FALSE', 
                            pb_run_ptd     VARCHAR2 DEFAULT 'FALSE', 
                            pb_bene_fltr   VARCHAR2 DEFAULT 'FALSE',  
                            pb_stats       VARCHAR2 DEFAULT 'FALSE', 
                            pb_100_parts   VARCHAR2 DEFAULT 'FALSE', 
                            pb_apex_run    VARCHAR2 DEFAULT 'TRUE'   
                          , p_test_partition VARCHAR2 DEFAULT NULL    
                          , pb_force_updates VARCHAR2 DEFAULT 'FALSE' 
                          , pb_full_delta   VARCHAR2 DEFAULT 'FALSE'  
                          , pb_delta_job_nm VARCHAR2 DEFAULT 'FHIR LOAD CHANGES'  
                          ) IS

    p_new_version   BOOLEAN;
    p_load_all      BOOLEAN;
    p_load_data     BOOLEAN;
    p_run_bene      BOOLEAN;
    p_run_pta       BOOLEAN;
    p_run_ptb       BOOLEAN;
    p_run_ptd       BOOLEAN;
    p_bene_fltr     BOOLEAN;
    p_stats         BOOLEAN;
    p_100_parts     BOOLEAN;
    p_apex_run      BOOLEAN;
    p_force_updates BOOLEAN;

    l_cnt           NUMBER := 0;
    l_grp_nm        CCW_SPRT.SPRT_GRP.GRP_NAME%TYPE;

  BEGIN

    sprt_job_pkg.strt_prcdr(p_prcdr_name => 'FHIR_DATA_EXTRACT_PKG.LOAD_ALL_TABLES',
                            p_tbl_name   => upper('NONE'),
                            p_prcdr_type => 'I',
                            p_ld_dtl_id  => g_ld_dtl_id);

    p_new_version   := truefalsetoboolean(pb_new_version);
    p_load_all      := truefalsetoboolean(pb_load_all);
    p_load_data     := truefalsetoboolean(pb_load_data);
    p_run_bene      := truefalsetoboolean(pb_run_bene);
    p_run_pta       := truefalsetoboolean(pb_run_pta);
    p_run_ptb       := truefalsetoboolean(pb_run_ptb);
    p_run_ptd       := truefalsetoboolean(pb_run_ptd);
    p_bene_fltr     := truefalsetoboolean(pb_bene_fltr);
    p_stats         := truefalsetoboolean(pb_stats);
    p_100_parts     := truefalsetoboolean(pb_100_parts);
    p_apex_run      := truefalsetoboolean(pb_apex_run);
    p_force_updates := truefalsetoboolean(pb_force_updates);

    IF p_run_pta IS NULL THEN
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_All_tables - p_run_pta IS NULL');
    ELSIF p_run_pta THEN
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_All_tables - p_run_pta = TRUE');
    ELSE
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_All_tables - p_run_pta = FALSE');
    END IF;

    g_tot_rows := 0;

    EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_DYNAMIC_SAMPLING=0'; --alter session set optimizer_dynamic_sampling=0
    EXECUTE IMMEDIATE 'ALTER SESSION SET OPTIMIZER_ADAPTIVE_FEATURES=FALSE'; --alter session set optimizer_adaptive_features=true

    EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD-MON-YYYY''';

    -- TESTING --
    g_test_partition := p_test_partition;
    g_force_updates  := p_force_updates;

    dbms_application_info.set_client_info('load_all_tables ()');

    -- at least for testing - if NOT p_load_all below, does not load change data -
    --  then IF p_load_all should load all/sample data and NOT p_load_all should "not load all"

    IF p_load_all THEN

      --Create manifest file
      create_manifest_file('INITIAL', NULL, NULL);

      --Set all of the partitions that need to be processed because we are rerunning ALL
      update_meta_prcsng_dtl(p_prd_prcsng_ind => 'N',
                             pb_extrct_only   => 'FALSE');

      -- Create new clm_grp_id(s) as needed
      create_clm_grp_id(p_strt_dt,
                        p_end_dt,
                        p_part_num,
                        pb_run_pta,
                        pb_run_ptb,
                        pb_run_ptd,
                        'FALSE',
                        'TRUE'); 

      --******* Beneficiary
      IF p_run_bene THEN
        IF nvl(p_file, 'BENE') = 'BENE' THEN
          extract_bene(p_part_num,
                       pb_new_version,
                       pb_load_data,
                       pb_bene_fltr,
                       pb_100_parts,
                       'FALSE' 
                       );
        END IF;
        
        --- PROPOSED
                IF nvl(p_file, 'BENE') = 'BENE' THEN
          extract_bene_hstry(p_part_num,
                       pb_new_version,
                       pb_load_data,
                       pb_bene_fltr,
                       pb_100_parts,
                       'FALSE' 
                       );
        END IF;
      END IF;

      IF p_load_data THEN
        IF p_run_pta THEN
          load_pta_fact_tables(p_part_num, pb_stats, pb_100_parts, 'FALSE');
        END IF;

        IF p_run_ptb THEN
          load_ptb_fact_tables(p_part_num, pb_stats, pb_100_parts, 'FALSE');
        END IF;
      END IF;

      --******* Part B
      IF p_run_ptb THEN
        IF nvl(p_file, 'BCARRIER') = 'BCARRIER' THEN
          extract_bcarrier(p_part_num,
                           pb_new_version,
                           pb_load_data,
                           pb_stats,
                           pb_100_parts,
                           'FALSE' 
                           );
        END IF;

        IF nvl(p_file, 'DME') = 'DME' THEN
          extract_dme(p_part_num,
                      pb_new_version,
                      pb_load_data,
                      pb_stats,
                      pb_100_parts,
                      'FALSE' 
                      );
        END IF;
      END IF;

      --******* Part A
      IF p_run_pta THEN
        IF nvl(p_file, 'HHA') = 'HHA' THEN
          extract_hha(p_part_num,
                      pb_new_version,
                      pb_load_data,
                      pb_stats,
                      pb_100_parts,
                      'FALSE' 
                      );
        END IF;

        IF nvl(p_file, 'HOSPICE') = 'HOSPICE' THEN
          extract_hospice(p_part_num,
                          pb_new_version,
                          pb_load_data,
                          pb_stats,
                          pb_100_parts,
                          'FALSE' 
                          );
        END IF;

        IF nvl(p_file, 'INPATIENT') = 'INPATIENT' THEN
          extract_inpatient(p_part_num,
                            pb_new_version,
                            pb_load_data,
                            pb_stats,
                            pb_100_parts,
                            'FALSE' 
                            );
        END IF;

        IF nvl(p_file, 'OUTPATIENT') = 'OUTPATIENT' THEN
          extract_outpatient(p_part_num,
                             pb_new_version,
                             pb_load_data,
                             pb_stats,
                             pb_100_parts,
                             'FALSE' 
                             );
        END IF;

        IF nvl(p_file, 'SNF') = 'SNF' THEN
          extract_snf(p_part_num,
                      pb_new_version,
                      pb_load_data,
                      pb_stats,
                      pb_100_parts,
                      'FALSE' 
                      );
        END IF;
      END IF;

      --******* Part D
      IF p_run_ptd THEN
        IF nvl(p_file, 'PDE') = 'PDE' THEN
          extract_pde(p_part_num,
                      pb_new_version,
                      pb_load_data,
                      pb_stats,
                      pb_100_parts,
                      'FALSE' 
                      );
        END IF;
      END IF;

    END IF;

    --************** Changes *****************
    IF NOT p_load_all THEN

      IF pb_full_delta = 'FALSE' THEN
        l_grp_nm := pb_delta_job_nm;

        get_latest_load_desc (p_grp_type_nm => 'FHIR'     -- always true here
                            , p_grp_nm => NVL (l_grp_nm, 'FHIR LOAD CHANGES')
                            , p_latest_ld_desc => g_latest_load_desc);
      ELSE
         g_latest_load_desc := NULL;  -- Load all delta's that are unprocessed.
      END IF;

      -- Fix for null clm_grp_id - null job_ld_dt, create_clm_grp_id has been changed to get clm_grp_ids for
      -- old ccw_ld_Desc
      l_cnt := 0;
      SELECT /*+ parallel (16) */ COUNT(*) INTO l_cnt FROM ccw_owner.fhir_pta_ld_clm_status pta
       WHERE pta.clm_grp_id IS NULL;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_all_Tables: Count of NULL claim group IDs in PartA: '||l_cnt);
      l_cnt := 0;
      SELECT /*+ parallel (16) */ COUNT(*) INTO l_cnt FROM ccw_owner.fhir_ptb_ld_clm_status ptb
       WHERE ptb.clm_grp_id IS NULL;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_all_Tables: Count of NULL claim group IDs in PartB: '||l_cnt);
      l_cnt := 0;
      SELECT /*+ parallel (16) */ COUNT(*) INTO l_cnt FROM ccw_owner.fhir_ptd_ld_clm_status ptd
       WHERE ptd.clm_grp_id IS NULL;
      sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                                 p_err_info  => 'load_all_Tables: Count of NULL claim group IDs in PartD: '||l_cnt);

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_pta_ld_clm_status SET job_ld_dt = NULL
       WHERE clm_grp_id IS NULL;
      COMMIT;

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_ptb_ld_clm_status SET job_ld_dt = NULL
       WHERE clm_grp_id IS NULL;
      COMMIT;

      UPDATE /*+ parallel (16) */ ccw_owner.fhir_ptd_ld_clm_status SET job_ld_dt = NULL
       WHERE clm_grp_id IS NULL;
      COMMIT;

      -- Create new clm_grp_id(s) as needed
      create_clm_grp_id(p_strt_dt,
                        p_end_dt,
                        p_part_num,
                        pb_run_pta,
                        pb_run_ptb,
                        pb_run_ptd,
                        'FALSE',
                        'FALSE'); 

      IF p_run_bene THEN
        IF nvl(p_file, 'BENE') = 'BENE' THEN
          extract_bene_changes(p_strt_dt,
                               p_end_dt,
                               p_prcsg_dt,
                               p_part_num,
                               p_load_data,
                               p_bene_fltr,
                               p_100_parts,
                               p_new_version,
                               'FALSE'); 
        END IF;
      END IF;

      -- Load claim info loaded in last load of data.
      new_claims(p_strt_dt,
                 p_end_dt,
                 p_part_num,
                 p_run_pta,
                 p_run_ptb,
                 p_run_ptd,
                 p_100_parts,
                 p_new_version);

      -- Load UPDATE claim info, none matched claim_ids will be loaded as INSERT status
      updated_claims(p_strt_dt,
                     p_end_dt,
                     p_part_num,
                     p_run_pta,
                     p_run_ptb,
                     p_run_ptd,
                     p_new_version); 

      -- Copy/insert Clm_id record info to the FHIR_ld_status tables depending on "run" boolean parameters.
      clm_bene_id_updates(p_strt_dt   => NULL,
                          p_end_dt    => NULL,
                          p_part_num  => p_part_num,
                          p_run_pta   => p_run_pta,
                          p_run_ptb   => p_run_ptb,
                          p_run_ptd   => p_run_ptd,
                          p_100_parts => p_100_parts);

      -----------------------------------------------------------------------
      --
      -- Data Validation
      --
      -- Note any duplicate claim IDs in the FHIR load table
      chk_dup_FHIR_clm_ids (pb_run_pta => 'TRUE'
                          , pb_run_ptb => 'TRUE'
                          , pb_run_ptd => 'TRUE'
                          , pb_extrct_only => 'FALSE');    
      -----------------------------------------------------------------------
      --******* Part B
      IF p_run_ptb THEN
        IF nvl(p_file, 'BCARRIER') = 'BCARRIER' THEN
          extract_bcarrier_changes(p_strt_dt,
                                   p_end_dt,
                                   p_prcsg_dt,
                                   p_part_num,
                                   pb_load_data,
                                   pb_new_version,
                                   'FALSE'); 
        END IF;

        IF nvl(p_file, 'DME') = 'DME' THEN
          extract_dme_changes(p_strt_dt,
                              p_end_dt,
                              p_prcsg_dt,
                              p_part_num,
                              pb_load_data,
                              pb_new_version);

        END IF;
      END IF; -- IF p_run_ptb

      --******* Part A
      IF p_run_pta THEN
        IF nvl(p_file, 'HHA') = 'HHA' THEN
          extract_hha_changes(p_strt_dt,
                              p_end_dt,
                              p_prcsg_dt,
                              p_part_num,
                              pb_load_data,
                              pb_new_version);
          IF p_stats THEN
            IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_HHA',
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
              RAISE cannot_annlz_tbl;
            END IF;
          END IF;
        END IF;

        IF nvl(p_file, 'HOSPICE') = 'HOSPICE' THEN
          extract_hospice_changes(p_strt_dt,
                                  p_end_dt,
                                  p_prcsg_dt,
                                  p_part_num,
                                  pb_load_data,
                                  pb_new_version);
          IF p_stats THEN
            IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_HOSPICE',
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
              RAISE cannot_annlz_tbl;
            END IF;

          END IF;
        END IF;

        IF nvl(p_file, 'INPATIENT') = 'INPATIENT' THEN
          extract_inpatient_changes(p_strt_dt,
                                    p_end_dt,
                                    p_prcsg_dt,
                                    p_part_num,
                                    pb_load_data,
                                    pb_new_version);

          IF p_stats THEN
            IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_INPATIENT',
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
              RAISE cannot_annlz_tbl;
            END IF;
          END IF;
        END IF;

        IF nvl(p_file, 'OUTPATIENT') = 'OUTPATIENT' THEN
          extract_outpatient_changes(p_strt_dt,
                                     p_end_dt,
                                     p_prcsg_dt,
                                     p_part_num,
                                     pb_load_data,
                                     pb_new_version);
          IF p_stats THEN
            IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_OUTPATIENT',
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
              RAISE cannot_annlz_tbl;
            END IF;
          END IF;
        END IF;

        IF nvl(p_file, 'SNF') = 'SNF' THEN
          extract_snf_changes(p_strt_dt,
                              p_end_dt,
                              p_prcsg_dt,
                              p_part_num,
                              pb_load_data,
                              pb_new_version);
          IF p_stats THEN
            IF ccw_owner.src_ddl.anlyz_tbl(p_tbl_nm    => 'TEMP_SNF',
                                           p_ecode_out => g_ecode,
                                           p_errm_out  => g_errm) = FALSE THEN
              RAISE cannot_annlz_tbl;
            END IF;
          END IF;
        END IF;
      END IF; -- If p_run_pta

      --******* Part D
      IF p_run_ptd THEN
        IF nvl(p_file, 'PDE') = 'PDE' THEN
          extract_pde_changes(p_strt_dt,
                              p_end_dt,
                              p_prcsg_dt,
                              p_part_num,
                              pb_load_data,
                              pb_new_version);

        END IF;
      END IF;

      -- Update "load status" tables to make sure changes are not reloaded next run
      IF NOT p_apex_run THEN
        -- parameter should be TRUE when run from apex
        updatefhir_ld_clm_status(pb_run_pta,
                                 pb_run_ptb,
                                 pb_run_ptd,
                                 pb_apex_run);
      END IF;

    END IF; -- if changes/delta

    <<end_test>>
    NULL;

    sprt_job_pkg.log_prcdr_msg(p_ld_dtl_id => g_ld_dtl_id,
                               p_err_info  => 'LOAD_ALL_TABLES successful');

    dbms_application_info.set_client_info('end -  ');

    IF NOT p_apex_run THEN
      -- parameter should be TRUE when run from apex
      UPDATE /*+ parallel (16) */ ccw_owner.meta_prcsng_dtl
         SET prd_prcsng_ind = 'N'
       WHERE prd_prcsng_ind = 'Y';

      --Add closing tag to the manifest file
      utl_file.put_line(g_manifest_file, '</dataSetManifest>');
    END IF;

    COMMIT;

    --Close the manifest file
    IF NOT p_apex_run THEN
      -- parameter should be TRUE when run from apex
      -- If this is an APEX run we do not want this done until everthing is done.
      utl_file.fclose(g_manifest_file);
    END IF;

    --Create .done file to indicate to the file transfer script on the server
    --that the current file is ready to transfer
    IF NOT p_apex_run THEN
      -- parameter should be TRUE when run from apex
      -- If this is an APEX run we do not want this done until everthing is done.
      create_done_file(REPLACE(g_utl_manifest_file, '.manifest', '.done'));
    END IF;

    -- Successful end of job
    sprt_job_pkg.end_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                           p_num_rows  => g_tot_rows,
                           p_annlz     => TRUE); -- analyze

  EXCEPTION
    WHEN OTHERS THEN
      sprt_job_pkg.fail_prcdr(p_ld_dtl_id => g_ld_dtl_id,
                              p_err_cd    => SQLCODE,
                              p_err_msg   => substr(SQLERRM, 1, 200),
                              p_err_info  => 'Other Error');
      RAISE;
  END load_all_tables;

END fhir_data_extract_pkg;
/
