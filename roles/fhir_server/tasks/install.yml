---

- name: Install Pre-requisites
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    # Needed to supply `keytool` and also to run Wildfly.
    - java-1.8.0-openjdk-devel
    # Needed to use the s3_object module in these tasks.
    - python-boto
  become: true

- name: Create FHIR Service User
  user:
    name: bb-fhir
    shell: /bin/false
  become: true

- name: Create FHIR Service Directory
  file:
    path: /usr/local/bluebutton-server-app
    state: directory
    owner: bb-fhir
    group: bb-fhir
    mode: u=rwx,g=rx,o=rx
  become: true

- name: Copy Artifacts
  s3:
    mode: get
    bucket: "{{ s3_bucket_deployment }}"
    object: "{{ item }}"
    dest: "/usr/local/bluebutton-server-app/{{ item }}"
  with_items:
    - bluebutton-server-app.war
    - wildfly-dist.tar.gz
    - bluebutton-server-app-server-config-healthapt.sh
  become: true

- name: Extract Wildfly
  unarchive:
    src: /usr/local/bluebutton-server-app/wildfly-dist.tar.gz
    dest: /usr/local/bluebutton-server-app
    copy: false
    owner: bb-fhir
    group: bb-fhir
    mode: u=rwx,g=rx,o=rx
  become: true

- name: Set Variable for Wildfly Directory
  set_fact:
    wildfly_dir: "/usr/local/bluebutton-server-app/wildfly-{{ wildfly_version }}"

- name: Create Wildfly 'standalone.conf' File
  template:
    src: standalone.conf.j2
    dest: "{{ wildfly_dir }}/bin/standalone.conf"
    owner: bb-fhir
    group: bb-fhir
    mode: u=rwx,g=rx,o=rx
  become: true

- name: Create FHIR Service Definition
  template:
    src: bluebutton-server-app.service.j2
    dest: /etc/systemd/system/bluebutton-server-app.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  become: true
  register: template_bluebutton_app_service

- name: Load FHIR Service Definition
  command: /usr/bin/systemctl daemon-reload
  become: true
  when: template_bluebutton_app_service.changed

- name: Start FHIR Service
  service:
    name: bluebutton-server-app
    state: started
    enabled: true
  become: true

- file:
    path: /usr/local/bluebutton-server-app/bluebutton-server-app-server-config-healthapt.sh
    mode: u=rwx,g=rwx,o=rwx
  become: true

# If the keypairs aren't already present in S3, generate them all.
- include: keypairs.yml

# FIXME: Replace this with download via URL, so that file ownership and mode can be set correctly.
- name: Download FHIR Server Keystore and Client Public Certs
  s3:
    bucket: "{{ s3_bucket_deployment }}"
    object: "{{ item }}"
    dest: "{{ wildfly_dir }}/standalone/configuration/{{ item }}"
    mode: get
  with_items:
    - bluebutton-backend-fhir-servers-keystore.jks
    - bluebutton-backend-fhir-clients-etl.cer
  become: true

- name: Download FHIR Frontend Client CA Cert
  copy:
    src: "files/{{ item }}"
    dest: "{{ wildfly_dir }}/standalone/configuration/{{ item }}"
  with_items:
    - bluebutton-backend-fhir-clients-frontend-ca.cer
  become: true

- name: Create FHIR Server Truststore
  command: "{{ item }}"
  with_items:
    - "keytool -importcert -noprompt -alias client-etl -file {{ wildfly_dir }}/standalone/configuration/bluebutton-backend-fhir-clients-etl.cer -keypass changeit -keystore {{ wildfly_dir }}/standalone/configuration/server-truststore.jks -storepass changeit"
    - "keytool -import -trustcacerts -noprompt -alias client-frontend -file {{ wildfly_dir }}/standalone/configuration/bluebutton-backend-fhir-clients-frontend-ca.cer -keypass changeit -keystore {{ wildfly_dir }}/standalone/configuration/server-truststore.jks -storepass changeit"
  become: true

- name: Run 'server-config-healthapt.sh' to Configure FHIR Server
  command: "/usr/local/bluebutton-server-app/bluebutton-server-app-server-config-healthapt.sh --serverhome {{ wildfly_dir }} --httpsport {{ backend_fhir_port_internal }} --keystore {{ wildfly_dir }}/standalone/configuration/bluebutton-backend-fhir-servers-keystore.jks --truststore {{ wildfly_dir }}/standalone/configuration/server-truststore.jks --war /usr/local/bluebutton-server-app/bluebutton-server-app.war --dburl jdbc:postgresql://{{ hostvars['localhost']['backend_postgres_endpoint'] }}:{{ hostvars['localhost']['backend_postgres_port'] }}/fhirdb --dbusername {{ backend_postgres_master_username }} --dbpassword {{ backend_postgres_master_password }}"
  become: true

