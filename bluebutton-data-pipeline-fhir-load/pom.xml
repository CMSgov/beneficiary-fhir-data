<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.3</maven>
	</prerequisites>

	<parent>
		<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
		<artifactId>bluebutton-data-pipeline</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>bluebutton-data-pipeline-fhir-load</artifactId>
	<packaging>jar</packaging>

	<description>
		The 'transform' and 'load' portion of the CCW-to-Blue-Button 
		extract-transform-load pipeline.
	</description>

	<properties>
	</properties>

	<dependencies>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-rif-extract</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<!-- Provides various utilities, particularly for managing DB connections. -->
			<groupId>com.justdavis.karl.jessentials</groupId>
			<artifactId>jessentials-misc</artifactId>
		</dependency>

		<dependency>
			<!-- Provides a sane facade for the giant mess of incompatible logging 
				frameworks in Java. -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<!-- Used to monitor performance and other statistics at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<dependency>
			<!-- Provides the FHIR client being used to create/push resources to the 
				server. -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
		</dependency>
		<dependency>
			<!-- At least one "structures" JAR must also be included -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu2.1</artifactId>
		</dependency>

		<dependency>
			<!-- Provides utilities for working with Java 8 streams, including batching 
				features that are used in this project. -->
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava</artifactId>
		</dependency>

		<dependency>
			<!-- Allows for Spring DI and TX management inside tests. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used to run our unit and integration tests. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Logback is used as the logging target/backend for SLF4J during tests: 
				all logging events will be sent to it. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw-extract</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw-test</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-sampledata</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used to monitor the JVM's memory usage, garbage collection, etc. 
				at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used in ITs to launch embedded instances of the Blue Button FHIR 
				server. -->
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- This must be listed as a dependency in order for the Cargo plugin 
				to use it below (note: WARs are automatically excluded from any/all classpaths 
				that Maven generates, so this shouldn't affect anything else). -->
			<groupId>gov.hhs.cms.bluebutton.fhir</groupId>
			<artifactId>bbonfhir-server-app</artifactId>
			<version>0.1.0-SNAPSHOT</version>
			<type>war</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Configure the Cargo plugin to start up an embedded Jetty server, 
						running the Blue Button FHIR server. This plugin is executed during the project's 
						ITs, or can be manually launched by running `mvn cargo:run` from this project. -->
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.5.0</version>
					<configuration>
						<container>
							<containerId>jetty9x</containerId>
							<artifactInstaller>
								<!-- Use a throwaway Jetty install (in the project's target/ directory) 
									to run the ITs. Tried using an embedded Jetty instance via Cargo, but the 
									web application fails to deploy that way for some reason: it throws "java.lang.IllegalStateException: 
									zip file closed" errors. -->
								<groupId>org.eclipse.jetty</groupId>
								<artifactId>jetty-distribution</artifactId>
								<version>9.3.10.v20160621</version>
							</artifactInstaller>
							<log>${project.build.directory}/failsafe-reports/cargo.log</log>
							<output>${project.build.directory}/failsafe-reports/cargo-container.log</output>
							<systemProperties>
								<!-- Configure the FHIR server to use a temporary in-mem DB. -->
								<bbfhir.db.url>jdbc:hsqldb:mem:test</bbfhir.db.url>
								<bbfhir.db.username></bbfhir.db.username>
								<bbfhir.db.password></bbfhir.db.password>
							</systemProperties>
						</container>
						<configuration>
							<properties>
								<cargo.servlet.port>9093</cargo.servlet.port>
								<cargo.jvmargs>-Xmx2500m</cargo.jvmargs>
							</properties>
						</configuration>
						<deployables>
							<deployable>
								<!-- The WAR for the Blue Button FHIR server. -->
								<groupId>gov.hhs.cms.bluebutton.fhir</groupId>
								<artifactId>bbonfhir-server-app</artifactId>
								<type>war</type>
								<properties>
									<!-- The webapp will be available at 'http://localhost:9093/'. -->
									<context>/</context>
								</properties>

								<!-- Wait up to 120s for the webapp to become available at the specified 
									URL. -->
								<pingURL>http://localhost:9093/</pingURL>
								<pingTimeout>120000</pingTimeout>
							</deployable>
						</deployables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Launch an embedded Jetty instance hosting the Blue Button FHIR server 
					prior to running this project's integration tests, and stop it after the 
					integration tests. Alternatively, for manual testing, manually run 'mvn cargo:run' 
					to start the Jetty server. -->
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<executions>
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Will run the `*IT.java` integration tests in this project, as part 
					of the build. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
