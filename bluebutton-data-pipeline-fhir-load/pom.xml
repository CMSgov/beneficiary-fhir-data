<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.3</maven>
	</prerequisites>

	<parent>
		<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
		<artifactId>bluebutton-data-pipeline</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>bluebutton-data-pipeline-fhir-load</artifactId>
	<packaging>jar</packaging>

	<description>
		The 'transform' and 'load' portion of the CCW-to-Blue-Button 
		extract-transform-load pipeline.
	</description>

	<properties>
	</properties>

	<dependencies>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<!-- Provides various utilities, particularly for managing DB connections. -->
			<groupId>com.justdavis.karl.jessentials</groupId>
			<artifactId>jessentials-misc</artifactId>
		</dependency>

		<dependency>
			<!-- Provides a sane facade for the giant mess of incompatible logging 
				frameworks in Java. -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<!-- Used to monitor performance and other statistics at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<dependency>
			<!-- Provides the FHIR client being used to create/push resources to the 
				server. -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
		</dependency>
		<dependency>
			<!-- At least one "structures" JAR must also be included -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu2.1</artifactId>
		</dependency>

		<dependency>
			<!-- Provides utilities for working with Java 8 streams, including batching 
				features that are used in this project. -->
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<!-- Allows for Spring DI and TX management inside tests. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used to run our unit and integration tests. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Logback is used as the logging target/backend for SLF4J during tests: 
				all logging events will be sent to it. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw-extract</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-ccw-test</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-sampledata</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used to monitor the JVM's memory usage, garbage collection, etc. 
				at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Will run the `*IT.java` integration tests in this project, as part 
					of the build. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
