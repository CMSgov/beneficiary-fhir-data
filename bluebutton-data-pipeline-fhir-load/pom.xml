<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.3</maven>
	</prerequisites>

	<parent>
		<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
		<artifactId>bluebutton-data-pipeline</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>bluebutton-data-pipeline-fhir-load</artifactId>
	<packaging>jar</packaging>

	<description>
		The 'transform' and 'load' portion of the CCW-to-Blue-Button 
		extract-transform-load pipeline.
	</description>

	<dependencies>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-rif-extract</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<!-- Provides various utilities, particularly for managing DB connections. -->
			<groupId>com.justdavis.karl.jessentials</groupId>
			<artifactId>jessentials-misc</artifactId>
		</dependency>

		<dependency>
			<!-- Provides a sane facade for the giant mess of incompatible logging 
				frameworks in Java. -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<!-- Used to monitor performance and other statistics at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<dependency>
			<!-- Provides the FHIR client being used to create/push resources to the 
				server. -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
		</dependency>
		<dependency>
			<!-- At least one "structures" JAR must also be included -->
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu3</artifactId>
		</dependency>

		<dependency>
			<!-- Used to run our unit and integration tests. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Logback is used as the logging target/backend for SLF4J during tests: 
				all logging events will be sent to it. -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>gov.hhs.cms.bluebutton.datapipeline</groupId>
			<artifactId>bluebutton-data-pipeline-sampledata</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Used to monitor the JVM's memory usage, garbage collection, etc. 
				at runtime. -->
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Use the dependency plugin to copy the Blue Button FHIR Server, for 
					use in ITs. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>server-copy-artifacts</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Marks the `bluebutton-server-app-server-*.sh` scripts as executable. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>server-fix-artifacts-permissions</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<chmod perm="a+x">
									<fileset dir="${project.build.directory}/bluebutton-server">
										<include name="*.sh" />
									</fileset>
								</chmod>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Launch a Java web server hosting the Blue Button FHIR server prior 
					to running this project's integration tests, and stop it after the integration 
					tests. The server will serve HTTPS on port 9094 (as configured in the script), 
					and the FHIR server will be hosted at the root ("/") context. Alternatively, 
					for manual testing, manually run 'mvn dependency:copy antrun:run org.codehaus.mojo:exec-maven-plugin:exec@server-start' 
					to start the server. -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>server-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.build.directory}/bluebutton-server/bbonfhir-server-app-server-start.sh</executable>
							<arguments>
								<argument>--javahome</argument>
								<argument>${java.home}</argument>
								<argument>--maxheaparg</argument>
								<argument>${its.bbfhir.server.jvmargs}</argument>
								<argument>--directory</argument>
								<argument>${project.build.directory}/bluebutton-server</argument>
								<argument>--keystore</argument>
								<argument>${project.build.directory}/../../dev/ssl-stores/server.keystore</argument>
								<argument>--truststore</argument>
								<argument>${project.build.directory}/../../dev/ssl-stores/server.truststore</argument>
								<argument>--dburl</argument>
								<argument>${its.bbfhir.db.url}</argument>
								<argument>--dbusername</argument>
								<argument>${its.bbfhir.db.username}</argument>
								<argument>--dbpassword</argument>
								<argument>${its.bbfhir.db.password}</argument>
							</arguments>

							<!-- Don't start/stop the server if the ITs are being skipped. -->
							<skip>${skipITs}</skip>
						</configuration>
					</execution>
					<execution>
						<id>server-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.build.directory}/bluebutton-server/bbonfhir-server-app-server-stop.sh</executable>
							<arguments>
								<argument>--directory</argument>
								<argument>${project.build.directory}/bluebutton-server</argument>
							</arguments>

							<!-- Don't start/stop the server if the ITs are being skipped. -->
							<skip>${skipITs}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Will run the `*IT.java` integration tests in this project, as part 
					of the build. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- When activated via '-Prun-its-with-derby-db' this profile sets the 
				ITs to run with an on-disk DB, instead of an in-memory one. This needs to 
				be activated when running on systems without a lot of memory (such as the 
				CI server). Note that, on Karl's personal laptop, this adds an extra 30 minutes 
				or so to the project's build time. -->
			<!-- Note: As of 2016-07-23, the CI server for this project only has 4 
				GB of memory, and no swap space. Running FhirLoaderIT.loadRifDataSampleB() 
				takes at least 2.5 GB of free memory, and Cargo was failing on the CI server 
				due to its inability to reserve that much (when the DB was configured to 
				be in-memory). -->
			<id>run-its-with-derby-db</id>
			<properties>
				<its.bbfhir.server.jvmargs>-Xmx512m</its.bbfhir.server.jvmargs>
				<its.bbfhir.db.url>jdbc:hsqldb:file:test</its.bbfhir.db.url>
				<its.bbfhir.db.username></its.bbfhir.db.username>
				<its.bbfhir.db.password></its.bbfhir.db.password>
			</properties>
		</profile>
	</profiles>

</project>
